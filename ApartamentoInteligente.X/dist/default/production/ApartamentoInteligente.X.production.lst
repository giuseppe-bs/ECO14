

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 30 21:57:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  006AAD                     __pidataCOMRAM:
    82                           	opt callstack 0
    83                           
    84                           ;initializer for _senha
    85  006AAD  FFFF               	dw	65535
    86                           
    87                           ;initializer for _atraso
    88  006AAF  000F               	dw	15
    89                           
    90                           ;initializer for _atraso_min
    91  006AB1  0005               	dw	5
    92                           
    93                           ;initializer for _temperatura
    94  006AB3  19                 	db	25
    95                           
    96                           	psect	mediumconst
    97  007E5A                     __pmediumconst:
    98                           	opt callstack 0
    99  007E5A  00                 	db	0
   100  007E5B                     ssd@num:
   101                           	opt callstack 0
   102  007E5B  003F               	dw	63
   103  007E5D  0006               	dw	6
   104  007E5F  005B               	dw	91
   105  007E61  004F               	dw	79
   106  007E63  0066               	dw	102
   107  007E65  006D               	dw	109
   108  007E67  007D               	dw	125
   109  007E69  0007               	dw	7
   110  007E6B  007F               	dw	127
   111  007E6D  0067               	dw	103
   112  007E6F                     __end_ofssd@num:
   113                           	opt callstack 0
   114  007E6F  003F               	dw	63
   115  007E71  0006               	dw	6
   116  007E73  005B               	dw	91
   117  007E75  004F               	dw	79
   118  007E77  0066               	dw	102
   119  007E79  006D               	dw	109
   120  007E7B  007D               	dw	125
   121  007E7D  0007               	dw	7
   122  007E7F  007F               	dw	127
   123  007E81  0067               	dw	103
   124  007E83                     __end_of_num:
   125                           	opt callstack 0
   126  007E83                     _linha:
   127                           	opt callstack 0
   128  007E83  01                 	db	1
   129  007E84  02                 	db	2
   130  007E85  04                 	db	4
   131  007E86  00                 	db	0
   132  007E87                     __end_of_linha:
   133                           	opt callstack 0
   134  007E87                     STR_10:
   135  007E87  50                 	db	80	;'P'
   136  007E88  6F                 	db	111	;'o'
   137  007E89  72                 	db	114	;'r'
   138  007E8A  74                 	db	116	;'t'
   139  007E8B  61                 	db	97	;'a'
   140  007E8C  20                 	db	32
   141  007E8D  64                 	db	100	;'d'
   142  007E8E  65                 	db	101	;'e'
   143  007E8F  73                 	db	115	;'s'
   144  007E90  74                 	db	116	;'t'
   145  007E91  72                 	db	114	;'r'
   146  007E92  61                 	db	97	;'a'
   147  007E93  6E                 	db	110	;'n'
   148  007E94  63                 	db	99	;'c'
   149  007E95  61                 	db	97	;'a'
   150  007E96  64                 	db	100	;'d'
   151  007E97  61                 	db	97	;'a'
   152  007E98  00                 	db	0
   153  007E99                     STR_50:
   154  007E99  41                 	db	65	;'A'
   155  007E9A  72                 	db	114	;'r'
   156  007E9B  20                 	db	32
   157  007E9C  43                 	db	67	;'C'
   158  007E9D  6F                 	db	111	;'o'
   159  007E9E  6E                 	db	110	;'n'
   160  007E9F  64                 	db	100	;'d'
   161  007EA0  69                 	db	105	;'i'
   162  007EA1  63                 	db	99	;'c'
   163  007EA2  69                 	db	105	;'i'
   164  007EA3  6F                 	db	111	;'o'
   165  007EA4  6E                 	db	110	;'n'
   166  007EA5  61                 	db	97	;'a'
   167  007EA6  64                 	db	100	;'d'
   168  007EA7  6F                 	db	111	;'o'
   169  007EA8  00                 	db	0
   170  007EA9                     STR_28:
   171  007EA9  50                 	db	80	;'P'
   172  007EAA  6F                 	db	111	;'o'
   173  007EAB  72                 	db	114	;'r'
   174  007EAC  74                 	db	116	;'t'
   175  007EAD  61                 	db	97	;'a'
   176  007EAE  20                 	db	32
   177  007EAF  54                 	db	84	;'T'
   178  007EB0  72                 	db	114	;'r'
   179  007EB1  61                 	db	97	;'a'
   180  007EB2  6E                 	db	110	;'n'
   181  007EB3  63                 	db	99	;'c'
   182  007EB4  61                 	db	97	;'a'
   183  007EB5  64                 	db	100	;'d'
   184  007EB6  61                 	db	97	;'a'
   185  007EB7  00                 	db	0
   186  007EB8                     STR_26:
   187  007EB8  50                 	db	80	;'P'
   188  007EB9  6F                 	db	111	;'o'
   189  007EBA  72                 	db	114	;'r'
   190  007EBB  74                 	db	116	;'t'
   191  007EBC  61                 	db	97	;'a'
   192  007EBD  20                 	db	32
   193  007EBE  46                 	db	70	;'F'
   194  007EBF  65                 	db	101	;'e'
   195  007EC0  63                 	db	99	;'c'
   196  007EC1  68                 	db	104	;'h'
   197  007EC2  61                 	db	97	;'a'
   198  007EC3  64                 	db	100	;'d'
   199  007EC4  61                 	db	97	;'a'
   200  007EC5  00                 	db	0
   201  007EC6                     STR_8:
   202  007EC6  61                 	db	97	;'a'
   203  007EC7  20                 	db	32
   204  007EC8  6E                 	db	110	;'n'
   205  007EC9  6F                 	db	111	;'o'
   206  007ECA  76                 	db	118	;'v'
   207  007ECB  61                 	db	97	;'a'
   208  007ECC  20                 	db	32
   209  007ECD  73                 	db	115	;'s'
   210  007ECE  65                 	db	101	;'e'
   211  007ECF  6E                 	db	110	;'n'
   212  007ED0  68                 	db	104	;'h'
   213  007ED1  61                 	db	97	;'a'
   214  007ED2  00                 	db	0
   215  007ED3                     STR_9:
   216  007ED3  50                 	db	80	;'P'
   217  007ED4  6F                 	db	111	;'o'
   218  007ED5  72                 	db	114	;'r'
   219  007ED6  74                 	db	116	;'t'
   220  007ED7  61                 	db	97	;'a'
   221  007ED8  20                 	db	32
   222  007ED9  41                 	db	65	;'A'
   223  007EDA  62                 	db	98	;'b'
   224  007EDB  65                 	db	101	;'e'
   225  007EDC  72                 	db	114	;'r'
   226  007EDD  74                 	db	116	;'t'
   227  007EDE  61                 	db	97	;'a'
   228  007EDF  00                 	db	0
   229  007EE0                     STR_46:
   230  007EE0  31                 	db	49	;'1'
   231  007EE1  2D                 	db	45
   232  007EE2  4D                 	db	77	;'M'
   233  007EE3  75                 	db	117	;'u'
   234  007EE4  64                 	db	100	;'d'
   235  007EE5  61                 	db	97	;'a'
   236  007EE6  72                 	db	114	;'r'
   237  007EE7  20                 	db	32
   238  007EE8  54                 	db	84	;'T'
   239  007EE9  65                 	db	101	;'e'
   240  007EEA  6D                 	db	109	;'m'
   241  007EEB  70                 	db	112	;'p'
   242  007EEC  00                 	db	0
   243  007EED                     STR_11:
   244  007EED  63                 	db	99	;'c'
   245  007EEE  6F                 	db	111	;'o'
   246  007EEF  6D                 	db	109	;'m'
   247  007EF0  20                 	db	32
   248  007EF1  73                 	db	115	;'s'
   249  007EF2  75                 	db	117	;'u'
   250  007EF3  63                 	db	99	;'c'
   251  007EF4  65                 	db	101	;'e'
   252  007EF5  73                 	db	115	;'s'
   253  007EF6  73                 	db	115	;'s'
   254  007EF7  6F                 	db	111	;'o'
   255  007EF8  00                 	db	0
   256  007EF9                     STR_44:
   257  007EF9  31                 	db	49	;'1'
   258  007EFA  2D                 	db	45
   259  007EFB  6C                 	db	108	;'l'
   260  007EFC  69                 	db	105	;'i'
   261  007EFD  67                 	db	103	;'g'
   262  007EFE  61                 	db	97	;'a'
   263  007EFF  72                 	db	114	;'r'
   264  007F00  20                 	db	32
   265  007F01  41                 	db	65	;'A'
   266  007F02  43                 	db	67	;'C'
   267  007F03  00                 	db	0
   268  007F04                     STR_49:
   269  007F04  44                 	db	68	;'D'
   270  007F05  65                 	db	101	;'e'
   271  007F06  73                 	db	115	;'s'
   272  007F07  6C                 	db	108	;'l'
   273  007F08  69                 	db	105	;'i'
   274  007F09  67                 	db	103	;'g'
   275  007F0A  61                 	db	97	;'a'
   276  007F0B  6E                 	db	110	;'n'
   277  007F0C  64                 	db	100	;'d'
   278  007F0D  6F                 	db	111	;'o'
   279  007F0E  00                 	db	0
   280  007F0F                     STR_36:
   281  007F0F  64                 	db	100	;'d'
   282  007F10  65                 	db	101	;'e'
   283  007F11  73                 	db	115	;'s'
   284  007F12  6C                 	db	108	;'l'
   285  007F13  69                 	db	105	;'i'
   286  007F14  67                 	db	103	;'g'
   287  007F15  61                 	db	97	;'a'
   288  007F16  6E                 	db	110	;'n'
   289  007F17  64                 	db	100	;'d'
   290  007F18  6F                 	db	111	;'o'
   291  007F19  00                 	db	0
   292  007F1A                     STR_47:
   293  007F1A  32                 	db	50	;'2'
   294  007F1B  2D                 	db	45
   295  007F1C  44                 	db	68	;'D'
   296  007F1D  65                 	db	101	;'e'
   297  007F1E  73                 	db	115	;'s'
   298  007F1F  6C                 	db	108	;'l'
   299  007F20  69                 	db	105	;'i'
   300  007F21  67                 	db	103	;'g'
   301  007F22  61                 	db	97	;'a'
   302  007F23  72                 	db	114	;'r'
   303  007F24  00                 	db	0
   304  007F25                     STR_40:
   305  007F25  32                 	db	50	;'2'
   306  007F26  2D                 	db	45
   307  007F27  64                 	db	100	;'d'
   308  007F28  65                 	db	101	;'e'
   309  007F29  73                 	db	115	;'s'
   310  007F2A  6C                 	db	108	;'l'
   311  007F2B  69                 	db	105	;'i'
   312  007F2C  67                 	db	103	;'g'
   313  007F2D  61                 	db	97	;'a'
   314  007F2E  72                 	db	114	;'r'
   315  007F2F  00                 	db	0
   316  007F30                     STR_41:
   317  007F30  31                 	db	49	;'1'
   318  007F31  2D                 	db	45
   319  007F32  41                 	db	65	;'A'
   320  007F33  75                 	db	117	;'u'
   321  007F34  6D                 	db	109	;'m'
   322  007F35  65                 	db	101	;'e'
   323  007F36  6E                 	db	110	;'n'
   324  007F37  74                 	db	116	;'t'
   325  007F38  61                 	db	97	;'a'
   326  007F39  72                 	db	114	;'r'
   327  007F3A  00                 	db	0
   328  007F3B                     STR_42:
   329  007F3B  32                 	db	50	;'2'
   330  007F3C  2D                 	db	45
   331  007F3D  44                 	db	68	;'D'
   332  007F3E  69                 	db	105	;'i'
   333  007F3F  6D                 	db	109	;'m'
   334  007F40  69                 	db	105	;'i'
   335  007F41  6E                 	db	110	;'n'
   336  007F42  75                 	db	117	;'u'
   337  007F43  69                 	db	105	;'i'
   338  007F44  72                 	db	114	;'r'
   339  007F45  00                 	db	0
   340  007F46                     STR_15:
   341  007F46  49                 	db	73	;'I'
   342  007F47  6E                 	db	110	;'n'
   343  007F48  63                 	db	99	;'c'
   344  007F49  6F                 	db	111	;'o'
   345  007F4A  72                 	db	114	;'r'
   346  007F4B  72                 	db	114	;'r'
   347  007F4C  65                 	db	101	;'e'
   348  007F4D  74                 	db	116	;'t'
   349  007F4E  61                 	db	97	;'a'
   350  007F4F  00                 	db	0
   351  007F50                     STR_53:
   352  007F50  54                 	db	84	;'T'
   353  007F51  72                 	db	114	;'r'
   354  007F52  61                 	db	97	;'a'
   355  007F53  6E                 	db	110	;'n'
   356  007F54  63                 	db	99	;'c'
   357  007F55  61                 	db	97	;'a'
   358  007F56  6E                 	db	110	;'n'
   359  007F57  64                 	db	100	;'d'
   360  007F58  6F                 	db	111	;'o'
   361  007F59  00                 	db	0
   362  007F5A                     STR_19:
   363  007F5A  64                 	db	100	;'d'
   364  007F5B  65                 	db	101	;'e'
   365  007F5C  66                 	db	102	;'f'
   366  007F5D  69                 	db	105	;'i'
   367  007F5E  6E                 	db	110	;'n'
   368  007F5F  69                 	db	105	;'i'
   369  007F60  64                 	db	100	;'d'
   370  007F61  61                 	db	97	;'a'
   371  007F62  00                 	db	0
   372  007F63                     STR_24:
   373  007F63  32                 	db	50	;'2'
   374  007F64  2D                 	db	45
   375  007F65  55                 	db	85	;'U'
   376  007F66  6E                 	db	110	;'n'
   377  007F67  4C                 	db	76	;'L'
   378  007F68  6F                 	db	111	;'o'
   379  007F69  63                 	db	99	;'c'
   380  007F6A  6B                 	db	107	;'k'
   381  007F6B  00                 	db	0
   382  007F6C                     STR_20:
   383  007F6C  31                 	db	49	;'1'
   384  007F6D  2D                 	db	45
   385  007F6E  46                 	db	70	;'F'
   386  007F6F  65                 	db	101	;'e'
   387  007F70  63                 	db	99	;'c'
   388  007F71  68                 	db	104	;'h'
   389  007F72  61                 	db	97	;'a'
   390  007F73  72                 	db	114	;'r'
   391  007F74  00                 	db	0
   392  007F75                     STR_55:
   393  007F75  31                 	db	49	;'1'
   394  007F76  2D                 	db	45
   395  007F77  65                 	db	101	;'e'
   396  007F78  6E                 	db	110	;'n'
   397  007F79  74                 	db	116	;'t'
   398  007F7A  72                 	db	114	;'r'
   399  007F7B  61                 	db	97	;'a'
   400  007F7C  72                 	db	114	;'r'
   401  007F7D  00                 	db	0
   402  007F7E                     STR_45:
   403  007F7E  32                 	db	50	;'2'
   404  007F7F  2D                 	db	45
   405  007F80  76                 	db	118	;'v'
   406  007F81  6F                 	db	111	;'o'
   407  007F82  6C                 	db	108	;'l'
   408  007F83  74                 	db	116	;'t'
   409  007F84  61                 	db	97	;'a'
   410  007F85  72                 	db	114	;'r'
   411  007F86  00                 	db	0
   412  007F87                     STR_52:
   413  007F87  41                 	db	65	;'A'
   414  007F88  73                 	db	115	;'s'
   415  007F89  20                 	db	32
   416  007F8A  6C                 	db	108	;'l'
   417  007F8B  75                 	db	117	;'u'
   418  007F8C  7A                 	db	122	;'z'
   419  007F8D  65                 	db	101	;'e'
   420  007F8E  73                 	db	115	;'s'
   421  007F8F  00                 	db	0
   422  007F90                     STR_54:
   423  007F90  61                 	db	97	;'a'
   424  007F91  20                 	db	32
   425  007F92  70                 	db	112	;'p'
   426  007F93  6F                 	db	111	;'o'
   427  007F94  72                 	db	114	;'r'
   428  007F95  74                 	db	116	;'t'
   429  007F96  61                 	db	97	;'a'
   430  007F97  00                 	db	0
   431  007F98                     STR_38:
   432  007F98  31                 	db	49	;'1'
   433  007F99  2D                 	db	45
   434  007F9A  6C                 	db	108	;'l'
   435  007F9B  69                 	db	105	;'i'
   436  007F9C  67                 	db	103	;'g'
   437  007F9D  61                 	db	97	;'a'
   438  007F9E  72                 	db	114	;'r'
   439  007F9F  00                 	db	0
   440  007FA0                     STR_21:
   441  007FA0  31                 	db	49	;'1'
   442  007FA1  2D                 	db	45
   443  007FA2  41                 	db	65	;'A'
   444  007FA3  62                 	db	98	;'b'
   445  007FA4  72                 	db	114	;'r'
   446  007FA5  69                 	db	105	;'i'
   447  007FA6  72                 	db	114	;'r'
   448  007FA7  00                 	db	0
   449  007FA8                     STR_2:
   450  007FA8  32                 	db	50	;'2'
   451  007FA9  2D                 	db	45
   452  007FAA  50                 	db	80	;'P'
   453  007FAB  6F                 	db	111	;'o'
   454  007FAC  72                 	db	114	;'r'
   455  007FAD  74                 	db	116	;'t'
   456  007FAE  61                 	db	97	;'a'
   457  007FAF  00                 	db	0
   458  007FB0                     STR_35:
   459  007FB0  61                 	db	97	;'a'
   460  007FB1  20                 	db	32
   461  007FB2  6C                 	db	108	;'l'
   462  007FB3  75                 	db	117	;'u'
   463  007FB4  7A                 	db	122	;'z'
   464  007FB5  20                 	db	32
   465  007FB6  00                 	db	0
   466  007FB7                     STR_5:
   467  007FB7  49                 	db	73	;'I'
   468  007FB8  6E                 	db	110	;'n'
   469  007FB9  73                 	db	115	;'s'
   470  007FBA  69                 	db	105	;'i'
   471  007FBB  72                 	db	114	;'r'
   472  007FBC  61                 	db	97	;'a'
   473  007FBD  00                 	db	0
   474  007FBE                     STR_25:
   475  007FBE  34                 	db	52	;'4'
   476  007FBF  2D                 	db	45
   477  007FC0  70                 	db	112	;'p'
   478  007FC1  73                 	db	115	;'s'
   479  007FC2  77                 	db	119	;'w'
   480  007FC3  64                 	db	100	;'d'
   481  007FC4  00                 	db	0
   482  007FC5                     STR_23:
   483  007FC5  32                 	db	50	;'2'
   484  007FC6  2D                 	db	45
   485  007FC7  4C                 	db	76	;'L'
   486  007FC8  6F                 	db	111	;'o'
   487  007FC9  63                 	db	99	;'c'
   488  007FCA  6B                 	db	107	;'k'
   489  007FCB  00                 	db	0
   490  007FCC                     STR_33:
   491  007FCC  31                 	db	49	;'1'
   492  007FCD  2D                 	db	45
   493  007FCE  73                 	db	115	;'s'
   494  007FCF  61                 	db	97	;'a'
   495  007FD0  69                 	db	105	;'i'
   496  007FD1  72                 	db	114	;'r'
   497  007FD2  00                 	db	0
   498  007FD3                     STR_22:
   499  007FD3  33                 	db	51	;'3'
   500  007FD4  2D                 	db	45
   501  007FD5  73                 	db	115	;'s'
   502  007FD6  61                 	db	97	;'a'
   503  007FD7  69                 	db	105	;'i'
   504  007FD8  72                 	db	114	;'r'
   505  007FD9  00                 	db	0
   506  007FDA                     STR_4:
   507  007FDA  34                 	db	52	;'4'
   508  007FDB  2D                 	db	45
   509  007FDC  53                 	db	83	;'S'
   510  007FDD  61                 	db	97	;'a'
   511  007FDE  69                 	db	105	;'i'
   512  007FDF  72                 	db	114	;'r'
   513  007FE0  00                 	db	0
   514  007FE1                     STR_32:
   515  007FE1  33                 	db	51	;'3'
   516  007FE2  34                 	db	52	;'4'
   517  007FE3  35                 	db	53	;'5'
   518  007FE4  36                 	db	54	;'6'
   519  007FE5  37                 	db	55	;'7'
   520  007FE6  00                 	db	0
   521  007FE7                     STR_43:
   522  007FE7  33                 	db	51	;'3'
   523  007FE8  2D                 	db	45
   524  007FE9  45                 	db	69	;'E'
   525  007FEA  58                 	db	88	;'X'
   526  007FEB  54                 	db	84	;'T'
   527  007FEC  00                 	db	0
   528  007FED                     STR_14:
   529  007FED  53                 	db	83	;'S'
   530  007FEE  65                 	db	101	;'e'
   531  007FEF  6E                 	db	110	;'n'
   532  007FF0  68                 	db	104	;'h'
   533  007FF1  61                 	db	97	;'a'
   534  007FF2  00                 	db	0
   535  007FF3                     STR_1:
   536  007FF3  31                 	db	49	;'1'
   537  007FF4  2D                 	db	45
   538  007FF5  4C                 	db	76	;'L'
   539  007FF6  75                 	db	117	;'u'
   540  007FF7  7A                 	db	122	;'z'
   541  007FF8  00                 	db	0
   542  007FF9                     STR_3:
   543  007FF9  33                 	db	51	;'3'
   544  007FFA  2D                 	db	45
   545  007FFB  41                 	db	65	;'A'
   546  007FFC  43                 	db	67	;'C'
   547  007FFD  00                 	db	0
   548  0000                     
   549                           ; #config settings
   550  007FFE  00                 	db	0	; dummy byte at the end
   551  0000                     
   552                           	psect	cinit
   553  006B82                     __pcinit:
   554                           	opt callstack 0
   555  006B82                     start_initialization:
   556                           	opt callstack 0
   557  006B82                     __initialization:
   558                           	opt callstack 0
   559                           
   560                           ; Initialize objects allocated to COMRAM (7 bytes)
   561                           ; load TBLPTR registers with __pidataCOMRAM
   562  006B82  0EAD               	movlw	low __pidataCOMRAM
   563  006B84  6EF6               	movwf	tblptrl,c
   564  006B86  0E6A               	movlw	high __pidataCOMRAM
   565  006B88  6EF7               	movwf	tblptrh,c
   566  006B8A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   567  006B8C  6EF8               	movwf	tblptru,c
   568  006B8E  EE00  F035         	lfsr	0,__pdataCOMRAM
   569  006B92  EE10 F007          	lfsr	1,7
   570  006B96                     copy_data0:
   571  006B96  0009               	tblrd		*+
   572  006B98  CFF5 FFEE          	movff	tablat,postinc0
   573  006B9C  50E5               	movf	postdec1,w,c
   574  006B9E  50E1               	movf	fsr1l,w,c
   575  006BA0  E1FA               	bnz	copy_data0
   576                           
   577                           ; Clear objects allocated to COMRAM (4 bytes)
   578  006BA2  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   579  006BA4  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   580  006BA6  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   581  006BA8  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   582  006BAA                     end_of_initialization:
   583                           	opt callstack 0
   584  006BAA                     __end_of__initialization:
   585                           	opt callstack 0
   586  006BAA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   587  006BAC  6EF8               	movwf	tblptru,c
   588  006BAE  0100               	movlb	0
   589  006BB0  EFE9  F038         	goto	_main	;jump to C main() function
   590                           
   591                           	psect	bssCOMRAM
   592  00003C                     __pbssCOMRAM:
   593                           	opt callstack 0
   594  00003C                     _estadoTranca:
   595                           	opt callstack 0
   596  00003C                     	ds	1
   597  00003D                     _estadoPorta:
   598                           	opt callstack 0
   599  00003D                     	ds	1
   600  00003E                     _estado:
   601                           	opt callstack 0
   602  00003E                     	ds	1
   603  00003F                     _estadoLuz:
   604                           	opt callstack 0
   605  00003F                     	ds	1
   606                           
   607                           	psect	dataCOMRAM
   608  000035                     __pdataCOMRAM:
   609                           	opt callstack 0
   610  000035                     _senha:
   611                           	opt callstack 0
   612  000035                     	ds	2
   613  000037                     _atraso:
   614                           	opt callstack 0
   615  000037                     	ds	2
   616  000039                     _atraso_min:
   617                           	opt callstack 0
   618  000039                     	ds	2
   619  00003B                     _temperatura:
   620                           	opt callstack 0
   621  00003B                     	ds	1
   622                           
   623                           	psect	cstackCOMRAM
   624  000001                     __pcstackCOMRAM:
   625                           	opt callstack 0
   626  000001                     ??_aumentarTemp:
   627  000001                     ??_diminuirTemp:
   628  000001                     ??_ligaLuz:
   629  000001                     ??_desligaLuz:
   630  000001                     ?___wmul:
   631                           	opt callstack 0
   632  000001                     lcd_wr@val:
   633                           	opt callstack 0
   634  000001                     ligarDesligar@i:
   635                           	opt callstack 0
   636  000001                     abreFecha@comando:
   637                           	opt callstack 0
   638  000001                     delay_ms@t:
   639                           	opt callstack 0
   640  000001                     defineSenha@entrada:
   641                           	opt callstack 0
   642  000001                     destranca@entrada:
   643                           	opt callstack 0
   644  000001                     ___wmul@multiplier:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x0
   648  000001                     	ds	2
   649  000003                     ligaLuz@luz:
   650                           	opt callstack 0
   651  000003                     desligaLuz@luz:
   652                           	opt callstack 0
   653  000003                     aumentarTemp@a:
   654                           	opt callstack 0
   655  000003                     diminuirTemp@d:
   656                           	opt callstack 0
   657  000003                     delay_ms@i:
   658                           	opt callstack 0
   659  000003                     ___wmul@multiplicand:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0x2
   663  000003                     	ds	2
   664  000005                     delay_ms@j:
   665                           	opt callstack 0
   666  000005                     ___wmul@product:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x4
   670  000005                     	ds	1
   671  000006                     delay_ms@k:
   672                           	opt callstack 0
   673                           
   674                           ; 1 bytes @ 0x5
   675  000006                     	ds	1
   676  000007                     ?_pow:
   677                           	opt callstack 0
   678  000007                     lcd_cmd@val:
   679                           	opt callstack 0
   680  000007                     lcd_dat@val:
   681                           	opt callstack 0
   682  000007                     tc_tecla@timeout:
   683                           	opt callstack 0
   684  000007                     pow@bas:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x6
   688  000007                     	ds	1
   689  000008                     lcd_str@str:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x7
   693  000008                     	ds	1
   694  000009                     tc_tecla@to:
   695                           	opt callstack 0
   696  000009                     pow@exp:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x8
   700  000009                     	ds	1
   701  00000A                     ??_lcd_str:
   702                           
   703                           ; 1 bytes @ 0x9
   704  00000A                     	ds	1
   705  00000B                     tc_tecla@tmp:
   706                           	opt callstack 0
   707  00000B                     pow@resp:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0xA
   711  00000B                     	ds	1
   712  00000C                     lcd_str@i:
   713                           	opt callstack 0
   714  00000C                     tc_tecla@ret:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0xB
   718  00000C                     	ds	1
   719  00000D                     ?___awmod:
   720                           	opt callstack 0
   721  00000D                     tc_tecla@i:
   722                           	opt callstack 0
   723  00000D                     ___awmod@dividend:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0xC
   727  00000D                     	ds	1
   728  00000E                     ??_menuManipLuzes:
   729                           
   730                           ; 1 bytes @ 0xD
   731  00000E                     	ds	1
   732  00000F                     ___awmod@divisor:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0xE
   736  00000F                     	ds	1
   737  000010                     _menuManipLuzes$215:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0xF
   741  000010                     	ds	1
   742  000011                     ___awmod@counter:
   743                           	opt callstack 0
   744                           
   745                           ; 1 bytes @ 0x10
   746  000011                     	ds	1
   747  000012                     menuManipLuzes@opcao:
   748                           	opt callstack 0
   749  000012                     ___awmod@sign:
   750                           	opt callstack 0
   751                           
   752                           ; 1 bytes @ 0x11
   753  000012                     	ds	1
   754  000013                     ?___awdiv:
   755                           	opt callstack 0
   756  000013                     menuManipLuzes@i:
   757                           	opt callstack 0
   758  000013                     ___awdiv@dividend:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x12
   762  000013                     	ds	1
   763  000014                     menuManipLuzes@tmp:
   764                           	opt callstack 0
   765                           
   766                           ; 1 bytes @ 0x13
   767  000014                     	ds	1
   768  000015                     ??_menuLuzes:
   769  000015                     ___awdiv@divisor:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x14
   773  000015                     	ds	2
   774  000017                     menuLuzes@tmp:
   775                           	opt callstack 0
   776  000017                     ___awdiv@counter:
   777                           	opt callstack 0
   778                           
   779                           ; 1 bytes @ 0x16
   780  000017                     	ds	1
   781  000018                     ___awdiv@sign:
   782                           	opt callstack 0
   783                           
   784                           ; 1 bytes @ 0x17
   785  000018                     	ds	1
   786  000019                     ___awdiv@quotient:
   787                           	opt callstack 0
   788                           
   789                           ; 2 bytes @ 0x18
   790  000019                     	ds	2
   791  00001B                     printTemp@temp:
   792                           	opt callstack 0
   793  00001B                     printSenha@s:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x1A
   797  00001B                     	ds	1
   798  00001C                     ??_menuAumentaDiminuiAC:
   799                           
   800                           ; 1 bytes @ 0x1B
   801  00001C                     	ds	1
   802  00001D                     printSenha@digitado:
   803                           	opt callstack 0
   804                           
   805                           ; 1 bytes @ 0x1C
   806  00001D                     	ds	1
   807  00001E                     ??_printSenha:
   808  00001E                     menuAumentaDiminuiAC@tmp:
   809                           	opt callstack 0
   810                           
   811                           ; 1 bytes @ 0x1D
   812  00001E                     	ds	1
   813  00001F                     ??_menuArCondicionado:
   814                           
   815                           ; 1 bytes @ 0x1E
   816  00001F                     	ds	1
   817  000020                     printSenha@j:
   818                           	opt callstack 0
   819                           
   820                           ; 1 bytes @ 0x1F
   821  000020                     	ds	1
   822  000021                     menuArCondicionado@tmp:
   823                           	opt callstack 0
   824  000021                     printSenha@i:
   825                           	opt callstack 0
   826                           
   827                           ; 1 bytes @ 0x20
   828  000021                     	ds	1
   829  000022                     _menuTranca$1002:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x21
   833  000022                     	ds	2
   834  000024                     menuTranca@tentativas:
   835                           	opt callstack 0
   836                           
   837                           ; 1 bytes @ 0x23
   838  000024                     	ds	1
   839  000025                     menuTranca@tmp:
   840                           	opt callstack 0
   841                           
   842                           ; 1 bytes @ 0x24
   843  000025                     	ds	1
   844  000026                     menuTranca@digitado:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0x25
   848  000026                     	ds	1
   849  000027                     menuTranca@opcao:
   850                           	opt callstack 0
   851                           
   852                           ; 1 bytes @ 0x26
   853  000027                     	ds	1
   854  000028                     menuTranca@entrada:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x27
   858  000028                     	ds	2
   859  00002A                     ??_menuPorta:
   860  00002A                     sair@tmp:
   861                           	opt callstack 0
   862                           
   863                           ; 1 bytes @ 0x29
   864  00002A                     	ds	2
   865  00002C                     menuPorta@tmp:
   866                           	opt callstack 0
   867                           
   868                           ; 1 bytes @ 0x2B
   869  00002C                     	ds	1
   870  00002D                     
   871                           ; 2 bytes @ 0x2C
   872  00002D                     	ds	2
   873  00002F                     
   874                           ; 3 bytes @ 0x2E
   875  00002F                     	ds	3
   876  000032                     ??_main:
   877                           
   878                           ; 1 bytes @ 0x31
   879  000032                     	ds	2
   880  000034                     main@tmp:
   881                           	opt callstack 0
   882                           
   883                           ; 1 bytes @ 0x33
   884  000034                     	ds	1
   885                           
   886 ;;
   887 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   888 ;;
   889 ;; *************** function _main *****************
   890 ;; Defined at:
   891 ;;		line 9 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  argc            2   44[COMRAM] int 
   894 ;;  argv            3   46[COMRAM] PTR PTR unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  tmp             1   51[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  2   44[COMRAM] int 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         5       0       0       0       0       0       0
   907 ;;      Locals:         1       0       0       0       0       0       0
   908 ;;      Temps:          2       0       0       0       0       0       0
   909 ;;      Totals:         8       0       0       0       0       0       0
   910 ;;Total ram usage:        8 bytes
   911 ;; Hardware stack levels required when called:    5
   912 ;; This function calls:
   913 ;;		_lcd_cmd
   914 ;;		_lcd_init
   915 ;;		_lcd_str
   916 ;;		_menuArCondicionado
   917 ;;		_menuLuzes
   918 ;;		_menuPorta
   919 ;;		_sair
   920 ;;		_tc_tecla
   921 ;; This function is called by:
   922 ;;		Startup code after reset
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text0
   927  0071D2                     __ptext0:
   928                           	opt callstack 0
   929  0071D2                     _main:
   930                           	opt callstack 26
   931  0071D2                     
   932                           ;main.c: 11:     unsigned char tmp;;main.c: 13:     (*(volatile __near unsigned char*)0x
      +                          FC1) = 0x06;
   933  0071D2  0E06               	movlw	6
   934  0071D4  6EC1               	movwf	193,c	;volatile
   935                           
   936                           ;main.c: 14:     (*(volatile __near unsigned char*)0xF93) = 0x01;
   937  0071D6  0E01               	movlw	1
   938  0071D8  6E93               	movwf	147,c	;volatile
   939                           
   940                           ;main.c: 15:     (*(volatile __near unsigned char*)0xF95) = 0x00;
   941  0071DA  0E00               	movlw	0
   942  0071DC  6E95               	movwf	149,c	;volatile
   943                           
   944                           ;main.c: 16:     (*(volatile __near unsigned char*)0xF96) = 0x00;
   945  0071DE  0E00               	movlw	0
   946  0071E0  6E96               	movwf	150,c	;volatile
   947                           
   948                           ;main.c: 17:     (*(volatile __near unsigned char*)0xF92) = 0x00;
   949  0071E2  0E00               	movlw	0
   950  0071E4  6E92               	movwf	146,c	;volatile
   951  0071E6                     
   952                           ;main.c: 19:     lcd_init();
   953  0071E6  ECC7  F036         	call	_lcd_init	;wreg free
   954  0071EA                     
   955                           ;main.c: 21:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
   956  0071EA  0EF8               	movlw	248
   957  0071EC  6E93               	movwf	147,c	;volatile
   958  0071EE                     l21:
   959                           
   960                           ;main.c: 25:         lcd_cmd(0x01);
   961  0071EE  0E01               	movlw	1
   962  0071F0  EC7F  F035         	call	_lcd_cmd
   963                           
   964                           ;main.c: 26:         lcd_cmd(0x80);
   965  0071F4  0E80               	movlw	128
   966  0071F6  EC7F  F035         	call	_lcd_cmd
   967  0071FA                     
   968                           ;main.c: 27:         lcd_str("1-Luz");
   969  0071FA  0EF3               	movlw	low STR_1
   970  0071FC  6E08               	movwf	lcd_str@str^0,c
   971  0071FE  0E7F               	movlw	high STR_1
   972  007200  6E09               	movwf	(lcd_str@str+1)^0,c
   973  007202  EC74  F036         	call	_lcd_str	;wreg free
   974  007206                     
   975                           ;main.c: 28:         lcd_cmd(0x80 +9);
   976  007206  0E89               	movlw	137
   977  007208  EC7F  F035         	call	_lcd_cmd
   978                           
   979                           ;main.c: 29:         lcd_str("2-Porta");
   980  00720C  0EA8               	movlw	low STR_2
   981  00720E  6E08               	movwf	lcd_str@str^0,c
   982  007210  0E7F               	movlw	high STR_2
   983  007212  6E09               	movwf	(lcd_str@str+1)^0,c
   984  007214  EC74  F036         	call	_lcd_str	;wreg free
   985  007218                     
   986                           ;main.c: 30:         lcd_cmd(0xC0);
   987  007218  0EC0               	movlw	192
   988  00721A  EC7F  F035         	call	_lcd_cmd
   989  00721E                     
   990                           ;main.c: 31:         lcd_str("3-AC");
   991  00721E  0EF9               	movlw	low STR_3
   992  007220  6E08               	movwf	lcd_str@str^0,c
   993  007222  0E7F               	movlw	high STR_3
   994  007224  6E09               	movwf	(lcd_str@str+1)^0,c
   995  007226  EC74  F036         	call	_lcd_str	;wreg free
   996                           
   997                           ;main.c: 32:         lcd_cmd(0xC0 +10);
   998  00722A  0ECA               	movlw	202
   999  00722C  EC7F  F035         	call	_lcd_cmd
  1000  007230                     
  1001                           ;main.c: 33:         lcd_str("4-Sair");
  1002  007230  0EDA               	movlw	low STR_4
  1003  007232  6E08               	movwf	lcd_str@str^0,c
  1004  007234  0E7F               	movlw	high STR_4
  1005  007236  6E09               	movwf	(lcd_str@str+1)^0,c
  1006  007238  EC74  F036         	call	_lcd_str	;wreg free
  1007  00723C                     
  1008                           ;main.c: 36:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1009  00723C  0E0F               	movlw	15
  1010  00723E  6E95               	movwf	149,c	;volatile
  1011  007240                     
  1012                           ;main.c: 37:         tmp = tc_tecla(0);
  1013  007240  0E00               	movlw	0
  1014  007242  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1015  007244  0E00               	movlw	0
  1016  007246  6E07               	movwf	tc_tecla@timeout^0,c
  1017  007248  ECF6  F03B         	call	_tc_tecla	;wreg free
  1018  00724C  6E34               	movwf	main@tmp^0,c
  1019  00724E                     
  1020                           ;main.c: 38:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1021  00724E  0E00               	movlw	0
  1022  007250  6E95               	movwf	149,c	;volatile
  1023                           
  1024                           ;main.c: 40:         lcd_cmd(0x01);
  1025  007252  0E01               	movlw	1
  1026  007254  EC7F  F035         	call	_lcd_cmd
  1027                           
  1028                           ;main.c: 41:         switch(tmp){
  1029  007258  EF3E  F039         	goto	l2915
  1030  00725C                     l2905:
  1031                           
  1032                           ;main.c: 43:                menuLuzes();
  1033  00725C  EC27  F037         	call	_menuLuzes	;wreg free
  1034                           
  1035                           ;main.c: 44:                break;
  1036  007260  EFF7  F038         	goto	l21
  1037  007264                     l2907:
  1038                           
  1039                           ;main.c: 46:                 menuPorta();
  1040  007264  EC1E  F03B         	call	_menuPorta	;wreg free
  1041                           
  1042                           ;main.c: 47:                 break;
  1043  007268  EFF7  F038         	goto	l21
  1044  00726C                     l2909:
  1045                           
  1046                           ;main.c: 49:                 menuArCondicionado();
  1047  00726C  EC82  F03A         	call	_menuArCondicionado	;wreg free
  1048                           
  1049                           ;main.c: 50:                 break;
  1050  007270  EFF7  F038         	goto	l21
  1051  007274                     l2911:
  1052                           
  1053                           ;main.c: 52:                 sair();
  1054  007274  EC5D  F039         	call	_sair	;wreg free
  1055                           
  1056                           ;main.c: 53:                 break;
  1057  007278  EFF7  F038         	goto	l21
  1058  00727C                     l2915:
  1059  00727C  5034               	movf	main@tmp^0,w,c
  1060  00727E  6E32               	movwf	??_main^0,c
  1061  007280  6A33               	clrf	(??_main+1)^0,c
  1062                           
  1063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1064                           ; Switch size 1, requested type "simple"
  1065                           ; Number of cases is 1, Range of values is 0 to 0
  1066                           ; switch strategies available:
  1067                           ; Name         Instructions Cycles
  1068                           ; simple_byte            4     3 (average)
  1069                           ;	Chosen strategy is simple_byte
  1070  007282  5033               	movf	(??_main+1)^0,w,c
  1071  007284  0A00               	xorlw	0	; case 0
  1072  007286  B4D8               	btfsc	status,2,c
  1073  007288  EF48  F039         	goto	l2949
  1074  00728C  EFF7  F038         	goto	l21
  1075  007290                     l2949:
  1076                           
  1077                           ; Switch size 1, requested type "simple"
  1078                           ; Number of cases is 4, Range of values is 1 to 4
  1079                           ; switch strategies available:
  1080                           ; Name         Instructions Cycles
  1081                           ; simple_byte           13     7 (average)
  1082                           ;	Chosen strategy is simple_byte
  1083  007290  5032               	movf	??_main^0,w,c
  1084  007292  0A01               	xorlw	1	; case 1
  1085  007294  B4D8               	btfsc	status,2,c
  1086  007296  EF2E  F039         	goto	l2905
  1087  00729A  0A03               	xorlw	3	; case 2
  1088  00729C  B4D8               	btfsc	status,2,c
  1089  00729E  EF32  F039         	goto	l2907
  1090  0072A2  0A01               	xorlw	1	; case 3
  1091  0072A4  B4D8               	btfsc	status,2,c
  1092  0072A6  EF36  F039         	goto	l2909
  1093  0072AA  0A07               	xorlw	7	; case 4
  1094  0072AC  B4D8               	btfsc	status,2,c
  1095  0072AE  EF3A  F039         	goto	l2911
  1096  0072B2  EFF7  F038         	goto	l21
  1097  0072B6  EF00  F000         	goto	start
  1098  0072BA                     __end_of_main:
  1099                           	opt callstack 0
  1100                           
  1101 ;; *************** function _sair *****************
  1102 ;; Defined at:
  1103 ;;		line 537 in file "menus.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  tmp             1   41[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1117 ;;      Params:         0       0       0       0       0       0       0
  1118 ;;      Locals:         1       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0
  1120 ;;      Totals:         1       0       0       0       0       0       0
  1121 ;;Total ram usage:        1 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    4
  1124 ;; This function calls:
  1125 ;;		_abreFecha
  1126 ;;		_delay_ms
  1127 ;;		_desligaTodasLuzes
  1128 ;;		_lcd_cmd
  1129 ;;		_lcd_str
  1130 ;;		_ligarDesligar
  1131 ;;		_menuTranca
  1132 ;;		_tc_tecla
  1133 ;;		_tranca
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text1
  1140  0072BA                     __ptext1:
  1141                           	opt callstack 0
  1142  0072BA                     _sair:
  1143                           	opt callstack 26
  1144  0072BA                     
  1145                           ;menus.c: 539:     (*(volatile __near unsigned char*)0xF93) = 0x00;
  1146  0072BA  0E00               	movlw	0
  1147  0072BC  6E93               	movwf	147,c	;volatile
  1148  0072BE                     
  1149                           ;menus.c: 540:     (*(volatile __near unsigned char*)0xF81)=estadoLuz;
  1150  0072BE  C03F  FF81         	movff	_estadoLuz,3969	;volatile
  1151  0072C2                     
  1152                           ;menus.c: 543:     lcd_cmd(0x01);
  1153  0072C2  0E01               	movlw	1
  1154  0072C4  EC7F  F035         	call	_lcd_cmd
  1155  0072C8                     
  1156                           ;menus.c: 544:     lcd_cmd(0x80 +4);
  1157  0072C8  0E84               	movlw	132
  1158  0072CA  EC7F  F035         	call	_lcd_cmd
  1159  0072CE                     
  1160                           ;menus.c: 545:     lcd_str("Desligando");
  1161  0072CE  0E04               	movlw	low STR_49
  1162  0072D0  6E08               	movwf	lcd_str@str^0,c
  1163  0072D2  0E7F               	movlw	high STR_49
  1164  0072D4  6E09               	movwf	(lcd_str@str+1)^0,c
  1165  0072D6  EC74  F036         	call	_lcd_str	;wreg free
  1166  0072DA                     
  1167                           ;menus.c: 546:     lcd_cmd(0xC0 +2);
  1168  0072DA  0EC2               	movlw	194
  1169  0072DC  EC7F  F035         	call	_lcd_cmd
  1170  0072E0                     
  1171                           ;menus.c: 547:     lcd_str("Ar Condicionado");
  1172  0072E0  0E99               	movlw	low STR_50
  1173  0072E2  6E08               	movwf	lcd_str@str^0,c
  1174  0072E4  0E7E               	movlw	high STR_50
  1175  0072E6  6E09               	movwf	(lcd_str@str+1)^0,c
  1176  0072E8  EC74  F036         	call	_lcd_str	;wreg free
  1177  0072EC                     
  1178                           ;menus.c: 549:     ligarDesligar(0);
  1179  0072EC  0E00               	movlw	0
  1180  0072EE  EC5E  F035         	call	_ligarDesligar
  1181  0072F2                     
  1182                           ;menus.c: 551:     delay_ms(2000);
  1183  0072F2  0E07               	movlw	7
  1184  0072F4  6E02               	movwf	(delay_ms@t+1)^0,c
  1185  0072F6  0ED0               	movlw	208
  1186  0072F8  6E01               	movwf	delay_ms@t^0,c
  1187  0072FA  ECF5  F036         	call	_delay_ms	;wreg free
  1188  0072FE                     
  1189                           ;menus.c: 555:     lcd_cmd(0x01);
  1190  0072FE  0E01               	movlw	1
  1191  007300  EC7F  F035         	call	_lcd_cmd
  1192  007304                     
  1193                           ;menus.c: 556:     lcd_cmd(0x80 +4);
  1194  007304  0E84               	movlw	132
  1195  007306  EC7F  F035         	call	_lcd_cmd
  1196  00730A                     
  1197                           ;menus.c: 557:     lcd_str("Desligando");
  1198  00730A  0E04               	movlw	low STR_49
  1199  00730C  6E08               	movwf	lcd_str@str^0,c
  1200  00730E  0E7F               	movlw	high STR_49
  1201  007310  6E09               	movwf	(lcd_str@str+1)^0,c
  1202  007312  EC74  F036         	call	_lcd_str	;wreg free
  1203  007316                     
  1204                           ;menus.c: 558:     lcd_cmd(0xC0 +5);
  1205  007316  0EC5               	movlw	197
  1206  007318  EC7F  F035         	call	_lcd_cmd
  1207  00731C                     
  1208                           ;menus.c: 559:     lcd_str("As luzes");
  1209  00731C  0E87               	movlw	low STR_52
  1210  00731E  6E08               	movwf	lcd_str@str^0,c
  1211  007320  0E7F               	movlw	high STR_52
  1212  007322  6E09               	movwf	(lcd_str@str+1)^0,c
  1213  007324  EC74  F036         	call	_lcd_str	;wreg free
  1214  007328                     
  1215                           ;menus.c: 561:     desligaTodasLuzes();
  1216  007328  EC67  F035         	call	_desligaTodasLuzes	;wreg free
  1217  00732C                     
  1218                           ;menus.c: 562:     delay_ms(2000);
  1219  00732C  0E07               	movlw	7
  1220  00732E  6E02               	movwf	(delay_ms@t+1)^0,c
  1221  007330  0ED0               	movlw	208
  1222  007332  6E01               	movwf	delay_ms@t^0,c
  1223  007334  ECF5  F036         	call	_delay_ms	;wreg free
  1224  007338                     
  1225                           ;menus.c: 566:     lcd_cmd(0x01);
  1226  007338  0E01               	movlw	1
  1227  00733A  EC7F  F035         	call	_lcd_cmd
  1228  00733E                     
  1229                           ;menus.c: 567:     lcd_cmd(0x80 +4);
  1230  00733E  0E84               	movlw	132
  1231  007340  EC7F  F035         	call	_lcd_cmd
  1232  007344                     
  1233                           ;menus.c: 568:     lcd_str("Trancando");
  1234  007344  0E50               	movlw	low STR_53
  1235  007346  6E08               	movwf	lcd_str@str^0,c
  1236  007348  0E7F               	movlw	high STR_53
  1237  00734A  6E09               	movwf	(lcd_str@str+1)^0,c
  1238  00734C  EC74  F036         	call	_lcd_str	;wreg free
  1239  007350                     
  1240                           ;menus.c: 569:     lcd_cmd(0xC0 +2);
  1241  007350  0EC2               	movlw	194
  1242  007352  EC7F  F035         	call	_lcd_cmd
  1243  007356                     
  1244                           ;menus.c: 570:     lcd_str("a porta");
  1245  007356  0E90               	movlw	low STR_54
  1246  007358  6E08               	movwf	lcd_str@str^0,c
  1247  00735A  0E7F               	movlw	high STR_54
  1248  00735C  6E09               	movwf	(lcd_str@str+1)^0,c
  1249  00735E  EC74  F036         	call	_lcd_str	;wreg free
  1250  007362                     
  1251                           ;menus.c: 572:     tranca();
  1252  007362  EC53  F035         	call	_tranca	;wreg free
  1253  007366                     
  1254                           ;menus.c: 573:     abreFecha(0);
  1255  007366  0E00               	movlw	0
  1256  007368  ECA9  F035         	call	_abreFecha
  1257  00736C                     
  1258                           ;menus.c: 575:     delay_ms(2000);
  1259  00736C  0E07               	movlw	7
  1260  00736E  6E02               	movwf	(delay_ms@t+1)^0,c
  1261  007370  0ED0               	movlw	208
  1262  007372  6E01               	movwf	delay_ms@t^0,c
  1263  007374  ECF5  F036         	call	_delay_ms	;wreg free
  1264  007378                     
  1265                           ;menus.c: 577:     (*(volatile __near unsigned char*)0xF93) = 0x78;
  1266  007378  0E78               	movlw	120
  1267  00737A  6E93               	movwf	147,c	;volatile
  1268  00737C                     
  1269                           ;menus.c: 580:     lcd_cmd(0x01);
  1270  00737C  0E01               	movlw	1
  1271  00737E  EC7F  F035         	call	_lcd_cmd
  1272  007382                     
  1273                           ;menus.c: 581:     lcd_cmd(0x80 +4);
  1274  007382  0E84               	movlw	132
  1275  007384  EC7F  F035         	call	_lcd_cmd
  1276  007388                     
  1277                           ;menus.c: 582:     lcd_str("1-entrar");
  1278  007388  0E75               	movlw	low STR_55
  1279  00738A  6E08               	movwf	lcd_str@str^0,c
  1280  00738C  0E7F               	movlw	high STR_55
  1281  00738E  6E09               	movwf	(lcd_str@str+1)^0,c
  1282  007390  EC74  F036         	call	_lcd_str	;wreg free
  1283  007394                     l2867:
  1284                           
  1285                           ;menus.c: 587:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1286  007394  0E0F               	movlw	15
  1287  007396  6E95               	movwf	149,c	;volatile
  1288  007398                     
  1289                           ;menus.c: 588:         tmp = tc_tecla(0);
  1290  007398  0E00               	movlw	0
  1291  00739A  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1292  00739C  0E00               	movlw	0
  1293  00739E  6E07               	movwf	tc_tecla@timeout^0,c
  1294  0073A0  ECF6  F03B         	call	_tc_tecla	;wreg free
  1295  0073A4  6E2A               	movwf	sair@tmp^0,c
  1296  0073A6                     
  1297                           ;menus.c: 589:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1298  0073A6  0E00               	movlw	0
  1299  0073A8  6E95               	movwf	149,c	;volatile
  1300  0073AA                     
  1301                           ;menus.c: 592:         if(tmp == 1){
  1302  0073AA  042A               	decf	sair@tmp^0,w,c
  1303  0073AC  A4D8               	btfss	status,2,c
  1304  0073AE  EFDB  F039         	goto	u1411
  1305  0073B2  EFDD  F039         	goto	u1410
  1306  0073B6                     u1411:
  1307  0073B6  EFCA  F039         	goto	l2867
  1308  0073BA                     u1410:
  1309  0073BA                     
  1310                           ;menus.c: 593:             if(senha != -1){
  1311  0073BA  2835               	incf	_senha^0,w,c
  1312  0073BC  E108               	bnz	u1420
  1313  0073BE  2836               	incf	(_senha+1)^0,w,c
  1314  0073C0  B4D8               	btfsc	status,2,c
  1315  0073C2  EFE5  F039         	goto	u1421
  1316  0073C6  EFE7  F039         	goto	u1420
  1317  0073CA                     u1421:
  1318  0073CA  EFEA  F039         	goto	l2879
  1319  0073CE                     u1420:
  1320  0073CE                     
  1321                           ;menus.c: 594:                 menuTranca(1);
  1322  0073CE  0E01               	movlw	1
  1323  0073D0  ECCB  F03D         	call	_menuTranca
  1324  0073D4                     l2879:
  1325                           
  1326                           ;menus.c: 596:             abreFecha(1);
  1327  0073D4  0E01               	movlw	1
  1328  0073D6  ECA9  F035         	call	_abreFecha
  1329  0073DA  0012               	return		;funcret
  1330  0073DC                     __end_of_sair:
  1331                           	opt callstack 0
  1332                           
  1333 ;; *************** function _desligaTodasLuzes *****************
  1334 ;; Defined at:
  1335 ;;		line 53 in file "luzes.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1349 ;;      Params:         0       0       0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_sair
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text2
  1363  006ACE                     __ptext2:
  1364                           	opt callstack 0
  1365  006ACE                     _desligaTodasLuzes:
  1366                           	opt callstack 29
  1367  006ACE                     
  1368                           ;luzes.c: 54:     (*(volatile __near unsigned char*)0xF81) = estadoLuz = 0x00;
  1369  006ACE  0E00               	movlw	0
  1370  006AD0  6E3F               	movwf	_estadoLuz^0,c
  1371  006AD2  C03F  FF81         	movff	_estadoLuz,3969	;volatile
  1372  006AD6  0012               	return		;funcret
  1373  006AD8                     __end_of_desligaTodasLuzes:
  1374                           	opt callstack 0
  1375                           
  1376 ;; *************** function _menuPorta *****************
  1377 ;; Defined at:
  1378 ;;		line 161 in file "menus.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  tmp             1   43[COMRAM] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1392 ;;      Params:         0       0       0       0       0       0       0
  1393 ;;      Locals:         1       0       0       0       0       0       0
  1394 ;;      Temps:          2       0       0       0       0       0       0
  1395 ;;      Totals:         3       0       0       0       0       0       0
  1396 ;;Total ram usage:        3 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    4
  1399 ;; This function calls:
  1400 ;;		_abreFecha
  1401 ;;		_delay_ms
  1402 ;;		_lcd_cmd
  1403 ;;		_lcd_str
  1404 ;;		_menuTranca
  1405 ;;		_tc_tecla
  1406 ;;		_tranca
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text3
  1413  00763C                     __ptext3:
  1414                           	opt callstack 0
  1415  00763C                     _menuPorta:
  1416                           	opt callstack 26
  1417  00763C                     l2661:
  1418                           
  1419                           ;menus.c: 169:         lcd_cmd(0x01);
  1420  00763C  0E01               	movlw	1
  1421  00763E  EC7F  F035         	call	_lcd_cmd
  1422  007642                     
  1423                           ;menus.c: 170:         lcd_cmd(0x80);
  1424  007642  0E80               	movlw	128
  1425  007644  EC7F  F035         	call	_lcd_cmd
  1426                           
  1427                           ;menus.c: 172:         if(estadoPorta)
  1428  007648  503D               	movf	_estadoPorta^0,w,c
  1429  00764A  B4D8               	btfsc	status,2,c
  1430  00764C  EF2A  F03B         	goto	u1361
  1431  007650  EF2C  F03B         	goto	u1360
  1432  007654                     u1361:
  1433  007654  EF34  F03B         	goto	l2667
  1434  007658                     u1360:
  1435  007658                     
  1436                           ;menus.c: 173:             lcd_str("1-Fechar");
  1437  007658  0E6C               	movlw	low STR_20
  1438  00765A  6E08               	movwf	lcd_str@str^0,c
  1439  00765C  0E7F               	movlw	high STR_20
  1440  00765E  6E09               	movwf	(lcd_str@str+1)^0,c
  1441  007660  EC74  F036         	call	_lcd_str	;wreg free
  1442  007664  EF3A  F03B         	goto	l2669
  1443  007668                     l2667:
  1444                           
  1445                           ;menus.c: 177:             lcd_str("1-Abrir");
  1446  007668  0EA0               	movlw	low STR_21
  1447  00766A  6E08               	movwf	lcd_str@str^0,c
  1448  00766C  0E7F               	movlw	high STR_21
  1449  00766E  6E09               	movwf	(lcd_str@str+1)^0,c
  1450  007670  EC74  F036         	call	_lcd_str	;wreg free
  1451  007674                     l2669:
  1452                           
  1453                           ;menus.c: 178:         lcd_cmd(0x80 +10);
  1454  007674  0E8A               	movlw	138
  1455  007676  EC7F  F035         	call	_lcd_cmd
  1456  00767A                     
  1457                           ;menus.c: 181:         lcd_str("3-sair");
  1458  00767A  0ED3               	movlw	low STR_22
  1459  00767C  6E08               	movwf	lcd_str@str^0,c
  1460  00767E  0E7F               	movlw	high STR_22
  1461  007680  6E09               	movwf	(lcd_str@str+1)^0,c
  1462  007682  EC74  F036         	call	_lcd_str	;wreg free
  1463                           
  1464                           ;menus.c: 182:         lcd_cmd(0xC0);
  1465  007686  0EC0               	movlw	192
  1466  007688  EC7F  F035         	call	_lcd_cmd
  1467  00768C                     
  1468                           ;menus.c: 185:         if(estadoTranca)
  1469  00768C  503C               	movf	_estadoTranca^0,w,c
  1470  00768E  B4D8               	btfsc	status,2,c
  1471  007690  EF4C  F03B         	goto	u1371
  1472  007694  EF4E  F03B         	goto	u1370
  1473  007698                     u1371:
  1474  007698  EF56  F03B         	goto	l2677
  1475  00769C                     u1370:
  1476  00769C                     
  1477                           ;menus.c: 186:             lcd_str("2-Lock");
  1478  00769C  0EC5               	movlw	low STR_23
  1479  00769E  6E08               	movwf	lcd_str@str^0,c
  1480  0076A0  0E7F               	movlw	high STR_23
  1481  0076A2  6E09               	movwf	(lcd_str@str+1)^0,c
  1482  0076A4  EC74  F036         	call	_lcd_str	;wreg free
  1483  0076A8  EF5C  F03B         	goto	l2679
  1484  0076AC                     l2677:
  1485                           
  1486                           ;menus.c: 190:             lcd_str("2-UnLock");
  1487  0076AC  0E63               	movlw	low STR_24
  1488  0076AE  6E08               	movwf	lcd_str@str^0,c
  1489  0076B0  0E7F               	movlw	high STR_24
  1490  0076B2  6E09               	movwf	(lcd_str@str+1)^0,c
  1491  0076B4  EC74  F036         	call	_lcd_str	;wreg free
  1492  0076B8                     l2679:
  1493                           
  1494                           ;menus.c: 193:         lcd_cmd(0xC0 +10);
  1495  0076B8  0ECA               	movlw	202
  1496  0076BA  EC7F  F035         	call	_lcd_cmd
  1497  0076BE                     
  1498                           ;menus.c: 194:         lcd_str("4-pswd");
  1499  0076BE  0EBE               	movlw	low STR_25
  1500  0076C0  6E08               	movwf	lcd_str@str^0,c
  1501  0076C2  0E7F               	movlw	high STR_25
  1502  0076C4  6E09               	movwf	(lcd_str@str+1)^0,c
  1503  0076C6  EC74  F036         	call	_lcd_str	;wreg free
  1504  0076CA                     
  1505                           ;menus.c: 197:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1506  0076CA  0E0F               	movlw	15
  1507  0076CC  6E95               	movwf	149,c	;volatile
  1508  0076CE                     
  1509                           ;menus.c: 198:         tmp = tc_tecla(0);
  1510  0076CE  0E00               	movlw	0
  1511  0076D0  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1512  0076D2  0E00               	movlw	0
  1513  0076D4  6E07               	movwf	tc_tecla@timeout^0,c
  1514  0076D6  ECF6  F03B         	call	_tc_tecla	;wreg free
  1515  0076DA  6E2C               	movwf	menuPorta@tmp^0,c
  1516  0076DC                     
  1517                           ;menus.c: 199:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1518  0076DC  0E00               	movlw	0
  1519  0076DE  6E95               	movwf	149,c	;volatile
  1520                           
  1521                           ;menus.c: 201:         switch(tmp){
  1522  0076E0  EFD8  F03B         	goto	l2735
  1523  0076E4                     l2689:
  1524                           
  1525                           ;menus.c: 205:                 if(estadoPorta) {
  1526  0076E4  503D               	movf	_estadoPorta^0,w,c
  1527  0076E6  B4D8               	btfsc	status,2,c
  1528  0076E8  EF78  F03B         	goto	u1381
  1529  0076EC  EF7A  F03B         	goto	u1380
  1530  0076F0                     u1381:
  1531  0076F0  EF9A  F03B         	goto	l2705
  1532  0076F4                     u1380:
  1533  0076F4                     
  1534                           ;menus.c: 206:                     abreFecha(0);
  1535  0076F4  0E00               	movlw	0
  1536  0076F6  ECA9  F035         	call	_abreFecha
  1537  0076FA                     
  1538                           ;menus.c: 207:                     lcd_cmd(0x01);
  1539  0076FA  0E01               	movlw	1
  1540  0076FC  EC7F  F035         	call	_lcd_cmd
  1541  007700                     
  1542                           ;menus.c: 208:                     lcd_cmd(0x80 +1);
  1543  007700  0E81               	movlw	129
  1544  007702  EC7F  F035         	call	_lcd_cmd
  1545  007706                     
  1546                           ;menus.c: 209:                     lcd_str("Porta Fechada");
  1547  007706  0EB8               	movlw	low STR_26
  1548  007708  6E08               	movwf	lcd_str@str^0,c
  1549  00770A  0E7E               	movlw	high STR_26
  1550  00770C  6E09               	movwf	(lcd_str@str+1)^0,c
  1551  00770E  EC74  F036         	call	_lcd_str	;wreg free
  1552  007712                     
  1553                           ;menus.c: 210:                     lcd_cmd(0xC0);
  1554  007712  0EC0               	movlw	192
  1555  007714  EC7F  F035         	call	_lcd_cmd
  1556  007718                     
  1557                           ;menus.c: 211:                     lcd_str("com sucesso");
  1558  007718  0EED               	movlw	low STR_11
  1559  00771A  6E08               	movwf	lcd_str@str^0,c
  1560  00771C  0E7E               	movlw	high STR_11
  1561  00771E  6E09               	movwf	(lcd_str@str+1)^0,c
  1562  007720  EC74  F036         	call	_lcd_str	;wreg free
  1563  007724                     
  1564                           ;menus.c: 212:                     delay_ms(1500);
  1565  007724  0E05               	movlw	5
  1566  007726  6E02               	movwf	(delay_ms@t+1)^0,c
  1567  007728  0EDC               	movlw	220
  1568  00772A  6E01               	movwf	delay_ms@t^0,c
  1569  00772C  ECF5  F036         	call	_delay_ms	;wreg free
  1570                           
  1571                           ;menus.c: 214:                 }
  1572  007730  EF1E  F03B         	goto	l2661
  1573  007734                     l2705:
  1574                           
  1575                           ;menus.c: 218:                     menuTranca(1);
  1576  007734  0E01               	movlw	1
  1577  007736  ECCB  F03D         	call	_menuTranca
  1578  00773A  EF1E  F03B         	goto	l2661
  1579  00773E                     l2707:
  1580                           
  1581                           ;menus.c: 223:                 if(estadoTranca) {
  1582  00773E  503C               	movf	_estadoTranca^0,w,c
  1583  007740  B4D8               	btfsc	status,2,c
  1584  007742  EFA5  F03B         	goto	u1391
  1585  007746  EFA7  F03B         	goto	u1390
  1586  00774A                     u1391:
  1587  00774A  EFC9  F03B         	goto	l2723
  1588  00774E                     u1390:
  1589  00774E                     
  1590                           ;menus.c: 224:                     tranca();
  1591  00774E  EC53  F035         	call	_tranca	;wreg free
  1592  007752                     
  1593                           ;menus.c: 225:                     lcd_cmd(0x01);
  1594  007752  0E01               	movlw	1
  1595  007754  EC7F  F035         	call	_lcd_cmd
  1596  007758                     
  1597                           ;menus.c: 226:                     lcd_cmd(0x80 +1);
  1598  007758  0E81               	movlw	129
  1599  00775A  EC7F  F035         	call	_lcd_cmd
  1600  00775E                     
  1601                           ;menus.c: 227:                     lcd_str("Porta Trancada");
  1602  00775E  0EA9               	movlw	low STR_28
  1603  007760  6E08               	movwf	lcd_str@str^0,c
  1604  007762  0E7E               	movlw	high STR_28
  1605  007764  6E09               	movwf	(lcd_str@str+1)^0,c
  1606  007766  EC74  F036         	call	_lcd_str	;wreg free
  1607  00776A                     
  1608                           ;menus.c: 228:                     lcd_cmd(0xC0 +1);
  1609  00776A  0EC1               	movlw	193
  1610  00776C  EC7F  F035         	call	_lcd_cmd
  1611  007770                     
  1612                           ;menus.c: 229:                     lcd_str("com sucesso");
  1613  007770  0EED               	movlw	low STR_11
  1614  007772  6E08               	movwf	lcd_str@str^0,c
  1615  007774  0E7E               	movlw	high STR_11
  1616  007776  6E09               	movwf	(lcd_str@str+1)^0,c
  1617  007778  EC74  F036         	call	_lcd_str	;wreg free
  1618  00777C                     
  1619                           ;menus.c: 230:                     delay_ms(1500);
  1620  00777C  0E05               	movlw	5
  1621  00777E  6E02               	movwf	(delay_ms@t+1)^0,c
  1622  007780  0EDC               	movlw	220
  1623  007782  6E01               	movwf	delay_ms@t^0,c
  1624  007784  ECF5  F036         	call	_delay_ms	;wreg free
  1625                           
  1626                           ;menus.c: 231:                     abreFecha(0);
  1627  007788  0E00               	movlw	0
  1628  00778A  ECA9  F035         	call	_abreFecha
  1629                           
  1630                           ;menus.c: 232:                 }
  1631  00778E  EF1E  F03B         	goto	l2661
  1632  007792                     l2723:
  1633                           
  1634                           ;menus.c: 236:                     menuTranca(2);
  1635  007792  0E02               	movlw	2
  1636  007794  ECCB  F03D         	call	_menuTranca
  1637  007798  EF1E  F03B         	goto	l2661
  1638  00779C                     l2725:
  1639                           
  1640                           ;menus.c: 239:                 lcd_cmd(0x01);
  1641  00779C  0E01               	movlw	1
  1642  00779E  EC7F  F035         	call	_lcd_cmd
  1643  0077A2  EFF5  F03B         	goto	l202
  1644  0077A6                     l2731:
  1645                           
  1646                           ;menus.c: 245:                 menuTranca(4);
  1647  0077A6  0E04               	movlw	4
  1648  0077A8  ECCB  F03D         	call	_menuTranca
  1649                           
  1650                           ;menus.c: 246:                 break;
  1651  0077AC  EF1E  F03B         	goto	l2661
  1652  0077B0                     l2735:
  1653  0077B0  502C               	movf	menuPorta@tmp^0,w,c
  1654  0077B2  6E2A               	movwf	??_menuPorta^0,c
  1655  0077B4  6A2B               	clrf	(??_menuPorta+1)^0,c
  1656                           
  1657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1658                           ; Switch size 1, requested type "simple"
  1659                           ; Number of cases is 1, Range of values is 0 to 0
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; simple_byte            4     3 (average)
  1663                           ;	Chosen strategy is simple_byte
  1664  0077B6  502B               	movf	(??_menuPorta+1)^0,w,c
  1665  0077B8  0A00               	xorlw	0	; case 0
  1666  0077BA  B4D8               	btfsc	status,2,c
  1667  0077BC  EFE2  F03B         	goto	l2951
  1668  0077C0  EF1E  F03B         	goto	l2661
  1669  0077C4                     l2951:
  1670                           
  1671                           ; Switch size 1, requested type "simple"
  1672                           ; Number of cases is 4, Range of values is 1 to 4
  1673                           ; switch strategies available:
  1674                           ; Name         Instructions Cycles
  1675                           ; simple_byte           13     7 (average)
  1676                           ;	Chosen strategy is simple_byte
  1677  0077C4  502A               	movf	??_menuPorta^0,w,c
  1678  0077C6  0A01               	xorlw	1	; case 1
  1679  0077C8  B4D8               	btfsc	status,2,c
  1680  0077CA  EF72  F03B         	goto	l2689
  1681  0077CE  0A03               	xorlw	3	; case 2
  1682  0077D0  B4D8               	btfsc	status,2,c
  1683  0077D2  EF9F  F03B         	goto	l2707
  1684  0077D6  0A01               	xorlw	1	; case 3
  1685  0077D8  B4D8               	btfsc	status,2,c
  1686  0077DA  EFCE  F03B         	goto	l2725
  1687  0077DE  0A07               	xorlw	7	; case 4
  1688  0077E0  B4D8               	btfsc	status,2,c
  1689  0077E2  EFD3  F03B         	goto	l2731
  1690  0077E6  EF1E  F03B         	goto	l2661
  1691  0077EA                     l202:
  1692  0077EA  0012               	return		;funcret
  1693  0077EC                     __end_of_menuPorta:
  1694                           	opt callstack 0
  1695                           
  1696 ;; *************** function _tranca *****************
  1697 ;; Defined at:
  1698 ;;		line 78 in file "porta.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1712 ;;      Params:         0       0       0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_menuPorta
  1722 ;;		_sair
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text4
  1727  006AA6                     __ptext4:
  1728                           	opt callstack 0
  1729  006AA6                     _tranca:
  1730                           	opt callstack 29
  1731  006AA6                     
  1732                           ;porta.c: 79:     estadoTranca = 0;
  1733  006AA6  0E00               	movlw	0
  1734  006AA8  6E3C               	movwf	_estadoTranca^0,c
  1735  006AAA  0012               	return		;funcret
  1736  006AAC                     __end_of_tranca:
  1737                           	opt callstack 0
  1738                           
  1739 ;; *************** function _menuTranca *****************
  1740 ;; Defined at:
  1741 ;;		line 21 in file "menus.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  opcao           1    wreg     unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  opcao           1   38[COMRAM] unsigned char 
  1746 ;;  entrada         2   39[COMRAM] int 
  1747 ;;  digitado        1   37[COMRAM] unsigned char 
  1748 ;;  tmp             1   36[COMRAM] unsigned char 
  1749 ;;  tentativas      1   35[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1759 ;;      Params:         0       0       0       0       0       0       0
  1760 ;;      Locals:         8       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0
  1762 ;;      Totals:         8       0       0       0       0       0       0
  1763 ;;Total ram usage:        8 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    3
  1766 ;; This function calls:
  1767 ;;		___wmul
  1768 ;;		_abreFecha
  1769 ;;		_defineSenha
  1770 ;;		_delay_ms
  1771 ;;		_destranca
  1772 ;;		_lcd_cmd
  1773 ;;		_lcd_str
  1774 ;;		_pow
  1775 ;;		_printSenha
  1776 ;;		_tc_tecla
  1777 ;; This function is called by:
  1778 ;;		_menuPorta
  1779 ;;		_sair
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text5
  1784  007B96                     __ptext5:
  1785                           	opt callstack 0
  1786  007B96                     _menuTranca:
  1787                           	opt callstack 26
  1788                           
  1789                           ;incstack = 0
  1790                           ;menuTranca@opcao stored from wreg
  1791  007B96  6E27               	movwf	menuTranca@opcao^0,c
  1792  007B98                     
  1793                           ;menus.c: 24:     lcd_cmd(0x01);
  1794  007B98  0E01               	movlw	1
  1795  007B9A  EC7F  F035         	call	_lcd_cmd
  1796  007B9E                     
  1797                           ;menus.c: 28:     char digitado = 0;
  1798  007B9E  0E00               	movlw	0
  1799  007BA0  6E26               	movwf	menuTranca@digitado^0,c
  1800  007BA2                     
  1801                           ;menus.c: 30:     char tentativas = 3;
  1802  007BA2  0E03               	movlw	3
  1803  007BA4  6E24               	movwf	menuTranca@tentativas^0,c
  1804  007BA6                     
  1805                           ;menus.c: 33:     if(senha != -1){
  1806  007BA6  2835               	incf	_senha^0,w,c
  1807  007BA8  E108               	bnz	u1220
  1808  007BAA  2836               	incf	(_senha+1)^0,w,c
  1809  007BAC  B4D8               	btfsc	status,2,c
  1810  007BAE  EFDB  F03D         	goto	u1221
  1811  007BB2  EFDD  F03D         	goto	u1220
  1812  007BB6                     u1221:
  1813  007BB6  EFF1  F03D         	goto	l2367
  1814  007BBA                     u1220:
  1815  007BBA                     
  1816                           ;menus.c: 34:         lcd_cmd(0x80 +5);
  1817  007BBA  0E85               	movlw	133
  1818  007BBC  EC7F  F035         	call	_lcd_cmd
  1819  007BC0                     
  1820                           ;menus.c: 35:         lcd_str("Insira");
  1821  007BC0  0EB7               	movlw	low STR_5
  1822  007BC2  6E08               	movwf	lcd_str@str^0,c
  1823  007BC4  0E7F               	movlw	high STR_5
  1824  007BC6  6E09               	movwf	(lcd_str@str+1)^0,c
  1825  007BC8  EC74  F036         	call	_lcd_str	;wreg free
  1826  007BCC                     
  1827                           ;menus.c: 36:         lcd_cmd(0xC0 +5);
  1828  007BCC  0EC5               	movlw	197
  1829  007BCE  EC7F  F035         	call	_lcd_cmd
  1830                           
  1831                           ;menus.c: 37:         lcd_str("a senha");
  1832  007BD2  0ECB               	movlw	low (STR_8+5)
  1833  007BD4  6E08               	movwf	lcd_str@str^0,c
  1834  007BD6  0E7E               	movlw	high (STR_8+5)
  1835  007BD8  6E09               	movwf	(lcd_str@str+1)^0,c
  1836  007BDA  EC74  F036         	call	_lcd_str	;wreg free
  1837                           
  1838                           ;menus.c: 39:     }else{
  1839  007BDE  EF48  F03E         	goto	l2397
  1840  007BE2                     l2367:
  1841                           
  1842                           ;menus.c: 42:         if(opcao == 4){
  1843  007BE2  0E04               	movlw	4
  1844  007BE4  1827               	xorwf	menuTranca@opcao^0,w,c
  1845  007BE6  A4D8               	btfss	status,2,c
  1846  007BE8  EFF8  F03D         	goto	u1231
  1847  007BEC  EFFA  F03D         	goto	u1230
  1848  007BF0                     u1231:
  1849  007BF0  EF0E  F03E         	goto	l2375
  1850  007BF4                     u1230:
  1851  007BF4                     
  1852                           ;menus.c: 43:             lcd_cmd(0x80 +5);
  1853  007BF4  0E85               	movlw	133
  1854  007BF6  EC7F  F035         	call	_lcd_cmd
  1855  007BFA                     
  1856                           ;menus.c: 44:             lcd_str("Insira");
  1857  007BFA  0EB7               	movlw	low STR_5
  1858  007BFC  6E08               	movwf	lcd_str@str^0,c
  1859  007BFE  0E7F               	movlw	high STR_5
  1860  007C00  6E09               	movwf	(lcd_str@str+1)^0,c
  1861  007C02  EC74  F036         	call	_lcd_str	;wreg free
  1862  007C06                     
  1863                           ;menus.c: 45:             lcd_cmd(0xC0 +2);
  1864  007C06  0EC2               	movlw	194
  1865  007C08  EC7F  F035         	call	_lcd_cmd
  1866                           
  1867                           ;menus.c: 46:             lcd_str("a nova senha");
  1868  007C0C  0EC6               	movlw	low STR_8
  1869  007C0E  6E08               	movwf	lcd_str@str^0,c
  1870  007C10  0E7E               	movlw	high STR_8
  1871  007C12  6E09               	movwf	(lcd_str@str+1)^0,c
  1872  007C14  EC74  F036         	call	_lcd_str	;wreg free
  1873                           
  1874                           ;menus.c: 47:         }
  1875  007C18  EF48  F03E         	goto	l2397
  1876  007C1C                     l2375:
  1877                           
  1878                           ;menus.c: 51:             if (opcao == 1){
  1879  007C1C  0427               	decf	menuTranca@opcao^0,w,c
  1880  007C1E  A4D8               	btfss	status,2,c
  1881  007C20  EF14  F03E         	goto	u1241
  1882  007C24  EF16  F03E         	goto	u1240
  1883  007C28                     u1241:
  1884  007C28  EF29  F03E         	goto	l2385
  1885  007C2C                     u1240:
  1886  007C2C                     
  1887                           ;menus.c: 52:                 lcd_cmd(0x80 +1);
  1888  007C2C  0E81               	movlw	129
  1889  007C2E  EC7F  F035         	call	_lcd_cmd
  1890  007C32                     
  1891                           ;menus.c: 53:                 lcd_str("Porta Aberta");
  1892  007C32  0ED3               	movlw	low STR_9
  1893  007C34  6E08               	movwf	lcd_str@str^0,c
  1894  007C36  0E7E               	movlw	high STR_9
  1895  007C38  6E09               	movwf	(lcd_str@str+1)^0,c
  1896  007C3A  EC74  F036         	call	_lcd_str	;wreg free
  1897  007C3E                     
  1898                           ;menus.c: 54:                 destranca(entrada);
  1899  007C3E  0EFF               	movlw	255
  1900  007C40  6E02               	movwf	(destranca@entrada+1)^0,c
  1901  007C42  6801               	setf	destranca@entrada^0,c
  1902  007C44  ECDA  F035         	call	_destranca	;wreg free
  1903  007C48                     
  1904                           ;menus.c: 55:                 abreFecha(1);
  1905  007C48  0E01               	movlw	1
  1906  007C4A  ECA9  F035         	call	_abreFecha
  1907                           
  1908                           ;menus.c: 57:             } else{
  1909  007C4E  EF37  F03E         	goto	l2391
  1910  007C52                     l2385:
  1911                           
  1912                           ;menus.c: 60:                 lcd_cmd(0x80);
  1913  007C52  0E80               	movlw	128
  1914  007C54  EC7F  F035         	call	_lcd_cmd
  1915  007C58                     
  1916                           ;menus.c: 61:                 lcd_str("Porta destrancada");
  1917  007C58  0E87               	movlw	low STR_10
  1918  007C5A  6E08               	movwf	lcd_str@str^0,c
  1919  007C5C  0E7E               	movlw	high STR_10
  1920  007C5E  6E09               	movwf	(lcd_str@str+1)^0,c
  1921  007C60  EC74  F036         	call	_lcd_str	;wreg free
  1922  007C64                     
  1923                           ;menus.c: 62:                 destranca(entrada);
  1924  007C64  0EFF               	movlw	255
  1925  007C66  6E02               	movwf	(destranca@entrada+1)^0,c
  1926  007C68  6801               	setf	destranca@entrada^0,c
  1927  007C6A  ECDA  F035         	call	_destranca	;wreg free
  1928  007C6E                     l2391:
  1929                           
  1930                           ;menus.c: 64:             lcd_cmd(0xC0 +2);
  1931  007C6E  0EC2               	movlw	194
  1932  007C70  EC7F  F035         	call	_lcd_cmd
  1933  007C74                     
  1934                           ;menus.c: 65:             lcd_str("com sucesso");
  1935  007C74  0EED               	movlw	low STR_11
  1936  007C76  6E08               	movwf	lcd_str@str^0,c
  1937  007C78  0E7E               	movlw	high STR_11
  1938  007C7A  6E09               	movwf	(lcd_str@str+1)^0,c
  1939  007C7C  EC74  F036         	call	_lcd_str	;wreg free
  1940                           
  1941                           ;menus.c: 66:             delay_ms(1500);
  1942  007C80  0E05               	movlw	5
  1943  007C82  6E02               	movwf	(delay_ms@t+1)^0,c
  1944  007C84  0EDC               	movlw	220
  1945  007C86  6E01               	movwf	delay_ms@t^0,c
  1946  007C88  ECF5  F036         	call	_delay_ms	;wreg free
  1947  007C8C  EF2C  F03F         	goto	l173
  1948  007C90                     l2397:
  1949                           
  1950                           ;menus.c: 71:     entrada = 0;
  1951  007C90  0E00               	movlw	0
  1952  007C92  6E29               	movwf	(menuTranca@entrada+1)^0,c
  1953  007C94  0E00               	movlw	0
  1954  007C96  6E28               	movwf	menuTranca@entrada^0,c
  1955  007C98                     l2399:
  1956                           
  1957                           ;menus.c: 73:         printSenha(entrada,digitado);
  1958  007C98  C028  F01B         	movff	menuTranca@entrada,printSenha@s
  1959  007C9C  C029  F01C         	movff	menuTranca@entrada+1,printSenha@s+1
  1960  007CA0  C026  F01D         	movff	menuTranca@digitado,printSenha@digitado
  1961  007CA4  ECEE  F039         	call	_printSenha	;wreg free
  1962  007CA8                     
  1963                           ;menus.c: 76:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  1964  007CA8  0E0F               	movlw	15
  1965  007CAA  6E95               	movwf	149,c	;volatile
  1966  007CAC                     
  1967                           ;menus.c: 77:         tmp = tc_tecla(15);
  1968  007CAC  0E00               	movlw	0
  1969  007CAE  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  1970  007CB0  0E0F               	movlw	15
  1971  007CB2  6E07               	movwf	tc_tecla@timeout^0,c
  1972  007CB4  ECF6  F03B         	call	_tc_tecla	;wreg free
  1973  007CB8  6E25               	movwf	menuTranca@tmp^0,c
  1974  007CBA                     
  1975                           ;menus.c: 78:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  1976  007CBA  0E00               	movlw	0
  1977  007CBC  6E95               	movwf	149,c	;volatile
  1978  007CBE                     
  1979                           ;menus.c: 81:         if(tmp != 255){
  1980  007CBE  2825               	incf	menuTranca@tmp^0,w,c
  1981  007CC0  B4D8               	btfsc	status,2,c
  1982  007CC2  EF65  F03E         	goto	u1251
  1983  007CC6  EF67  F03E         	goto	u1250
  1984  007CCA                     u1251:
  1985  007CCA  EF4C  F03E         	goto	l2399
  1986  007CCE                     u1250:
  1987  007CCE                     
  1988                           ;menus.c: 82:             digitado++;
  1989  007CCE  2A26               	incf	menuTranca@digitado^0,f,c
  1990  007CD0                     
  1991                           ;menus.c: 83:             entrada += tmp * pow(10,4-digitado);
  1992  007CD0  5026               	movf	menuTranca@digitado^0,w,c
  1993  007CD2  0804               	sublw	4
  1994  007CD4  6E09               	movwf	pow@exp^0,c
  1995  007CD6  0E00               	movlw	0
  1996  007CD8  A0D8               	btfss	status,0,c
  1997  007CDA  2AE8               	incf	wreg,f,c
  1998  007CDC  0800               	sublw	0
  1999  007CDE  6E0A               	movwf	(pow@exp+1)^0,c
  2000  007CE0  0E00               	movlw	0
  2001  007CE2  6E08               	movwf	(pow@bas+1)^0,c
  2002  007CE4  0E0A               	movlw	10
  2003  007CE6  6E07               	movwf	pow@bas^0,c
  2004  007CE8  EC9C  F036         	call	_pow	;wreg free
  2005  007CEC  C007  F022         	movff	?_pow,_menuTranca$1002
  2006  007CF0  C008  F023         	movff	?_pow+1,_menuTranca$1002+1
  2007  007CF4                     
  2008                           ;menus.c: 83:             entrada += tmp * pow(10,4-digitado);
  2009  007CF4  C025  F001         	movff	menuTranca@tmp,___wmul@multiplier
  2010  007CF8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2011  007CFA  C022  F003         	movff	_menuTranca$1002,___wmul@multiplicand
  2012  007CFE  C023  F004         	movff	_menuTranca$1002+1,___wmul@multiplicand+1
  2013  007D02  EC6C  F035         	call	___wmul	;wreg free
  2014  007D06  5001               	movf	?___wmul^0,w,c
  2015  007D08  2628               	addwf	menuTranca@entrada^0,f,c
  2016  007D0A  5002               	movf	(?___wmul+1)^0,w,c
  2017  007D0C  2229               	addwfc	(menuTranca@entrada+1)^0,f,c
  2018  007D0E                     
  2019                           ;menus.c: 86:             if(digitado == 4){
  2020  007D0E  0E04               	movlw	4
  2021  007D10  1826               	xorwf	menuTranca@digitado^0,w,c
  2022  007D12  A4D8               	btfss	status,2,c
  2023  007D14  EF8E  F03E         	goto	u1261
  2024  007D18  EF90  F03E         	goto	u1260
  2025  007D1C                     u1261:
  2026  007D1C  EF4C  F03E         	goto	l2399
  2027  007D20                     u1260:
  2028  007D20                     
  2029                           ;menus.c: 89:                 if(opcao != 4){
  2030  007D20  0E04               	movlw	4
  2031  007D22  1827               	xorwf	menuTranca@opcao^0,w,c
  2032  007D24  B4D8               	btfsc	status,2,c
  2033  007D26  EF97  F03E         	goto	u1271
  2034  007D2A  EF99  F03E         	goto	u1270
  2035  007D2E                     u1271:
  2036  007D2E  EF0B  F03F         	goto	l2467
  2037  007D32                     u1270:
  2038  007D32                     
  2039                           ;menus.c: 93:                     if(destranca(entrada)){
  2040  007D32  C028  F001         	movff	menuTranca@entrada,destranca@entrada
  2041  007D36  C029  F002         	movff	menuTranca@entrada+1,destranca@entrada+1
  2042  007D3A  ECDA  F035         	call	_destranca	;wreg free
  2043  007D3E  0900               	iorlw	0
  2044  007D40  B4D8               	btfsc	status,2,c
  2045  007D42  EFA5  F03E         	goto	u1281
  2046  007D46  EFA7  F03E         	goto	u1280
  2047  007D4A                     u1281:
  2048  007D4A  EFCB  F03E         	goto	l2439
  2049  007D4E                     u1280:
  2050  007D4E                     
  2051                           ;menus.c: 94:                         lcd_cmd(0x01);
  2052  007D4E  0E01               	movlw	1
  2053  007D50  EC7F  F035         	call	_lcd_cmd
  2054  007D54                     
  2055                           ;menus.c: 95:                          if (opcao == 1){
  2056  007D54  0427               	decf	menuTranca@opcao^0,w,c
  2057  007D56  A4D8               	btfss	status,2,c
  2058  007D58  EFB0  F03E         	goto	u1291
  2059  007D5C  EFB2  F03E         	goto	u1290
  2060  007D60                     u1291:
  2061  007D60  EFC0  F03E         	goto	l2431
  2062  007D64                     u1290:
  2063  007D64                     
  2064                           ;menus.c: 96:                             lcd_cmd(0x80 +1);
  2065  007D64  0E81               	movlw	129
  2066  007D66  EC7F  F035         	call	_lcd_cmd
  2067  007D6A                     
  2068                           ;menus.c: 97:                             lcd_str("Porta Aberta");
  2069  007D6A  0ED3               	movlw	low STR_9
  2070  007D6C  6E08               	movwf	lcd_str@str^0,c
  2071  007D6E  0E7E               	movlw	high STR_9
  2072  007D70  6E09               	movwf	(lcd_str@str+1)^0,c
  2073  007D72  EC74  F036         	call	_lcd_str	;wreg free
  2074  007D76                     
  2075                           ;menus.c: 98:                             abreFecha(1);
  2076  007D76  0E01               	movlw	1
  2077  007D78  ECA9  F035         	call	_abreFecha
  2078                           
  2079                           ;menus.c: 99:                         } else{
  2080  007D7C  EF2C  F03F         	goto	l173
  2081  007D80                     l2431:
  2082                           
  2083                           ;menus.c: 100:                             lcd_cmd(0x80);
  2084  007D80  0E80               	movlw	128
  2085  007D82  EC7F  F035         	call	_lcd_cmd
  2086  007D86                     
  2087                           ;menus.c: 101:                             lcd_str("Porta destrancada");
  2088  007D86  0E87               	movlw	low STR_10
  2089  007D88  6E08               	movwf	lcd_str@str^0,c
  2090  007D8A  0E7E               	movlw	high STR_10
  2091  007D8C  6E09               	movwf	(lcd_str@str+1)^0,c
  2092  007D8E  EC74  F036         	call	_lcd_str	;wreg free
  2093  007D92  EF2C  F03F         	goto	l173
  2094  007D96                     l2439:
  2095                           
  2096                           ;menus.c: 110:                         digitado = 0;
  2097  007D96  0E00               	movlw	0
  2098  007D98  6E26               	movwf	menuTranca@digitado^0,c
  2099                           
  2100                           ;menus.c: 111:                         entrada = 0;
  2101  007D9A  0E00               	movlw	0
  2102  007D9C  6E29               	movwf	(menuTranca@entrada+1)^0,c
  2103  007D9E  0E00               	movlw	0
  2104  007DA0  6E28               	movwf	menuTranca@entrada^0,c
  2105  007DA2                     
  2106                           ;menus.c: 112:                         lcd_cmd(0x80 +5);
  2107  007DA2  0E85               	movlw	133
  2108  007DA4  EC7F  F035         	call	_lcd_cmd
  2109  007DA8                     
  2110                           ;menus.c: 113:                         lcd_str("Senha");
  2111  007DA8  0EED               	movlw	low STR_14
  2112  007DAA  6E08               	movwf	lcd_str@str^0,c
  2113  007DAC  0E7F               	movlw	high STR_14
  2114  007DAE  6E09               	movwf	(lcd_str@str+1)^0,c
  2115  007DB0  EC74  F036         	call	_lcd_str	;wreg free
  2116  007DB4                     
  2117                           ;menus.c: 114:                         lcd_cmd(0xC0 +5);
  2118  007DB4  0EC5               	movlw	197
  2119  007DB6  EC7F  F035         	call	_lcd_cmd
  2120  007DBA                     
  2121                           ;menus.c: 115:                         lcd_str("Incorreta");
  2122  007DBA  0E46               	movlw	low STR_15
  2123  007DBC  6E08               	movwf	lcd_str@str^0,c
  2124  007DBE  0E7F               	movlw	high STR_15
  2125  007DC0  6E09               	movwf	(lcd_str@str+1)^0,c
  2126  007DC2  EC74  F036         	call	_lcd_str	;wreg free
  2127  007DC6                     
  2128                           ;menus.c: 118:                         tentativas--;
  2129  007DC6  0624               	decf	menuTranca@tentativas^0,f,c
  2130  007DC8                     
  2131                           ;menus.c: 119:                         delay_ms(1500);
  2132  007DC8  0E05               	movlw	5
  2133  007DCA  6E02               	movwf	(delay_ms@t+1)^0,c
  2134  007DCC  0EDC               	movlw	220
  2135  007DCE  6E01               	movwf	delay_ms@t^0,c
  2136  007DD0  ECF5  F036         	call	_delay_ms	;wreg free
  2137  007DD4                     
  2138                           ;menus.c: 120:                         lcd_cmd(0x01);
  2139  007DD4  0E01               	movlw	1
  2140  007DD6  EC7F  F035         	call	_lcd_cmd
  2141  007DDA                     
  2142                           ;menus.c: 123:                         if(!tentativas)
  2143  007DDA  5024               	movf	menuTranca@tentativas^0,w,c
  2144  007DDC  A4D8               	btfss	status,2,c
  2145  007DDE  EFF3  F03E         	goto	u1301
  2146  007DE2  EFF5  F03E         	goto	u1300
  2147  007DE6                     u1301:
  2148  007DE6  EFF7  F03E         	goto	l2461
  2149  007DEA                     u1300:
  2150  007DEA  EF2C  F03F         	goto	l173
  2151  007DEE                     l2461:
  2152                           
  2153                           ;menus.c: 128:                             lcd_cmd(0x80 +5);
  2154  007DEE  0E85               	movlw	133
  2155  007DF0  EC7F  F035         	call	_lcd_cmd
  2156  007DF4                     
  2157                           ;menus.c: 129:                             lcd_str("Insira");
  2158  007DF4  0EB7               	movlw	low STR_5
  2159  007DF6  6E08               	movwf	lcd_str@str^0,c
  2160  007DF8  0E7F               	movlw	high STR_5
  2161  007DFA  6E09               	movwf	(lcd_str@str+1)^0,c
  2162  007DFC  EC74  F036         	call	_lcd_str	;wreg free
  2163  007E00                     
  2164                           ;menus.c: 130:                             lcd_cmd(0xC0 +5);
  2165  007E00  0EC5               	movlw	197
  2166  007E02  EC7F  F035         	call	_lcd_cmd
  2167                           
  2168                           ;menus.c: 131:                             lcd_str("a senha");
  2169  007E06  0ECB               	movlw	low (STR_8+5)
  2170  007E08  6E08               	movwf	lcd_str@str^0,c
  2171  007E0A  0E7E               	movlw	high (STR_8+5)
  2172  007E0C  6E09               	movwf	(lcd_str@str+1)^0,c
  2173  007E0E  EC74  F036         	call	_lcd_str	;wreg free
  2174  007E12  EF4C  F03E         	goto	l2399
  2175  007E16                     l2467:
  2176                           
  2177                           ;menus.c: 135:                     defineSenha(entrada);
  2178  007E16  C028  F001         	movff	menuTranca@entrada,defineSenha@entrada
  2179  007E1A  C029  F002         	movff	menuTranca@entrada+1,defineSenha@entrada+1
  2180  007E1E  EC62  F035         	call	_defineSenha	;wreg free
  2181  007E22                     
  2182                           ;menus.c: 137:                     lcd_cmd(0x01);
  2183  007E22  0E01               	movlw	1
  2184  007E24  EC7F  F035         	call	_lcd_cmd
  2185  007E28                     
  2186                           ;menus.c: 138:                     lcd_cmd(0x80 +2);
  2187  007E28  0E82               	movlw	130
  2188  007E2A  EC7F  F035         	call	_lcd_cmd
  2189  007E2E                     
  2190                           ;menus.c: 139:                     lcd_str("nova senha");
  2191  007E2E  0EC8               	movlw	low (STR_8+2)
  2192  007E30  6E08               	movwf	lcd_str@str^0,c
  2193  007E32  0E7E               	movlw	high (STR_8+2)
  2194  007E34  6E09               	movwf	(lcd_str@str+1)^0,c
  2195  007E36  EC74  F036         	call	_lcd_str	;wreg free
  2196  007E3A                     
  2197                           ;menus.c: 140:                     lcd_cmd(0xC0 +5);
  2198  007E3A  0EC5               	movlw	197
  2199  007E3C  EC7F  F035         	call	_lcd_cmd
  2200  007E40                     
  2201                           ;menus.c: 141:                     lcd_str("definida");
  2202  007E40  0E5A               	movlw	low STR_19
  2203  007E42  6E08               	movwf	lcd_str@str^0,c
  2204  007E44  0E7F               	movlw	high STR_19
  2205  007E46  6E09               	movwf	(lcd_str@str+1)^0,c
  2206  007E48  EC74  F036         	call	_lcd_str	;wreg free
  2207  007E4C                     
  2208                           ;menus.c: 143:                     delay_ms(2000);
  2209  007E4C  0E07               	movlw	7
  2210  007E4E  6E02               	movwf	(delay_ms@t+1)^0,c
  2211  007E50  0ED0               	movlw	208
  2212  007E52  6E01               	movwf	delay_ms@t^0,c
  2213  007E54  ECF5  F036         	call	_delay_ms	;wreg free
  2214  007E58                     l173:
  2215  007E58  0012               	return		;funcret
  2216  007E5A                     __end_of_menuTranca:
  2217                           	opt callstack 0
  2218                           
  2219 ;; *************** function _printSenha *****************
  2220 ;; Defined at:
  2221 ;;		line 65 in file "ssd.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  s               2   26[COMRAM] int 
  2224 ;;  digitado        1   28[COMRAM] unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  i               1   32[COMRAM] unsigned char 
  2227 ;;  j               1   31[COMRAM] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2237 ;;      Params:         3       0       0       0       0       0       0
  2238 ;;      Locals:         2       0       0       0       0       0       0
  2239 ;;      Temps:          2       0       0       0       0       0       0
  2240 ;;      Totals:         7       0       0       0       0       0       0
  2241 ;;Total ram usage:        7 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    2
  2244 ;; This function calls:
  2245 ;;		___awdiv
  2246 ;;		___awmod
  2247 ;;		_delay_ms
  2248 ;;		_pow
  2249 ;; This function is called by:
  2250 ;;		_menuTranca
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text6
  2255  0073DC                     __ptext6:
  2256                           	opt callstack 0
  2257  0073DC                     _printSenha:
  2258                           	opt callstack 26
  2259  0073DC                     
  2260                           ;ssd.c: 66:     char i,j;;ssd.c: 67:     for(i = 0; i < digitado; i++){
  2261  0073DC  0E00               	movlw	0
  2262  0073DE  6E21               	movwf	printSenha@i^0,c
  2263  0073E0  EF49  F03A         	goto	l2287
  2264  0073E4                     l2277:
  2265                           
  2266                           ;ssd.c: 68:         (*(volatile __near unsigned char*)0xF80) = 0x00;
  2267  0073E4  0E00               	movlw	0
  2268  0073E6  6E80               	movwf	128,c	;volatile
  2269                           
  2270                           ;ssd.c: 69:         (*(volatile __near unsigned char*)0xF83) = 0x00;
  2271  0073E8  0E00               	movlw	0
  2272  0073EA  6E83               	movwf	131,c	;volatile
  2273  0073EC                     
  2274                           ;ssd.c: 71:         (*(volatile __near unsigned char*)0xF83) = num[(s%pow(10,4-i))/pow(1
      +                          0,3-i)];
  2275  0073EC  5021               	movf	printSenha@i^0,w,c
  2276  0073EE  0804               	sublw	4
  2277  0073F0  6E09               	movwf	pow@exp^0,c
  2278  0073F2  0E00               	movlw	0
  2279  0073F4  A0D8               	btfss	status,0,c
  2280  0073F6  2AE8               	incf	wreg,f,c
  2281  0073F8  0800               	sublw	0
  2282  0073FA  6E0A               	movwf	(pow@exp+1)^0,c
  2283  0073FC  0E00               	movlw	0
  2284  0073FE  6E08               	movwf	(pow@bas+1)^0,c
  2285  007400  0E0A               	movlw	10
  2286  007402  6E07               	movwf	pow@bas^0,c
  2287  007404  EC9C  F036         	call	_pow	;wreg free
  2288  007408  C007  F00F         	movff	?_pow,___awmod@divisor
  2289  00740C  C008  F010         	movff	?_pow+1,___awmod@divisor+1
  2290  007410  C01B  F00D         	movff	printSenha@s,___awmod@dividend
  2291  007414  C01C  F00E         	movff	printSenha@s+1,___awmod@dividend+1
  2292  007418  ECCF  F037         	call	___awmod	;wreg free
  2293  00741C  C00D  F013         	movff	?___awmod,___awdiv@dividend
  2294  007420  C00E  F014         	movff	?___awmod+1,___awdiv@dividend+1
  2295  007424  5021               	movf	printSenha@i^0,w,c
  2296  007426  0803               	sublw	3
  2297  007428  6E09               	movwf	pow@exp^0,c
  2298  00742A  0E00               	movlw	0
  2299  00742C  A0D8               	btfss	status,0,c
  2300  00742E  2AE8               	incf	wreg,f,c
  2301  007430  0800               	sublw	0
  2302  007432  6E0A               	movwf	(pow@exp+1)^0,c
  2303  007434  0E00               	movlw	0
  2304  007436  6E08               	movwf	(pow@bas+1)^0,c
  2305  007438  0E0A               	movlw	10
  2306  00743A  6E07               	movwf	pow@bas^0,c
  2307  00743C  EC9C  F036         	call	_pow	;wreg free
  2308  007440  C007  F015         	movff	?_pow,___awdiv@divisor
  2309  007444  C008  F016         	movff	?_pow+1,___awdiv@divisor+1
  2310  007448  EC87  F038         	call	___awdiv	;wreg free
  2311  00744C  90D8               	bcf	status,0,c
  2312  00744E  3613               	rlcf	?___awdiv^0,f,c
  2313  007450  3614               	rlcf	(?___awdiv+1)^0,f,c
  2314  007452  0E5B               	movlw	low ssd@num
  2315  007454  2413               	addwf	?___awdiv^0,w,c
  2316  007456  6EF6               	movwf	tblptrl,c
  2317  007458  0E7E               	movlw	high ssd@num
  2318  00745A  2014               	addwfc	(?___awdiv+1)^0,w,c
  2319  00745C  6EF7               	movwf	tblptrh,c
  2320  00745E                     	if	0	;There are less than 3 active tblptr bytes
  2321  00745E                     	endif
  2322  00745E  0008               	tblrd		*
  2323  007460  CFF5 FF83          	movff	tablat,3971	;volatile
  2324  007464                     
  2325                           ;ssd.c: 72:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<(i+2)));
  2326  007464  C021  F01E         	movff	printSenha@i,??_printSenha
  2327  007468  0E02               	movlw	2
  2328  00746A  261E               	addwf	??_printSenha^0,f,c
  2329  00746C  0E01               	movlw	1
  2330  00746E  6E1F               	movwf	(??_printSenha+1)^0,c
  2331  007470  2A1E               	incf	??_printSenha^0,f,c
  2332  007472  EF3D  F03A         	goto	u1184
  2333  007476                     u1185:
  2334  007476  90D8               	bcf	status,0,c
  2335  007478  361F               	rlcf	(??_printSenha+1)^0,f,c
  2336  00747A                     u1184:
  2337  00747A  2E1E               	decfsz	??_printSenha^0,f,c
  2338  00747C  EF3B  F03A         	goto	u1185
  2339  007480  501F               	movf	(??_printSenha+1)^0,w,c
  2340  007482  1280               	iorwf	128,f,c	;volatile
  2341  007484                     
  2342                           ;ssd.c: 74:         delay_ms(15);
  2343  007484  0E00               	movlw	0
  2344  007486  6E02               	movwf	(delay_ms@t+1)^0,c
  2345  007488  0E0F               	movlw	15
  2346  00748A  6E01               	movwf	delay_ms@t^0,c
  2347  00748C  ECF5  F036         	call	_delay_ms	;wreg free
  2348  007490                     
  2349                           ;ssd.c: 75:     }
  2350  007490  2A21               	incf	printSenha@i^0,f,c
  2351  007492                     l2287:
  2352  007492  501D               	movf	printSenha@digitado^0,w,c
  2353  007494  5C21               	subwf	printSenha@i^0,w,c
  2354  007496  A0D8               	btfss	status,0,c
  2355  007498  EF50  F03A         	goto	u1191
  2356  00749C  EF52  F03A         	goto	u1190
  2357  0074A0                     u1191:
  2358  0074A0  EFF2  F039         	goto	l2277
  2359  0074A4                     u1190:
  2360  0074A4                     
  2361                           ;ssd.c: 76:     for(j = i; j < 4;j++){
  2362  0074A4  C021  F020         	movff	printSenha@i,printSenha@j
  2363  0074A8                     l2289:
  2364  0074A8  0E03               	movlw	3
  2365  0074AA  6420               	cpfsgt	printSenha@j^0,c
  2366  0074AC  EF5A  F03A         	goto	u1201
  2367  0074B0  EF5C  F03A         	goto	u1200
  2368  0074B4                     u1201:
  2369  0074B4  EF5E  F03A         	goto	l2293
  2370  0074B8                     u1200:
  2371  0074B8  EF7D  F03A         	goto	l2303
  2372  0074BC                     l2293:
  2373                           
  2374                           ;ssd.c: 77:         (*(volatile __near unsigned char*)0xF80) = 0x00;
  2375  0074BC  0E00               	movlw	0
  2376  0074BE  6E80               	movwf	128,c	;volatile
  2377                           
  2378                           ;ssd.c: 78:         (*(volatile __near unsigned char*)0xF83) = 0x00;
  2379  0074C0  0E00               	movlw	0
  2380  0074C2  6E83               	movwf	131,c	;volatile
  2381                           
  2382                           ;ssd.c: 80:         (*(volatile __near unsigned char*)0xF83) = 0x40;
  2383  0074C4  0E40               	movlw	64
  2384  0074C6  6E83               	movwf	131,c	;volatile
  2385  0074C8                     
  2386                           ;ssd.c: 81:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<(j+2)));
  2387  0074C8  C020  F01E         	movff	printSenha@j,??_printSenha
  2388  0074CC  0E02               	movlw	2
  2389  0074CE  261E               	addwf	??_printSenha^0,f,c
  2390  0074D0  0E01               	movlw	1
  2391  0074D2  6E1F               	movwf	(??_printSenha+1)^0,c
  2392  0074D4  2A1E               	incf	??_printSenha^0,f,c
  2393  0074D6  EF6F  F03A         	goto	u1214
  2394  0074DA                     u1215:
  2395  0074DA  90D8               	bcf	status,0,c
  2396  0074DC  361F               	rlcf	(??_printSenha+1)^0,f,c
  2397  0074DE                     u1214:
  2398  0074DE  2E1E               	decfsz	??_printSenha^0,f,c
  2399  0074E0  EF6D  F03A         	goto	u1215
  2400  0074E4  501F               	movf	(??_printSenha+1)^0,w,c
  2401  0074E6  1280               	iorwf	128,f,c	;volatile
  2402  0074E8                     
  2403                           ;ssd.c: 83:         delay_ms(15);
  2404  0074E8  0E00               	movlw	0
  2405  0074EA  6E02               	movwf	(delay_ms@t+1)^0,c
  2406  0074EC  0E0F               	movlw	15
  2407  0074EE  6E01               	movwf	delay_ms@t^0,c
  2408  0074F0  ECF5  F036         	call	_delay_ms	;wreg free
  2409  0074F4                     
  2410                           ;ssd.c: 84:     }
  2411  0074F4  2A20               	incf	printSenha@j^0,f,c
  2412  0074F6  EF54  F03A         	goto	l2289
  2413  0074FA                     l2303:
  2414                           
  2415                           ;ssd.c: 85:     (*(volatile __near unsigned char*)0xF80) = 0x00;
  2416  0074FA  0E00               	movlw	0
  2417  0074FC  6E80               	movwf	128,c	;volatile
  2418                           
  2419                           ;ssd.c: 86:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  2420  0074FE  0E00               	movlw	0
  2421  007500  6E83               	movwf	131,c	;volatile
  2422  007502  0012               	return		;funcret
  2423  007504                     __end_of_printSenha:
  2424                           	opt callstack 0
  2425                           
  2426 ;; *************** function _pow *****************
  2427 ;; Defined at:
  2428 ;;		line 12 in file "porta.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  bas             2    6[COMRAM] int 
  2431 ;;  exp             2    8[COMRAM] int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  resp            2   10[COMRAM] int 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2    6[COMRAM] int 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2443 ;;      Params:         4       0       0       0       0       0       0
  2444 ;;      Locals:         2       0       0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0
  2446 ;;      Totals:         6       0       0       0       0       0       0
  2447 ;;Total ram usage:        6 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    1
  2450 ;; This function calls:
  2451 ;;		___wmul
  2452 ;; This function is called by:
  2453 ;;		_menuTranca
  2454 ;;		_printSenha
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text7
  2459  006D38                     __ptext7:
  2460                           	opt callstack 0
  2461  006D38                     _pow:
  2462                           	opt callstack 26
  2463  006D38                     
  2464                           ;porta.c: 13:     int resp = 1;
  2465  006D38  0E00               	movlw	0
  2466  006D3A  6E0C               	movwf	(pow@resp+1)^0,c
  2467  006D3C  0E01               	movlw	1
  2468  006D3E  6E0B               	movwf	pow@resp^0,c
  2469  006D40                     l2039:
  2470  006D40  BE0A               	btfsc	(pow@exp+1)^0,7,c
  2471  006D42  EFAD  F036         	goto	u760
  2472  006D46  500A               	movf	(pow@exp+1)^0,w,c
  2473  006D48  E106               	bnz	u761
  2474  006D4A  0409               	decf	pow@exp^0,w,c
  2475  006D4C  B0D8               	btfsc	status,0,c
  2476  006D4E  EFAB  F036         	goto	u761
  2477  006D52  EFAD  F036         	goto	u760
  2478  006D56                     u761:
  2479  006D56  EFAF  F036         	goto	l2043
  2480  006D5A                     u760:
  2481  006D5A  EFC2  F036         	goto	l316
  2482  006D5E                     l2043:
  2483                           
  2484                           ;porta.c: 15:         resp = resp * bas;
  2485  006D5E  C00B  F001         	movff	pow@resp,___wmul@multiplier
  2486  006D62  C00C  F002         	movff	pow@resp+1,___wmul@multiplier+1
  2487  006D66  C007  F003         	movff	pow@bas,___wmul@multiplicand
  2488  006D6A  C008  F004         	movff	pow@bas+1,___wmul@multiplicand+1
  2489  006D6E  EC6C  F035         	call	___wmul	;wreg free
  2490  006D72  C001  F00B         	movff	?___wmul,pow@resp
  2491  006D76  C002  F00C         	movff	?___wmul+1,pow@resp+1
  2492  006D7A  0609               	decf	pow@exp^0,f,c
  2493  006D7C  A0D8               	btfss	status,0,c
  2494  006D7E  060A               	decf	(pow@exp+1)^0,f,c
  2495  006D80  EFA0  F036         	goto	l2039
  2496  006D84                     l316:
  2497                           
  2498                           ;porta.c: 16:     return resp;
  2499  006D84  C00B  F007         	movff	pow@resp,?_pow
  2500  006D88  C00C  F008         	movff	pow@resp+1,?_pow+1
  2501  006D8C  0012               	return		;funcret
  2502  006D8E                     __end_of_pow:
  2503                           	opt callstack 0
  2504                           
  2505 ;; *************** function ___wmul *****************
  2506 ;; Defined at:
  2507 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  multiplier      2    0[COMRAM] unsigned int 
  2510 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  product         2    4[COMRAM] unsigned int 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2    0[COMRAM] unsigned int 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, prodl, prodh
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         4       0       0       0       0       0       0
  2523 ;;      Locals:         2       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         6       0       0       0       0       0       0
  2526 ;;Total ram usage:        6 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_menuTranca
  2532 ;;		_pow
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text8
  2537  006AD8                     __ptext8:
  2538                           	opt callstack 0
  2539  006AD8                     ___wmul:
  2540                           	opt callstack 26
  2541  006AD8  5001               	movf	___wmul@multiplier^0,w,c
  2542  006ADA  0203               	mulwf	___wmul@multiplicand^0,c
  2543  006ADC  CFF3 F005          	movff	prodl,___wmul@product
  2544  006AE0  CFF4 F006          	movff	prodh,___wmul@product+1
  2545  006AE4  5001               	movf	___wmul@multiplier^0,w,c
  2546  006AE6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2547  006AE8  50F3               	movf	243,w,c
  2548  006AEA  2606               	addwf	(___wmul@product+1)^0,f,c
  2549  006AEC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2550  006AEE  0203               	mulwf	___wmul@multiplicand^0,c
  2551  006AF0  50F3               	movf	243,w,c
  2552  006AF2  2606               	addwf	(___wmul@product+1)^0,f,c
  2553  006AF4  C005  F001         	movff	___wmul@product,?___wmul
  2554  006AF8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2555  006AFC  0012               	return		;funcret
  2556  006AFE                     __end_of___wmul:
  2557                           	opt callstack 0
  2558                           
  2559 ;; *************** function _destranca *****************
  2560 ;; Defined at:
  2561 ;;		line 95 in file "porta.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  entrada         2    0[COMRAM] int 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      unsigned char 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2575 ;;      Params:         2       0       0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0
  2578 ;;      Totals:         2       0       0       0       0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_menuTranca
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text9
  2589  006BB4                     __ptext9:
  2590                           	opt callstack 0
  2591  006BB4                     _destranca:
  2592                           	opt callstack 28
  2593  006BB4                     
  2594                           ;porta.c: 99:     if(!estadoTranca){
  2595  006BB4  503C               	movf	_estadoTranca^0,w,c
  2596  006BB6  A4D8               	btfss	status,2,c
  2597  006BB8  EFE0  F035         	goto	u1141
  2598  006BBC  EFE2  F035         	goto	u1140
  2599  006BC0                     u1141:
  2600  006BC0  EFF0  F035         	goto	l2247
  2601  006BC4                     u1140:
  2602  006BC4                     
  2603                           ;porta.c: 103:         if(entrada == senha){
  2604  006BC4  5035               	movf	_senha^0,w,c
  2605  006BC6  1801               	xorwf	destranca@entrada^0,w,c
  2606  006BC8  E107               	bnz	u1151
  2607  006BCA  5036               	movf	(_senha+1)^0,w,c
  2608  006BCC  1802               	xorwf	(destranca@entrada+1)^0,w,c
  2609  006BCE  A4D8               	btfss	status,2,c
  2610  006BD0  EFEC  F035         	goto	u1151
  2611  006BD4  EFEE  F035         	goto	u1150
  2612  006BD8                     u1151:
  2613  006BD8  EFF3  F035         	goto	l2253
  2614  006BDC                     u1150:
  2615  006BDC                     
  2616                           ;porta.c: 104:             estadoTranca = 1;
  2617  006BDC  0E01               	movlw	1
  2618  006BDE  6E3C               	movwf	_estadoTranca^0,c
  2619  006BE0                     l2247:
  2620                           
  2621                           ;porta.c: 105:             return 1;
  2622  006BE0  0E01               	movlw	1
  2623  006BE2  EFF4  F035         	goto	l334
  2624  006BE6                     l2253:
  2625                           
  2626                           ;porta.c: 110:         return 0;
  2627  006BE6  0E00               	movlw	0
  2628  006BE8                     l334:
  2629  006BE8  0012               	return		;funcret
  2630  006BEA                     __end_of_destranca:
  2631                           	opt callstack 0
  2632                           
  2633 ;; *************** function _defineSenha *****************
  2634 ;; Defined at:
  2635 ;;		line 30 in file "porta.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  entrada         2    0[COMRAM] int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2    0[COMRAM] int 
  2642 ;; Registers used:
  2643 ;;		None
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2649 ;;      Params:         2       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0
  2652 ;;      Totals:         2       0       0       0       0       0       0
  2653 ;;Total ram usage:        2 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_menuTranca
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text10
  2663  006AC4                     __ptext10:
  2664                           	opt callstack 0
  2665  006AC4                     _defineSenha:
  2666                           	opt callstack 28
  2667  006AC4                     
  2668                           ;porta.c: 31:     senha = entrada;
  2669  006AC4  C001  F035         	movff	defineSenha@entrada,_senha
  2670  006AC8  C002  F036         	movff	defineSenha@entrada+1,_senha+1
  2671  006ACC  0012               	return		;funcret
  2672  006ACE                     __end_of_defineSenha:
  2673                           	opt callstack 0
  2674                           
  2675 ;; *************** function _abreFecha *****************
  2676 ;; Defined at:
  2677 ;;		line 47 in file "porta.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  comando         1    wreg     unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  comando         1    0[COMRAM] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      unsigned char 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         0       0       0       0       0       0       0
  2692 ;;      Locals:         1       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0
  2694 ;;      Totals:         1       0       0       0       0       0       0
  2695 ;;Total ram usage:        1 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_menuTranca
  2701 ;;		_menuPorta
  2702 ;;		_sair
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text11
  2707  006B52                     __ptext11:
  2708                           	opt callstack 0
  2709  006B52                     _abreFecha:
  2710                           	opt callstack 28
  2711                           
  2712                           ;incstack = 0
  2713                           ;abreFecha@comando stored from wreg
  2714  006B52  6E01               	movwf	abreFecha@comando^0,c
  2715  006B54                     
  2716                           ;porta.c: 49:     if(!comando){
  2717  006B54  5001               	movf	abreFecha@comando^0,w,c
  2718  006B56  A4D8               	btfss	status,2,c
  2719  006B58  EFB0  F035         	goto	u1161
  2720  006B5C  EFB2  F035         	goto	u1160
  2721  006B60                     u1161:
  2722  006B60  EFB6  F035         	goto	l2269
  2723  006B64                     u1160:
  2724  006B64                     
  2725                           ;porta.c: 50:         estadoPorta = 0;
  2726  006B64  0E00               	movlw	0
  2727  006B66  6E3D               	movwf	_estadoPorta^0,c
  2728  006B68  EFC0  F035         	goto	l324
  2729  006B6C                     l2269:
  2730                           
  2731                           ;porta.c: 57:         if(estadoTranca){
  2732  006B6C  503C               	movf	_estadoTranca^0,w,c
  2733  006B6E  B4D8               	btfsc	status,2,c
  2734  006B70  EFBC  F035         	goto	u1171
  2735  006B74  EFBE  F035         	goto	u1170
  2736  006B78                     u1171:
  2737  006B78  EFC0  F035         	goto	l324
  2738  006B7C                     u1170:
  2739  006B7C                     
  2740                           ;porta.c: 58:             estadoPorta=1;
  2741  006B7C  0E01               	movlw	1
  2742  006B7E  6E3D               	movwf	_estadoPorta^0,c
  2743  006B80                     l324:
  2744  006B80  0012               	return		;funcret
  2745  006B82                     __end_of_abreFecha:
  2746                           	opt callstack 0
  2747                           
  2748 ;; *************** function _menuLuzes *****************
  2749 ;; Defined at:
  2750 ;;		line 339 in file "menus.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  tmp             1   22[COMRAM] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2764 ;;      Params:         0       0       0       0       0       0       0
  2765 ;;      Locals:         1       0       0       0       0       0       0
  2766 ;;      Temps:          2       0       0       0       0       0       0
  2767 ;;      Totals:         3       0       0       0       0       0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    4
  2771 ;; This function calls:
  2772 ;;		_lcd_cmd
  2773 ;;		_lcd_str
  2774 ;;		_menuManipLuzes
  2775 ;;		_tc_tecla
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text12
  2782  006E4E                     __ptext12:
  2783                           	opt callstack 0
  2784  006E4E                     _menuLuzes:
  2785                           	opt callstack 26
  2786  006E4E                     l226:
  2787  006E4E                     
  2788                           ;menus.c: 347:         lcd_cmd(0x80);
  2789  006E4E  0E80               	movlw	128
  2790  006E50  EC7F  F035         	call	_lcd_cmd
  2791  006E54                     
  2792                           ;menus.c: 348:         lcd_str("1-ligar");
  2793  006E54  0E98               	movlw	low STR_38
  2794  006E56  6E08               	movwf	lcd_str@str^0,c
  2795  006E58  0E7F               	movlw	high STR_38
  2796  006E5A  6E09               	movwf	(lcd_str@str+1)^0,c
  2797  006E5C  EC74  F036         	call	_lcd_str	;wreg free
  2798  006E60                     
  2799                           ;menus.c: 351:         lcd_cmd(0x80 +10);
  2800  006E60  0E8A               	movlw	138
  2801  006E62  EC7F  F035         	call	_lcd_cmd
  2802                           
  2803                           ;menus.c: 352:         lcd_str("3-sair");
  2804  006E66  0ED3               	movlw	low STR_22
  2805  006E68  6E08               	movwf	lcd_str@str^0,c
  2806  006E6A  0E7F               	movlw	high STR_22
  2807  006E6C  6E09               	movwf	(lcd_str@str+1)^0,c
  2808  006E6E  EC74  F036         	call	_lcd_str	;wreg free
  2809  006E72                     
  2810                           ;menus.c: 355:         lcd_cmd(0xC0);
  2811  006E72  0EC0               	movlw	192
  2812  006E74  EC7F  F035         	call	_lcd_cmd
  2813  006E78                     
  2814                           ;menus.c: 356:         lcd_str("2-desligar");
  2815  006E78  0E25               	movlw	low STR_40
  2816  006E7A  6E08               	movwf	lcd_str@str^0,c
  2817  006E7C  0E7F               	movlw	high STR_40
  2818  006E7E  6E09               	movwf	(lcd_str@str+1)^0,c
  2819  006E80  EC74  F036         	call	_lcd_str	;wreg free
  2820  006E84                     
  2821                           ;menus.c: 359:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  2822  006E84  0E0F               	movlw	15
  2823  006E86  6E95               	movwf	149,c	;volatile
  2824  006E88                     
  2825                           ;menus.c: 360:         tmp = tc_tecla(0);
  2826  006E88  0E00               	movlw	0
  2827  006E8A  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2828  006E8C  0E00               	movlw	0
  2829  006E8E  6E07               	movwf	tc_tecla@timeout^0,c
  2830  006E90  ECF6  F03B         	call	_tc_tecla	;wreg free
  2831  006E94  6E17               	movwf	menuLuzes@tmp^0,c
  2832  006E96                     
  2833                           ;menus.c: 361:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2834  006E96  0E00               	movlw	0
  2835  006E98  6E95               	movwf	149,c	;volatile
  2836                           
  2837                           ;menus.c: 363:         switch(tmp){
  2838  006E9A  EF5E  F037         	goto	l2653
  2839  006E9E                     l2641:
  2840                           
  2841                           ;menus.c: 367:                 menuManipLuzes(1);
  2842  006E9E  0E01               	movlw	1
  2843  006EA0  ECDB  F03C         	call	_menuManipLuzes
  2844                           
  2845                           ;menus.c: 368:                 break;
  2846  006EA4  EF27  F037         	goto	l226
  2847  006EA8                     l2643:
  2848                           
  2849                           ;menus.c: 372:                 menuManipLuzes(0);
  2850  006EA8  0E00               	movlw	0
  2851  006EAA  ECDB  F03C         	call	_menuManipLuzes
  2852                           
  2853                           ;menus.c: 373:                 break;
  2854  006EAE  EF27  F037         	goto	l226
  2855  006EB2                     l2645:
  2856                           
  2857                           ;menus.c: 377:                 lcd_cmd(0x01);
  2858  006EB2  0E01               	movlw	1
  2859  006EB4  EC7F  F035         	call	_lcd_cmd
  2860  006EB8  EF77  F037         	goto	l232
  2861  006EBC                     l2653:
  2862  006EBC  5017               	movf	menuLuzes@tmp^0,w,c
  2863  006EBE  6E15               	movwf	??_menuLuzes^0,c
  2864  006EC0  6A16               	clrf	(??_menuLuzes+1)^0,c
  2865                           
  2866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2867                           ; Switch size 1, requested type "simple"
  2868                           ; Number of cases is 1, Range of values is 0 to 0
  2869                           ; switch strategies available:
  2870                           ; Name         Instructions Cycles
  2871                           ; simple_byte            4     3 (average)
  2872                           ;	Chosen strategy is simple_byte
  2873  006EC2  5016               	movf	(??_menuLuzes+1)^0,w,c
  2874  006EC4  0A00               	xorlw	0	; case 0
  2875  006EC6  B4D8               	btfsc	status,2,c
  2876  006EC8  EF68  F037         	goto	l2953
  2877  006ECC  EF27  F037         	goto	l226
  2878  006ED0                     l2953:
  2879                           
  2880                           ; Switch size 1, requested type "simple"
  2881                           ; Number of cases is 3, Range of values is 1 to 3
  2882                           ; switch strategies available:
  2883                           ; Name         Instructions Cycles
  2884                           ; simple_byte           10     6 (average)
  2885                           ;	Chosen strategy is simple_byte
  2886  006ED0  5015               	movf	??_menuLuzes^0,w,c
  2887  006ED2  0A01               	xorlw	1	; case 1
  2888  006ED4  B4D8               	btfsc	status,2,c
  2889  006ED6  EF4F  F037         	goto	l2641
  2890  006EDA  0A03               	xorlw	3	; case 2
  2891  006EDC  B4D8               	btfsc	status,2,c
  2892  006EDE  EF54  F037         	goto	l2643
  2893  006EE2  0A01               	xorlw	1	; case 3
  2894  006EE4  B4D8               	btfsc	status,2,c
  2895  006EE6  EF59  F037         	goto	l2645
  2896  006EEA  EF27  F037         	goto	l226
  2897  006EEE                     l232:
  2898  006EEE  0012               	return		;funcret
  2899  006EF0                     __end_of_menuLuzes:
  2900                           	opt callstack 0
  2901                           
  2902 ;; *************** function _menuManipLuzes *****************
  2903 ;; Defined at:
  2904 ;;		line 260 in file "menus.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  opcao           1    wreg     unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  opcao           1   17[COMRAM] unsigned char 
  2909 ;;  tmp             1   19[COMRAM] unsigned char 
  2910 ;;  i               1   18[COMRAM] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2920 ;;      Params:         0       0       0       0       0       0       0
  2921 ;;      Locals:         5       0       0       0       0       0       0
  2922 ;;      Temps:          2       0       0       0       0       0       0
  2923 ;;      Totals:         7       0       0       0       0       0       0
  2924 ;;Total ram usage:        7 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    3
  2927 ;; This function calls:
  2928 ;;		_delay_ms
  2929 ;;		_desligaLuz
  2930 ;;		_lcd_cmd
  2931 ;;		_lcd_dat
  2932 ;;		_lcd_str
  2933 ;;		_ligaLuz
  2934 ;;		_tc_tecla
  2935 ;; This function is called by:
  2936 ;;		_menuLuzes
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text13
  2941  0079B6                     __ptext13:
  2942                           	opt callstack 0
  2943  0079B6                     _menuManipLuzes:
  2944                           	opt callstack 26
  2945                           
  2946                           ;incstack = 0
  2947                           ;menuManipLuzes@opcao stored from wreg
  2948  0079B6  6E12               	movwf	menuManipLuzes@opcao^0,c
  2949  0079B8                     
  2950                           ;menus.c: 263:     char i;;menus.c: 264:     unsigned char tmp;;menus.c: 265:     lcd_cm
      +                          d(0x01);
  2951  0079B8  0E01               	movlw	1
  2952  0079BA  EC7F  F035         	call	_lcd_cmd
  2953  0079BE                     l207:
  2954                           
  2955                           ;menus.c: 270:     lcd_cmd(0x80);
  2956  0079BE  0E80               	movlw	128
  2957  0079C0  EC7F  F035         	call	_lcd_cmd
  2958  0079C4                     
  2959                           ;menus.c: 271:     if(opcao)lcd_str("ligar");
  2960  0079C4  5012               	movf	menuManipLuzes@opcao^0,w,c
  2961  0079C6  B4D8               	btfsc	status,2,c
  2962  0079C8  EFE8  F03C         	goto	u1311
  2963  0079CC  EFEA  F03C         	goto	u1310
  2964  0079D0                     u1311:
  2965  0079D0  EFF2  F03C         	goto	l2489
  2966  0079D4                     u1310:
  2967  0079D4  0E9A               	movlw	low (STR_38+2)
  2968  0079D6  6E08               	movwf	lcd_str@str^0,c
  2969  0079D8  0E7F               	movlw	high (STR_38+2)
  2970  0079DA  6E09               	movwf	(lcd_str@str+1)^0,c
  2971  0079DC  EC74  F036         	call	_lcd_str	;wreg free
  2972  0079E0  EFF8  F03C         	goto	l2491
  2973  0079E4                     l2489:
  2974  0079E4  0E1C               	movlw	low (STR_47+2)
  2975  0079E6  6E08               	movwf	lcd_str@str^0,c
  2976  0079E8  0E7F               	movlw	high (STR_47+2)
  2977  0079EA  6E09               	movwf	(lcd_str@str+1)^0,c
  2978  0079EC  EC74  F036         	call	_lcd_str	;wreg free
  2979  0079F0                     l2491:
  2980                           
  2981                           ;menus.c: 273:     lcd_cmd(0x80 +11);
  2982  0079F0  0E8B               	movlw	139
  2983  0079F2  EC7F  F035         	call	_lcd_cmd
  2984  0079F6                     
  2985                           ;menus.c: 274:     lcd_str("34567");
  2986  0079F6  0EE1               	movlw	low STR_32
  2987  0079F8  6E08               	movwf	lcd_str@str^0,c
  2988  0079FA  0E7F               	movlw	high STR_32
  2989  0079FC  6E09               	movwf	(lcd_str@str+1)^0,c
  2990  0079FE  EC74  F036         	call	_lcd_str	;wreg free
  2991                           
  2992                           ;menus.c: 275:     lcd_cmd(0xC0);
  2993  007A02  0EC0               	movlw	192
  2994  007A04  EC7F  F035         	call	_lcd_cmd
  2995  007A08                     
  2996                           ;menus.c: 276:     lcd_str("1-sair");
  2997  007A08  0ECC               	movlw	low STR_33
  2998  007A0A  6E08               	movwf	lcd_str@str^0,c
  2999  007A0C  0E7F               	movlw	high STR_33
  3000  007A0E  6E09               	movwf	(lcd_str@str+1)^0,c
  3001  007A10  EC74  F036         	call	_lcd_str	;wreg free
  3002  007A14                     
  3003                           ;menus.c: 277:     lcd_cmd(0xC0 +11);
  3004  007A14  0ECB               	movlw	203
  3005  007A16  EC7F  F035         	call	_lcd_cmd
  3006  007A1A                     
  3007                           ;menus.c: 279:     for(i = 3; i<8; i++)
  3008  007A1A  0E03               	movlw	3
  3009  007A1C  6E13               	movwf	menuManipLuzes@i^0,c
  3010  007A1E                     l2505:
  3011                           
  3012                           ;menus.c: 280:         lcd_dat((((estadoLuz) & (1<<i))?'I':'O'));
  3013  007A1E  C013  F00E         	movff	menuManipLuzes@i,??_menuManipLuzes
  3014  007A22  0E01               	movlw	1
  3015  007A24  6E0F               	movwf	(??_menuManipLuzes+1)^0,c
  3016  007A26  2A0E               	incf	??_menuManipLuzes^0,f,c
  3017  007A28  EF18  F03D         	goto	u1324
  3018  007A2C                     u1325:
  3019  007A2C  90D8               	bcf	status,0,c
  3020  007A2E  360F               	rlcf	(??_menuManipLuzes+1)^0,f,c
  3021  007A30                     u1324:
  3022  007A30  2E0E               	decfsz	??_menuManipLuzes^0,f,c
  3023  007A32  EF16  F03D         	goto	u1325
  3024  007A36  500F               	movf	(??_menuManipLuzes+1)^0,w,c
  3025  007A38  143F               	andwf	_estadoLuz^0,w,c
  3026  007A3A  0900               	iorlw	0
  3027  007A3C  A4D8               	btfss	status,2,c
  3028  007A3E  EF23  F03D         	goto	u1331
  3029  007A42  EF25  F03D         	goto	u1330
  3030  007A46                     u1331:
  3031  007A46  EF2B  F03D         	goto	l2509
  3032  007A4A                     u1330:
  3033  007A4A  0E00               	movlw	0
  3034  007A4C  6E11               	movwf	(_menuManipLuzes$215+1)^0,c
  3035  007A4E  0E4F               	movlw	79
  3036  007A50  6E10               	movwf	_menuManipLuzes$215^0,c
  3037  007A52  EF2F  F03D         	goto	l2511
  3038  007A56                     l2509:
  3039  007A56  0E00               	movlw	0
  3040  007A58  6E11               	movwf	(_menuManipLuzes$215+1)^0,c
  3041  007A5A  0E49               	movlw	73
  3042  007A5C  6E10               	movwf	_menuManipLuzes$215^0,c
  3043  007A5E                     l2511:
  3044  007A5E  5010               	movf	_menuManipLuzes$215^0,w,c
  3045  007A60  EC94  F035         	call	_lcd_dat
  3046  007A64  2A13               	incf	menuManipLuzes@i^0,f,c
  3047  007A66  0E07               	movlw	7
  3048  007A68  6413               	cpfsgt	menuManipLuzes@i^0,c
  3049  007A6A  EF39  F03D         	goto	u1341
  3050  007A6E  EF3B  F03D         	goto	u1340
  3051  007A72                     u1341:
  3052  007A72  EF0F  F03D         	goto	l2505
  3053  007A76                     u1340:
  3054  007A76                     
  3055                           ;menus.c: 283:     (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3056  007A76  0E0F               	movlw	15
  3057  007A78  6E95               	movwf	149,c	;volatile
  3058  007A7A                     
  3059                           ;menus.c: 284:     tmp = tc_tecla(0);
  3060  007A7A  0E00               	movlw	0
  3061  007A7C  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3062  007A7E  0E00               	movlw	0
  3063  007A80  6E07               	movwf	tc_tecla@timeout^0,c
  3064  007A82  ECF6  F03B         	call	_tc_tecla	;wreg free
  3065  007A86  6E14               	movwf	menuManipLuzes@tmp^0,c
  3066  007A88                     
  3067                           ;menus.c: 285:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  3068  007A88  0E00               	movlw	0
  3069  007A8A  6E95               	movwf	149,c	;volatile
  3070                           
  3071                           ;menus.c: 286:     switch(tmp){
  3072  007A8C  EFB9  F03D         	goto	l2577
  3073  007A90                     l2523:
  3074                           
  3075                           ;menus.c: 288:             lcd_cmd(0x01);
  3076  007A90  0E01               	movlw	1
  3077  007A92  EC7F  F035         	call	_lcd_cmd
  3078  007A96  EFCA  F03D         	goto	l218
  3079  007A9A                     l2527:
  3080                           
  3081                           ;menus.c: 292:             if(opcao){
  3082  007A9A  5012               	movf	menuManipLuzes@opcao^0,w,c
  3083  007A9C  B4D8               	btfsc	status,2,c
  3084  007A9E  EF53  F03D         	goto	u1351
  3085  007AA2  EF55  F03D         	goto	u1350
  3086  007AA6                     u1351:
  3087  007AA6  EF87  F03D         	goto	l2553
  3088  007AAA                     u1350:
  3089  007AAA                     
  3090                           ;menus.c: 293:                 (*(volatile __near unsigned char*)0xF93)=0x00;
  3091  007AAA  0E00               	movlw	0
  3092  007AAC  6E93               	movwf	147,c	;volatile
  3093  007AAE                     
  3094                           ;menus.c: 294:                 (*(volatile __near unsigned char*)0xF81)=estadoLuz;
  3095  007AAE  C03F  FF81         	movff	_estadoLuz,3969	;volatile
  3096  007AB2                     
  3097                           ;menus.c: 295:                 lcd_cmd(0x01);
  3098  007AB2  0E01               	movlw	1
  3099  007AB4  EC7F  F035         	call	_lcd_cmd
  3100  007AB8                     
  3101                           ;menus.c: 296:                 lcd_cmd(0x80 +5);
  3102  007AB8  0E85               	movlw	133
  3103  007ABA  EC7F  F035         	call	_lcd_cmd
  3104  007ABE                     
  3105                           ;menus.c: 297:                 lcd_str("ligando");
  3106  007ABE  0E07               	movlw	low (STR_49+3)
  3107  007AC0  6E08               	movwf	lcd_str@str^0,c
  3108  007AC2  0E7F               	movlw	high (STR_49+3)
  3109  007AC4  6E09               	movwf	(lcd_str@str+1)^0,c
  3110  007AC6  EC74  F036         	call	_lcd_str	;wreg free
  3111  007ACA                     
  3112                           ;menus.c: 298:                 lcd_cmd(0xC0 +4);
  3113  007ACA  0EC4               	movlw	196
  3114  007ACC  EC7F  F035         	call	_lcd_cmd
  3115  007AD0                     
  3116                           ;menus.c: 299:                 lcd_str("a luz ");
  3117  007AD0  0EB0               	movlw	low STR_35
  3118  007AD2  6E08               	movwf	lcd_str@str^0,c
  3119  007AD4  0E7F               	movlw	high STR_35
  3120  007AD6  6E09               	movwf	(lcd_str@str+1)^0,c
  3121  007AD8  EC74  F036         	call	_lcd_str	;wreg free
  3122  007ADC                     
  3123                           ;menus.c: 300:                 lcd_dat(tmp);
  3124  007ADC  5014               	movf	menuManipLuzes@tmp^0,w,c
  3125  007ADE  EC94  F035         	call	_lcd_dat
  3126  007AE2                     
  3127                           ;menus.c: 301:                 delay_ms(1000);
  3128  007AE2  0E03               	movlw	3
  3129  007AE4  6E02               	movwf	(delay_ms@t+1)^0,c
  3130  007AE6  0EE8               	movlw	232
  3131  007AE8  6E01               	movwf	delay_ms@t^0,c
  3132  007AEA  ECF5  F036         	call	_delay_ms	;wreg free
  3133  007AEE                     
  3134                           ;menus.c: 302:                 ligaLuz(tmp);
  3135  007AEE  5014               	movf	menuManipLuzes@tmp^0,w,c
  3136  007AF0  EC2F  F036         	call	_ligaLuz
  3137  007AF4                     
  3138                           ;menus.c: 303:                 delay_ms(1000);
  3139  007AF4  0E03               	movlw	3
  3140  007AF6  6E02               	movwf	(delay_ms@t+1)^0,c
  3141  007AF8  0EE8               	movlw	232
  3142  007AFA  6E01               	movwf	delay_ms@t^0,c
  3143  007AFC  ECF5  F036         	call	_delay_ms	;wreg free
  3144  007B00                     
  3145                           ;menus.c: 304:                 lcd_cmd(0x01);
  3146  007B00  0E01               	movlw	1
  3147  007B02  EC7F  F035         	call	_lcd_cmd
  3148                           
  3149                           ;menus.c: 305:                 (*(volatile __near unsigned char*)0xF93)=0x78;
  3150  007B06  0E78               	movlw	120
  3151  007B08  6E93               	movwf	147,c	;volatile
  3152                           
  3153                           ;menus.c: 306:             }
  3154  007B0A  EFDF  F03C         	goto	l207
  3155  007B0E                     l2553:
  3156                           
  3157                           ;menus.c: 310:                 (*(volatile __near unsigned char*)0xF93)=0x00;
  3158  007B0E  0E00               	movlw	0
  3159  007B10  6E93               	movwf	147,c	;volatile
  3160  007B12                     
  3161                           ;menus.c: 311:                 (*(volatile __near unsigned char*)0xF81)=estadoLuz;
  3162  007B12  C03F  FF81         	movff	_estadoLuz,3969	;volatile
  3163  007B16                     
  3164                           ;menus.c: 312:                 lcd_cmd(0x01);
  3165  007B16  0E01               	movlw	1
  3166  007B18  EC7F  F035         	call	_lcd_cmd
  3167  007B1C                     
  3168                           ;menus.c: 313:                 lcd_cmd(0x80 +4);
  3169  007B1C  0E84               	movlw	132
  3170  007B1E  EC7F  F035         	call	_lcd_cmd
  3171  007B22                     
  3172                           ;menus.c: 314:                 lcd_str("desligando");
  3173  007B22  0E0F               	movlw	low STR_36
  3174  007B24  6E08               	movwf	lcd_str@str^0,c
  3175  007B26  0E7F               	movlw	high STR_36
  3176  007B28  6E09               	movwf	(lcd_str@str+1)^0,c
  3177  007B2A  EC74  F036         	call	_lcd_str	;wreg free
  3178  007B2E                     
  3179                           ;menus.c: 315:                 lcd_cmd(0xC0 +4);
  3180  007B2E  0EC4               	movlw	196
  3181  007B30  EC7F  F035         	call	_lcd_cmd
  3182  007B34                     
  3183                           ;menus.c: 316:                 lcd_str("a luz ");
  3184  007B34  0EB0               	movlw	low STR_35
  3185  007B36  6E08               	movwf	lcd_str@str^0,c
  3186  007B38  0E7F               	movlw	high STR_35
  3187  007B3A  6E09               	movwf	(lcd_str@str+1)^0,c
  3188  007B3C  EC74  F036         	call	_lcd_str	;wreg free
  3189  007B40                     
  3190                           ;menus.c: 317:                 lcd_dat(tmp);
  3191  007B40  5014               	movf	menuManipLuzes@tmp^0,w,c
  3192  007B42  EC94  F035         	call	_lcd_dat
  3193  007B46                     
  3194                           ;menus.c: 318:                 delay_ms(1000);
  3195  007B46  0E03               	movlw	3
  3196  007B48  6E02               	movwf	(delay_ms@t+1)^0,c
  3197  007B4A  0EE8               	movlw	232
  3198  007B4C  6E01               	movwf	delay_ms@t^0,c
  3199  007B4E  ECF5  F036         	call	_delay_ms	;wreg free
  3200  007B52                     
  3201                           ;menus.c: 319:                 desligaLuz(tmp);
  3202  007B52  5014               	movf	menuManipLuzes@tmp^0,w,c
  3203  007B54  EC51  F036         	call	_desligaLuz
  3204  007B58                     
  3205                           ;menus.c: 320:                 delay_ms(1000);
  3206  007B58  0E03               	movlw	3
  3207  007B5A  6E02               	movwf	(delay_ms@t+1)^0,c
  3208  007B5C  0EE8               	movlw	232
  3209  007B5E  6E01               	movwf	delay_ms@t^0,c
  3210  007B60  ECF5  F036         	call	_delay_ms	;wreg free
  3211  007B64                     
  3212                           ;menus.c: 321:                 lcd_cmd(0x01);
  3213  007B64  0E01               	movlw	1
  3214  007B66  EC7F  F035         	call	_lcd_cmd
  3215                           
  3216                           ;menus.c: 322:                 (*(volatile __near unsigned char*)0xF93)=0x78;
  3217  007B6A  0E78               	movlw	120
  3218  007B6C  6E93               	movwf	147,c	;volatile
  3219  007B6E  EFDF  F03C         	goto	l207
  3220  007B72                     l2577:
  3221  007B72  5014               	movf	menuManipLuzes@tmp^0,w,c
  3222  007B74  6E0E               	movwf	??_menuManipLuzes^0,c
  3223  007B76  6A0F               	clrf	(??_menuManipLuzes+1)^0,c
  3224                           
  3225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3226                           ; Switch size 1, requested type "simple"
  3227                           ; Number of cases is 1, Range of values is 0 to 0
  3228                           ; switch strategies available:
  3229                           ; Name         Instructions Cycles
  3230                           ; simple_byte            4     3 (average)
  3231                           ;	Chosen strategy is simple_byte
  3232  007B78  500F               	movf	(??_menuManipLuzes+1)^0,w,c
  3233  007B7A  0A00               	xorlw	0	; case 0
  3234  007B7C  B4D8               	btfsc	status,2,c
  3235  007B7E  EFC3  F03D         	goto	l2955
  3236  007B82  EF4D  F03D         	goto	l2527
  3237  007B86                     l2955:
  3238                           
  3239                           ; Switch size 1, requested type "simple"
  3240                           ; Number of cases is 1, Range of values is 1 to 1
  3241                           ; switch strategies available:
  3242                           ; Name         Instructions Cycles
  3243                           ; simple_byte            4     3 (average)
  3244                           ;	Chosen strategy is simple_byte
  3245  007B86  500E               	movf	??_menuManipLuzes^0,w,c
  3246  007B88  0A01               	xorlw	1	; case 1
  3247  007B8A  B4D8               	btfsc	status,2,c
  3248  007B8C  EF48  F03D         	goto	l2523
  3249  007B90  EF4D  F03D         	goto	l2527
  3250  007B94                     l218:
  3251  007B94  0012               	return		;funcret
  3252  007B96                     __end_of_menuManipLuzes:
  3253                           	opt callstack 0
  3254                           
  3255 ;; *************** function _ligaLuz *****************
  3256 ;; Defined at:
  3257 ;;		line 14 in file "luzes.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  luz             1    wreg     unsigned char 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  luz             1    2[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3271 ;;      Params:         0       0       0       0       0       0       0
  3272 ;;      Locals:         1       0       0       0       0       0       0
  3273 ;;      Temps:          2       0       0       0       0       0       0
  3274 ;;      Totals:         3       0       0       0       0       0       0
  3275 ;;Total ram usage:        3 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_menuManipLuzes
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text14
  3285  006C5E                     __ptext14:
  3286                           	opt callstack 0
  3287  006C5E                     _ligaLuz:
  3288                           	opt callstack 28
  3289                           
  3290                           ;incstack = 0
  3291                           ;ligaLuz@luz stored from wreg
  3292  006C5E  6E03               	movwf	ligaLuz@luz^0,c
  3293  006C60                     
  3294                           ;luzes.c: 17:     if(luz >= 3 && luz <= 7)
  3295  006C60  0E02               	movlw	2
  3296  006C62  6403               	cpfsgt	ligaLuz@luz^0,c
  3297  006C64  EF36  F036         	goto	u1081
  3298  006C68  EF38  F036         	goto	u1080
  3299  006C6C                     u1081:
  3300  006C6C  EF4E  F036         	goto	l2231
  3301  006C70                     u1080:
  3302  006C70  0E08               	movlw	8
  3303  006C72  6003               	cpfslt	ligaLuz@luz^0,c
  3304  006C74  EF3E  F036         	goto	u1091
  3305  006C78  EF40  F036         	goto	u1090
  3306  006C7C                     u1091:
  3307  006C7C  EF4E  F036         	goto	l2231
  3308  006C80                     u1090:
  3309  006C80                     
  3310                           ;luzes.c: 18:         ((estadoLuz) |= (1<<luz));
  3311  006C80  C003  F001         	movff	ligaLuz@luz,??_ligaLuz
  3312  006C84  0E01               	movlw	1
  3313  006C86  6E02               	movwf	(??_ligaLuz+1)^0,c
  3314  006C88  2A01               	incf	??_ligaLuz^0,f,c
  3315  006C8A  EF49  F036         	goto	u1104
  3316  006C8E                     u1105:
  3317  006C8E  90D8               	bcf	status,0,c
  3318  006C90  3602               	rlcf	(??_ligaLuz+1)^0,f,c
  3319  006C92                     u1104:
  3320  006C92  2E01               	decfsz	??_ligaLuz^0,f,c
  3321  006C94  EF47  F036         	goto	u1105
  3322  006C98  5002               	movf	(??_ligaLuz+1)^0,w,c
  3323  006C9A  123F               	iorwf	_estadoLuz^0,f,c
  3324  006C9C                     l2231:
  3325                           
  3326                           ;luzes.c: 21:     (*(volatile __near unsigned char*)0xF81) = estadoLuz;
  3327  006C9C  C03F  FF81         	movff	_estadoLuz,3969	;volatile
  3328  006CA0  0012               	return		;funcret
  3329  006CA2                     __end_of_ligaLuz:
  3330                           	opt callstack 0
  3331                           
  3332 ;; *************** function _desligaLuz *****************
  3333 ;; Defined at:
  3334 ;;		line 34 in file "luzes.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  luz             1    wreg     unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  luz             1    2[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         0       0       0       0       0       0       0
  3349 ;;      Locals:         1       0       0       0       0       0       0
  3350 ;;      Temps:          2       0       0       0       0       0       0
  3351 ;;      Totals:         3       0       0       0       0       0       0
  3352 ;;Total ram usage:        3 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_menuManipLuzes
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text15
  3362  006CA2                     __ptext15:
  3363                           	opt callstack 0
  3364  006CA2                     _desligaLuz:
  3365                           	opt callstack 28
  3366                           
  3367                           ;incstack = 0
  3368                           ;desligaLuz@luz stored from wreg
  3369  006CA2  6E03               	movwf	desligaLuz@luz^0,c
  3370  006CA4                     
  3371                           ;luzes.c: 37:     if(luz >= 3 && luz <= 7)
  3372  006CA4  0E02               	movlw	2
  3373  006CA6  6403               	cpfsgt	desligaLuz@luz^0,c
  3374  006CA8  EF58  F036         	goto	u1111
  3375  006CAC  EF5A  F036         	goto	u1110
  3376  006CB0                     u1111:
  3377  006CB0  EF71  F036         	goto	l2239
  3378  006CB4                     u1110:
  3379  006CB4  0E08               	movlw	8
  3380  006CB6  6003               	cpfslt	desligaLuz@luz^0,c
  3381  006CB8  EF60  F036         	goto	u1121
  3382  006CBC  EF62  F036         	goto	u1120
  3383  006CC0                     u1121:
  3384  006CC0  EF71  F036         	goto	l2239
  3385  006CC4                     u1120:
  3386  006CC4                     
  3387                           ;luzes.c: 38:         ((estadoLuz) &= ~(1<<luz));
  3388  006CC4  C003  F001         	movff	desligaLuz@luz,??_desligaLuz
  3389  006CC8  0E01               	movlw	1
  3390  006CCA  6E02               	movwf	(??_desligaLuz+1)^0,c
  3391  006CCC  2A01               	incf	??_desligaLuz^0,f,c
  3392  006CCE  EF6B  F036         	goto	u1134
  3393  006CD2                     u1135:
  3394  006CD2  90D8               	bcf	status,0,c
  3395  006CD4  3602               	rlcf	(??_desligaLuz+1)^0,f,c
  3396  006CD6                     u1134:
  3397  006CD6  2E01               	decfsz	??_desligaLuz^0,f,c
  3398  006CD8  EF69  F036         	goto	u1135
  3399  006CDC  5002               	movf	(??_desligaLuz+1)^0,w,c
  3400  006CDE  0AFF               	xorlw	255
  3401  006CE0  163F               	andwf	_estadoLuz^0,f,c
  3402  006CE2                     l2239:
  3403                           
  3404                           ;luzes.c: 41:     (*(volatile __near unsigned char*)0xF81) = estadoLuz;
  3405  006CE2  C03F  FF81         	movff	_estadoLuz,3969	;volatile
  3406  006CE6  0012               	return		;funcret
  3407  006CE8                     __end_of_desligaLuz:
  3408                           	opt callstack 0
  3409                           
  3410 ;; *************** function _menuArCondicionado *****************
  3411 ;; Defined at:
  3412 ;;		line 450 in file "menus.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  tmp             1   32[COMRAM] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3426 ;;      Params:         0       0       0       0       0       0       0
  3427 ;;      Locals:         1       0       0       0       0       0       0
  3428 ;;      Temps:          2       0       0       0       0       0       0
  3429 ;;      Totals:         3       0       0       0       0       0       0
  3430 ;;Total ram usage:        3 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    4
  3433 ;; This function calls:
  3434 ;;		_lcd_cmd
  3435 ;;		_lcd_str
  3436 ;;		_ligarDesligar
  3437 ;;		_menuAumentaDiminuiAC
  3438 ;;		_tc_tecla
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text16
  3445  007504                     __ptext16:
  3446                           	opt callstack 0
  3447  007504                     _menuArCondicionado:
  3448                           	opt callstack 26
  3449  007504                     l246:
  3450  007504                     
  3451                           ;menus.c: 458:         if(estado == 0){
  3452  007504  503E               	movf	_estado^0,w,c
  3453  007506  A4D8               	btfss	status,2,c
  3454  007508  EF88  F03A         	goto	u1401
  3455  00750C  EF8A  F03A         	goto	u1400
  3456  007510                     u1401:
  3457  007510  EFCB  F03A         	goto	l2767
  3458  007514                     u1400:
  3459  007514                     
  3460                           ;menus.c: 461:             lcd_cmd(0x80);
  3461  007514  0E80               	movlw	128
  3462  007516  EC7F  F035         	call	_lcd_cmd
  3463  00751A                     
  3464                           ;menus.c: 462:             lcd_str("1-ligar AC");
  3465  00751A  0EF9               	movlw	low STR_44
  3466  00751C  6E08               	movwf	lcd_str@str^0,c
  3467  00751E  0E7E               	movlw	high STR_44
  3468  007520  6E09               	movwf	(lcd_str@str+1)^0,c
  3469  007522  EC74  F036         	call	_lcd_str	;wreg free
  3470  007526                     
  3471                           ;menus.c: 463:             lcd_cmd(0xC0);
  3472  007526  0EC0               	movlw	192
  3473  007528  EC7F  F035         	call	_lcd_cmd
  3474                           
  3475                           ;menus.c: 464:             lcd_str("2-voltar");
  3476  00752C  0E7E               	movlw	low STR_45
  3477  00752E  6E08               	movwf	lcd_str@str^0,c
  3478  007530  0E7F               	movlw	high STR_45
  3479  007532  6E09               	movwf	(lcd_str@str+1)^0,c
  3480  007534  EC74  F036         	call	_lcd_str	;wreg free
  3481  007538                     
  3482                           ;menus.c: 467:             (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3483  007538  0E0F               	movlw	15
  3484  00753A  6E95               	movwf	149,c	;volatile
  3485  00753C                     
  3486                           ;menus.c: 468:             tmp = tc_tecla(0);
  3487  00753C  0E00               	movlw	0
  3488  00753E  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3489  007540  0E00               	movlw	0
  3490  007542  6E07               	movwf	tc_tecla@timeout^0,c
  3491  007544  ECF6  F03B         	call	_tc_tecla	;wreg free
  3492  007548  6E21               	movwf	menuArCondicionado@tmp^0,c
  3493                           
  3494                           ;menus.c: 469:             (*(volatile __near unsigned char*)0xF95) = 0x00;
  3495  00754A  0E00               	movlw	0
  3496  00754C  6E95               	movwf	149,c	;volatile
  3497                           
  3498                           ;menus.c: 471:             switch(tmp){
  3499  00754E  EFB6  F03A         	goto	l2765
  3500  007552                     l2753:
  3501                           
  3502                           ;menus.c: 475:                     ligarDesligar(1);
  3503  007552  0E01               	movlw	1
  3504  007554  EC5E  F035         	call	_ligarDesligar
  3505  007558                     
  3506                           ;menus.c: 476:                     lcd_cmd(0x01);
  3507  007558  0E01               	movlw	1
  3508  00755A  EC7F  F035         	call	_lcd_cmd
  3509                           
  3510                           ;menus.c: 477:                     break;
  3511  00755E  EF82  F03A         	goto	l246
  3512  007562                     l2757:
  3513                           
  3514                           ;menus.c: 481:                     lcd_cmd(0x01);
  3515  007562  0E01               	movlw	1
  3516  007564  EC7F  F035         	call	_lcd_cmd
  3517  007568  EF1D  F03B         	goto	l252
  3518  00756C                     l2765:
  3519  00756C  5021               	movf	menuArCondicionado@tmp^0,w,c
  3520  00756E  6E1F               	movwf	??_menuArCondicionado^0,c
  3521  007570  6A20               	clrf	(??_menuArCondicionado+1)^0,c
  3522                           
  3523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3524                           ; Switch size 1, requested type "simple"
  3525                           ; Number of cases is 1, Range of values is 0 to 0
  3526                           ; switch strategies available:
  3527                           ; Name         Instructions Cycles
  3528                           ; simple_byte            4     3 (average)
  3529                           ;	Chosen strategy is simple_byte
  3530  007572  5020               	movf	(??_menuArCondicionado+1)^0,w,c
  3531  007574  0A00               	xorlw	0	; case 0
  3532  007576  B4D8               	btfsc	status,2,c
  3533  007578  EFC0  F03A         	goto	l2957
  3534  00757C  EF82  F03A         	goto	l246
  3535  007580                     l2957:
  3536                           
  3537                           ; Switch size 1, requested type "simple"
  3538                           ; Number of cases is 2, Range of values is 1 to 2
  3539                           ; switch strategies available:
  3540                           ; Name         Instructions Cycles
  3541                           ; simple_byte            7     4 (average)
  3542                           ;	Chosen strategy is simple_byte
  3543  007580  501F               	movf	??_menuArCondicionado^0,w,c
  3544  007582  0A01               	xorlw	1	; case 1
  3545  007584  B4D8               	btfsc	status,2,c
  3546  007586  EFA9  F03A         	goto	l2753
  3547  00758A  0A03               	xorlw	3	; case 2
  3548  00758C  B4D8               	btfsc	status,2,c
  3549  00758E  EFB1  F03A         	goto	l2757
  3550  007592  EF82  F03A         	goto	l246
  3551  007596                     l2767:
  3552                           
  3553                           ;menus.c: 490:             lcd_cmd(0x80);
  3554  007596  0E80               	movlw	128
  3555  007598  EC7F  F035         	call	_lcd_cmd
  3556  00759C                     
  3557                           ;menus.c: 491:             lcd_str("1-Mudar Temp");
  3558  00759C  0EE0               	movlw	low STR_46
  3559  00759E  6E08               	movwf	lcd_str@str^0,c
  3560  0075A0  0E7E               	movlw	high STR_46
  3561  0075A2  6E09               	movwf	(lcd_str@str+1)^0,c
  3562  0075A4  EC74  F036         	call	_lcd_str	;wreg free
  3563  0075A8                     
  3564                           ;menus.c: 492:             lcd_cmd(0xC0);
  3565  0075A8  0EC0               	movlw	192
  3566  0075AA  EC7F  F035         	call	_lcd_cmd
  3567                           
  3568                           ;menus.c: 493:             lcd_str("2-Desligar");
  3569  0075AE  0E1A               	movlw	low STR_47
  3570  0075B0  6E08               	movwf	lcd_str@str^0,c
  3571  0075B2  0E7F               	movlw	high STR_47
  3572  0075B4  6E09               	movwf	(lcd_str@str+1)^0,c
  3573  0075B6  EC74  F036         	call	_lcd_str	;wreg free
  3574  0075BA                     
  3575                           ;menus.c: 494:             lcd_cmd(0xC0 +10);
  3576  0075BA  0ECA               	movlw	202
  3577  0075BC  EC7F  F035         	call	_lcd_cmd
  3578  0075C0                     
  3579                           ;menus.c: 495:             lcd_str("3-sair");
  3580  0075C0  0ED3               	movlw	low STR_22
  3581  0075C2  6E08               	movwf	lcd_str@str^0,c
  3582  0075C4  0E7F               	movlw	high STR_22
  3583  0075C6  6E09               	movwf	(lcd_str@str+1)^0,c
  3584  0075C8  EC74  F036         	call	_lcd_str	;wreg free
  3585  0075CC                     
  3586                           ;menus.c: 498:             (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3587  0075CC  0E0F               	movlw	15
  3588  0075CE  6E95               	movwf	149,c	;volatile
  3589  0075D0                     
  3590                           ;menus.c: 499:             tmp = tc_tecla(0);
  3591  0075D0  0E00               	movlw	0
  3592  0075D2  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3593  0075D4  0E00               	movlw	0
  3594  0075D6  6E07               	movwf	tc_tecla@timeout^0,c
  3595  0075D8  ECF6  F03B         	call	_tc_tecla	;wreg free
  3596  0075DC  6E21               	movwf	menuArCondicionado@tmp^0,c
  3597  0075DE                     
  3598                           ;menus.c: 500:             (*(volatile __near unsigned char*)0xF95) = 0x00;
  3599  0075DE  0E00               	movlw	0
  3600  0075E0  6E95               	movwf	149,c	;volatile
  3601                           
  3602                           ;menus.c: 503:             switch(tmp){
  3603  0075E2  EF04  F03B         	goto	l2799
  3604  0075E6                     l2783:
  3605                           
  3606                           ;menus.c: 507:                     menuAumentaDiminuiAC();
  3607  0075E6  EC78  F037         	call	_menuAumentaDiminuiAC	;wreg free
  3608  0075EA                     
  3609                           ;menus.c: 509:                     break;
  3610  0075EA  EF82  F03A         	goto	l246
  3611  0075EE                     l2787:
  3612                           
  3613                           ;menus.c: 513:                     ligarDesligar(0);
  3614  0075EE  0E00               	movlw	0
  3615  0075F0  EC5E  F035         	call	_ligarDesligar
  3616  0075F4                     
  3617                           ;menus.c: 514:                     lcd_cmd(0x01);
  3618  0075F4  0E01               	movlw	1
  3619  0075F6  EC7F  F035         	call	_lcd_cmd
  3620                           
  3621                           ;menus.c: 515:                     break;
  3622  0075FA  EF82  F03A         	goto	l246
  3623  0075FE                     l2791:
  3624                           
  3625                           ;menus.c: 519:                     lcd_cmd(0x01);
  3626  0075FE  0E01               	movlw	1
  3627  007600  EC7F  F035         	call	_lcd_cmd
  3628  007604  EF1D  F03B         	goto	l252
  3629  007608                     l2799:
  3630  007608  5021               	movf	menuArCondicionado@tmp^0,w,c
  3631  00760A  6E1F               	movwf	??_menuArCondicionado^0,c
  3632  00760C  6A20               	clrf	(??_menuArCondicionado+1)^0,c
  3633                           
  3634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3635                           ; Switch size 1, requested type "simple"
  3636                           ; Number of cases is 1, Range of values is 0 to 0
  3637                           ; switch strategies available:
  3638                           ; Name         Instructions Cycles
  3639                           ; simple_byte            4     3 (average)
  3640                           ;	Chosen strategy is simple_byte
  3641  00760E  5020               	movf	(??_menuArCondicionado+1)^0,w,c
  3642  007610  0A00               	xorlw	0	; case 0
  3643  007612  B4D8               	btfsc	status,2,c
  3644  007614  EF0E  F03B         	goto	l2959
  3645  007618  EF82  F03A         	goto	l246
  3646  00761C                     l2959:
  3647                           
  3648                           ; Switch size 1, requested type "simple"
  3649                           ; Number of cases is 3, Range of values is 1 to 3
  3650                           ; switch strategies available:
  3651                           ; Name         Instructions Cycles
  3652                           ; simple_byte           10     6 (average)
  3653                           ;	Chosen strategy is simple_byte
  3654  00761C  501F               	movf	??_menuArCondicionado^0,w,c
  3655  00761E  0A01               	xorlw	1	; case 1
  3656  007620  B4D8               	btfsc	status,2,c
  3657  007622  EFF3  F03A         	goto	l2783
  3658  007626  0A03               	xorlw	3	; case 2
  3659  007628  B4D8               	btfsc	status,2,c
  3660  00762A  EFF7  F03A         	goto	l2787
  3661  00762E  0A01               	xorlw	1	; case 3
  3662  007630  B4D8               	btfsc	status,2,c
  3663  007632  EFFF  F03A         	goto	l2791
  3664  007636  EF82  F03A         	goto	l246
  3665  00763A                     l252:
  3666  00763A  0012               	return		;funcret
  3667  00763C                     __end_of_menuArCondicionado:
  3668                           	opt callstack 0
  3669                           
  3670 ;; *************** function _menuAumentaDiminuiAC *****************
  3671 ;; Defined at:
  3672 ;;		line 394 in file "menus.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  tmp             1   29[COMRAM] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3686 ;;      Params:         0       0       0       0       0       0       0
  3687 ;;      Locals:         1       0       0       0       0       0       0
  3688 ;;      Temps:          2       0       0       0       0       0       0
  3689 ;;      Totals:         3       0       0       0       0       0       0
  3690 ;;Total ram usage:        3 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    3
  3693 ;; This function calls:
  3694 ;;		_aumentarTemp
  3695 ;;		_diminuirTemp
  3696 ;;		_lcd_cmd
  3697 ;;		_lcd_str
  3698 ;;		_printTemp
  3699 ;;		_tc_tecla
  3700 ;; This function is called by:
  3701 ;;		_menuArCondicionado
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text17
  3706  006EF0                     __ptext17:
  3707                           	opt callstack 0
  3708  006EF0                     _menuAumentaDiminuiAC:
  3709                           	opt callstack 26
  3710  006EF0                     
  3711                           ;menus.c: 397:     unsigned char tmp;;menus.c: 399:     lcd_cmd(0x01);
  3712  006EF0  0E01               	movlw	1
  3713  006EF2  EC7F  F035         	call	_lcd_cmd
  3714                           
  3715                           ;menus.c: 400:     lcd_cmd(0x80);
  3716  006EF6  0E80               	movlw	128
  3717  006EF8  EC7F  F035         	call	_lcd_cmd
  3718  006EFC                     
  3719                           ;menus.c: 401:     lcd_str("1-Aumentar");
  3720  006EFC  0E30               	movlw	low STR_41
  3721  006EFE  6E08               	movwf	lcd_str@str^0,c
  3722  006F00  0E7F               	movlw	high STR_41
  3723  006F02  6E09               	movwf	(lcd_str@str+1)^0,c
  3724  006F04  EC74  F036         	call	_lcd_str	;wreg free
  3725  006F08                     
  3726                           ;menus.c: 402:     lcd_cmd(0xC0);
  3727  006F08  0EC0               	movlw	192
  3728  006F0A  EC7F  F035         	call	_lcd_cmd
  3729                           
  3730                           ;menus.c: 403:     lcd_str("2-Diminuir");
  3731  006F0E  0E3B               	movlw	low STR_42
  3732  006F10  6E08               	movwf	lcd_str@str^0,c
  3733  006F12  0E7F               	movlw	high STR_42
  3734  006F14  6E09               	movwf	(lcd_str@str+1)^0,c
  3735  006F16  EC74  F036         	call	_lcd_str	;wreg free
  3736  006F1A                     
  3737                           ;menus.c: 404:     lcd_cmd(0xC0 +11);
  3738  006F1A  0ECB               	movlw	203
  3739  006F1C  EC7F  F035         	call	_lcd_cmd
  3740  006F20                     
  3741                           ;menus.c: 405:     lcd_str("3-EXT");
  3742  006F20  0EE7               	movlw	low STR_43
  3743  006F22  6E08               	movwf	lcd_str@str^0,c
  3744  006F24  0E7F               	movlw	high STR_43
  3745  006F26  6E09               	movwf	(lcd_str@str+1)^0,c
  3746  006F28  EC74  F036         	call	_lcd_str	;wreg free
  3747  006F2C                     l2593:
  3748                           
  3749                           ;menus.c: 410:         printTemp(temperatura);
  3750  006F2C  503B               	movf	_temperatura^0,w,c
  3751  006F2E  EC27  F038         	call	_printTemp
  3752  006F32                     
  3753                           ;menus.c: 413:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
  3754  006F32  0E0F               	movlw	15
  3755  006F34  6E95               	movwf	149,c	;volatile
  3756  006F36                     
  3757                           ;menus.c: 414:         tmp = tc_tecla(15);
  3758  006F36  0E00               	movlw	0
  3759  006F38  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  3760  006F3A  0E0F               	movlw	15
  3761  006F3C  6E07               	movwf	tc_tecla@timeout^0,c
  3762  006F3E  ECF6  F03B         	call	_tc_tecla	;wreg free
  3763  006F42  6E1E               	movwf	menuAumentaDiminuiAC@tmp^0,c
  3764  006F44                     
  3765                           ;menus.c: 415:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  3766  006F44  0E00               	movlw	0
  3767  006F46  6E95               	movwf	149,c	;volatile
  3768                           
  3769                           ;menus.c: 418:         switch(tmp){
  3770  006F48  EFB5  F037         	goto	l2613
  3771  006F4C                     l2601:
  3772                           
  3773                           ;menus.c: 422:                 aumentarTemp(1);
  3774  006F4C  0E01               	movlw	1
  3775  006F4E  ECF5  F035         	call	_aumentarTemp
  3776                           
  3777                           ;menus.c: 423:                 break;
  3778  006F52  EF96  F037         	goto	l2593
  3779  006F56                     l2603:
  3780                           
  3781                           ;menus.c: 427:                 diminuirTemp(1);
  3782  006F56  0E01               	movlw	1
  3783  006F58  EC12  F036         	call	_diminuirTemp
  3784                           
  3785                           ;menus.c: 428:                 break;
  3786  006F5C  EF96  F037         	goto	l2593
  3787  006F60                     l2605:
  3788                           
  3789                           ;menus.c: 432:                 lcd_cmd(0x01);
  3790  006F60  0E01               	movlw	1
  3791  006F62  EC7F  F035         	call	_lcd_cmd
  3792  006F66  EFCE  F037         	goto	l242
  3793  006F6A                     l2613:
  3794  006F6A  501E               	movf	menuAumentaDiminuiAC@tmp^0,w,c
  3795  006F6C  6E1C               	movwf	??_menuAumentaDiminuiAC^0,c
  3796  006F6E  6A1D               	clrf	(??_menuAumentaDiminuiAC+1)^0,c
  3797                           
  3798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3799                           ; Switch size 1, requested type "simple"
  3800                           ; Number of cases is 1, Range of values is 0 to 0
  3801                           ; switch strategies available:
  3802                           ; Name         Instructions Cycles
  3803                           ; simple_byte            4     3 (average)
  3804                           ;	Chosen strategy is simple_byte
  3805  006F70  501D               	movf	(??_menuAumentaDiminuiAC+1)^0,w,c
  3806  006F72  0A00               	xorlw	0	; case 0
  3807  006F74  B4D8               	btfsc	status,2,c
  3808  006F76  EFBF  F037         	goto	l2961
  3809  006F7A  EF96  F037         	goto	l2593
  3810  006F7E                     l2961:
  3811                           
  3812                           ; Switch size 1, requested type "simple"
  3813                           ; Number of cases is 3, Range of values is 1 to 3
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte           10     6 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818  006F7E  501C               	movf	??_menuAumentaDiminuiAC^0,w,c
  3819  006F80  0A01               	xorlw	1	; case 1
  3820  006F82  B4D8               	btfsc	status,2,c
  3821  006F84  EFA6  F037         	goto	l2601
  3822  006F88  0A03               	xorlw	3	; case 2
  3823  006F8A  B4D8               	btfsc	status,2,c
  3824  006F8C  EFAB  F037         	goto	l2603
  3825  006F90  0A01               	xorlw	1	; case 3
  3826  006F92  B4D8               	btfsc	status,2,c
  3827  006F94  EFB0  F037         	goto	l2605
  3828  006F98  EF96  F037         	goto	l2593
  3829  006F9C                     l242:
  3830  006F9C  0012               	return		;funcret
  3831  006F9E                     __end_of_menuAumentaDiminuiAC:
  3832                           	opt callstack 0
  3833                           
  3834 ;; *************** function _tc_tecla *****************
  3835 ;; Defined at:
  3836 ;;		line 14 in file "teclado.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  timeout         2    6[COMRAM] unsigned int 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  to              2    8[COMRAM] unsigned int 
  3841 ;;  i               1   12[COMRAM] unsigned char 
  3842 ;;  ret             1   11[COMRAM] unsigned char 
  3843 ;;  tmp             1   10[COMRAM] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      unsigned char 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3853 ;;      Params:         2       0       0       0       0       0       0
  3854 ;;      Locals:         5       0       0       0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0
  3856 ;;      Totals:         7       0       0       0       0       0       0
  3857 ;;Total ram usage:        7 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    1
  3860 ;; This function calls:
  3861 ;;		_delay_ms
  3862 ;; This function is called by:
  3863 ;;		_main
  3864 ;;		_menuTranca
  3865 ;;		_menuPorta
  3866 ;;		_menuManipLuzes
  3867 ;;		_menuLuzes
  3868 ;;		_menuAumentaDiminuiAC
  3869 ;;		_menuArCondicionado
  3870 ;;		_sair
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text18
  3875  0077EC                     __ptext18:
  3876                           	opt callstack 0
  3877  0077EC                     _tc_tecla:
  3878                           	opt callstack 29
  3879  0077EC                     
  3880                           ;teclado.c: 15:     unsigned int to = 0;
  3881  0077EC  0E00               	movlw	0
  3882  0077EE  6E0A               	movwf	(tc_tecla@to+1)^0,c
  3883  0077F0  0E00               	movlw	0
  3884  0077F2  6E09               	movwf	tc_tecla@to^0,c
  3885                           
  3886                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  3887  0077F4  0E00               	movlw	0
  3888  0077F6  6E0C               	movwf	tc_tecla@ret^0,c
  3889  0077F8                     
  3890                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  3891  0077F8  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  3892                           
  3893                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  3894  0077FC  EFA7  F03C         	goto	l2207
  3895  007800                     l2155:
  3896                           
  3897                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  3898  007800  0E00               	movlw	0
  3899  007802  6E0D               	movwf	tc_tecla@i^0,c
  3900  007804                     l2161:
  3901                           
  3902                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  3903  007804  0E83               	movlw	low _linha
  3904  007806  240D               	addwf	tc_tecla@i^0,w,c
  3905  007808  6EF6               	movwf	tblptrl,c
  3906  00780A  6AF7               	clrf	tblptrh,c
  3907  00780C  0E7E               	movlw	high _linha
  3908  00780E  22F7               	addwfc	tblptrh,f,c
  3909  007810                     	if	0	;There are less than 3 active tblptr bytes
  3910  007810                     	endif
  3911  007810  0008               	tblrd		*
  3912  007812  50F5               	movf	tablat,w,c
  3913  007814  0AFF               	xorlw	255
  3914  007816  1281               	iorwf	129,f,c	;volatile
  3915  007818                     
  3916                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  3917  007818  B683               	btfsc	131,3,c	;volatile
  3918  00781A  EF11  F03C         	goto	u901
  3919  00781E  EF13  F03C         	goto	u900
  3920  007822                     u901:
  3921  007822  EF2B  F03C         	goto	l74
  3922  007826                     u900:
  3923  007826                     
  3924                           ;teclado.c: 25:                 delay_ms(atraso);
  3925  007826  0E00               	movlw	0
  3926  007828  6E02               	movwf	(delay_ms@t+1)^0,c
  3927  00782A  0E0F               	movlw	15
  3928  00782C  6E01               	movwf	delay_ms@t^0,c
  3929  00782E  ECF5  F036         	call	_delay_ms	;wreg free
  3930  007832                     
  3931                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  3932  007832  B683               	btfsc	131,3,c	;volatile
  3933  007834  EF1E  F03C         	goto	u911
  3934  007838  EF20  F03C         	goto	u910
  3935  00783C                     u911:
  3936  00783C  EF2B  F03C         	goto	l74
  3937  007840                     u910:
  3938  007840                     l76:
  3939  007840  A683               	btfss	131,3,c	;volatile
  3940  007842  EF25  F03C         	goto	u921
  3941  007846  EF27  F03C         	goto	u920
  3942  00784A                     u921:
  3943  00784A  EF20  F03C         	goto	l76
  3944  00784E                     u920:
  3945  00784E                     
  3946                           ;teclado.c: 28:                     ret = 1 + i;
  3947  00784E  280D               	incf	tc_tecla@i^0,w,c
  3948  007850  6E0C               	movwf	tc_tecla@ret^0,c
  3949                           
  3950                           ;teclado.c: 29:                     break;
  3951  007852  EF9D  F03C         	goto	l2203
  3952  007856                     l74:
  3953                           
  3954                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  3955  007856  B483               	btfsc	131,2,c	;volatile
  3956  007858  EF30  F03C         	goto	u931
  3957  00785C  EF32  F03C         	goto	u930
  3958  007860                     u931:
  3959  007860  EF4B  F03C         	goto	l79
  3960  007864                     u930:
  3961  007864                     
  3962                           ;teclado.c: 33:                 delay_ms(atraso);
  3963  007864  0E00               	movlw	0
  3964  007866  6E02               	movwf	(delay_ms@t+1)^0,c
  3965  007868  0E0F               	movlw	15
  3966  00786A  6E01               	movwf	delay_ms@t^0,c
  3967  00786C  ECF5  F036         	call	_delay_ms	;wreg free
  3968  007870                     
  3969                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  3970  007870  B483               	btfsc	131,2,c	;volatile
  3971  007872  EF3D  F03C         	goto	u941
  3972  007876  EF3F  F03C         	goto	u940
  3973  00787A                     u941:
  3974  00787A  EF4B  F03C         	goto	l79
  3975  00787E                     u940:
  3976  00787E                     l81:
  3977  00787E  A483               	btfss	131,2,c	;volatile
  3978  007880  EF44  F03C         	goto	u951
  3979  007884  EF46  F03C         	goto	u950
  3980  007888                     u951:
  3981  007888  EF3F  F03C         	goto	l81
  3982  00788C                     u950:
  3983  00788C                     
  3984                           ;teclado.c: 36:                     ret = 4 + i;
  3985  00788C  500D               	movf	tc_tecla@i^0,w,c
  3986  00788E  0F04               	addlw	4
  3987  007890  6E0C               	movwf	tc_tecla@ret^0,c
  3988                           
  3989                           ;teclado.c: 37:                     break;
  3990  007892  EF9D  F03C         	goto	l2203
  3991  007896                     l79:
  3992                           
  3993                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  3994  007896  B283               	btfsc	131,1,c	;volatile
  3995  007898  EF50  F03C         	goto	u961
  3996  00789C  EF52  F03C         	goto	u960
  3997  0078A0                     u961:
  3998  0078A0  EF6B  F03C         	goto	l84
  3999  0078A4                     u960:
  4000  0078A4                     
  4001                           ;teclado.c: 41:                 delay_ms(atraso);
  4002  0078A4  0E00               	movlw	0
  4003  0078A6  6E02               	movwf	(delay_ms@t+1)^0,c
  4004  0078A8  0E0F               	movlw	15
  4005  0078AA  6E01               	movwf	delay_ms@t^0,c
  4006  0078AC  ECF5  F036         	call	_delay_ms	;wreg free
  4007  0078B0                     
  4008                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  4009  0078B0  B283               	btfsc	131,1,c	;volatile
  4010  0078B2  EF5D  F03C         	goto	u971
  4011  0078B6  EF5F  F03C         	goto	u970
  4012  0078BA                     u971:
  4013  0078BA  EF6B  F03C         	goto	l84
  4014  0078BE                     u970:
  4015  0078BE                     l86:
  4016  0078BE  A283               	btfss	131,1,c	;volatile
  4017  0078C0  EF64  F03C         	goto	u981
  4018  0078C4  EF66  F03C         	goto	u980
  4019  0078C8                     u981:
  4020  0078C8  EF5F  F03C         	goto	l86
  4021  0078CC                     u980:
  4022  0078CC                     
  4023                           ;teclado.c: 44:                     ret = 7 + i;
  4024  0078CC  500D               	movf	tc_tecla@i^0,w,c
  4025  0078CE  0F07               	addlw	7
  4026  0078D0  6E0C               	movwf	tc_tecla@ret^0,c
  4027                           
  4028                           ;teclado.c: 45:                     break;
  4029  0078D2  EF9D  F03C         	goto	l2203
  4030  0078D6                     l84:
  4031                           
  4032                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  4033  0078D6  B083               	btfsc	131,0,c	;volatile
  4034  0078D8  EF70  F03C         	goto	u991
  4035  0078DC  EF72  F03C         	goto	u990
  4036  0078E0                     u991:
  4037  0078E0  EF8B  F03C         	goto	l2197
  4038  0078E4                     u990:
  4039  0078E4                     
  4040                           ;teclado.c: 49:                 delay_ms(atraso);
  4041  0078E4  0E00               	movlw	0
  4042  0078E6  6E02               	movwf	(delay_ms@t+1)^0,c
  4043  0078E8  0E0F               	movlw	15
  4044  0078EA  6E01               	movwf	delay_ms@t^0,c
  4045  0078EC  ECF5  F036         	call	_delay_ms	;wreg free
  4046  0078F0                     
  4047                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  4048  0078F0  B083               	btfsc	131,0,c	;volatile
  4049  0078F2  EF7D  F03C         	goto	u1001
  4050  0078F6  EF7F  F03C         	goto	u1000
  4051  0078FA                     u1001:
  4052  0078FA  EF8B  F03C         	goto	l2197
  4053  0078FE                     u1000:
  4054  0078FE                     l91:
  4055  0078FE  A083               	btfss	131,0,c	;volatile
  4056  007900  EF84  F03C         	goto	u1011
  4057  007904  EF86  F03C         	goto	u1010
  4058  007908                     u1011:
  4059  007908  EF7F  F03C         	goto	l91
  4060  00790C                     u1010:
  4061  00790C                     
  4062                           ;teclado.c: 52:                     ret = 10 + i;
  4063  00790C  500D               	movf	tc_tecla@i^0,w,c
  4064  00790E  0F0A               	addlw	10
  4065  007910  6E0C               	movwf	tc_tecla@ret^0,c
  4066                           
  4067                           ;teclado.c: 53:                     break;
  4068  007912  EF9D  F03C         	goto	l2203
  4069  007916                     l2197:
  4070                           
  4071                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  4072  007916  0E83               	movlw	low _linha
  4073  007918  240D               	addwf	tc_tecla@i^0,w,c
  4074  00791A  6EF6               	movwf	tblptrl,c
  4075  00791C  6AF7               	clrf	tblptrh,c
  4076  00791E  0E7E               	movlw	high _linha
  4077  007920  22F7               	addwfc	tblptrh,f,c
  4078  007922                     	if	0	;There are less than 3 active tblptr bytes
  4079  007922                     	endif
  4080  007922  0008               	tblrd		*
  4081  007924  50F5               	movf	tablat,w,c
  4082  007926  1681               	andwf	129,f,c	;volatile
  4083  007928                     
  4084                           ;teclado.c: 57:         };
  4085  007928  2A0D               	incf	tc_tecla@i^0,f,c
  4086  00792A  0E02               	movlw	2
  4087  00792C  640D               	cpfsgt	tc_tecla@i^0,c
  4088  00792E  EF9B  F03C         	goto	u1021
  4089  007932  EF9D  F03C         	goto	u1020
  4090  007936                     u1021:
  4091  007936  EF02  F03C         	goto	l2161
  4092  00793A                     u1020:
  4093  00793A                     l2203:
  4094                           
  4095                           ;teclado.c: 58:         delay_ms(atraso_min);
  4096  00793A  0E00               	movlw	0
  4097  00793C  6E02               	movwf	(delay_ms@t+1)^0,c
  4098  00793E  0E05               	movlw	5
  4099  007940  6E01               	movwf	delay_ms@t^0,c
  4100  007942  ECF5  F036         	call	_delay_ms	;wreg free
  4101  007946                     
  4102                           ;teclado.c: 59:         to += 5;
  4103  007946  0E05               	movlw	5
  4104  007948  2609               	addwf	tc_tecla@to^0,f,c
  4105  00794A  0E00               	movlw	0
  4106  00794C  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  4107  00794E                     l2207:
  4108                           
  4109                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  4110  00794E  5007               	movf	tc_tecla@timeout^0,w,c
  4111  007950  5C09               	subwf	tc_tecla@to^0,w,c
  4112  007952  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  4113  007954  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  4114  007956  A0D8               	btfss	status,0,c
  4115  007958  EFB0  F03C         	goto	u1031
  4116  00795C  EFB2  F03C         	goto	u1030
  4117  007960                     u1031:
  4118  007960  EFBB  F03C         	goto	l2211
  4119  007964                     u1030:
  4120  007964  5007               	movf	tc_tecla@timeout^0,w,c
  4121  007966  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  4122  007968  A4D8               	btfss	status,2,c
  4123  00796A  EFB9  F03C         	goto	u1041
  4124  00796E  EFBB  F03C         	goto	u1040
  4125  007972                     u1041:
  4126  007972  EFC3  F03C         	goto	l2213
  4127  007976                     u1040:
  4128  007976                     l2211:
  4129  007976  500C               	movf	tc_tecla@ret^0,w,c
  4130  007978  B4D8               	btfsc	status,2,c
  4131  00797A  EFC1  F03C         	goto	u1051
  4132  00797E  EFC3  F03C         	goto	u1050
  4133  007982                     u1051:
  4134  007982  EF00  F03C         	goto	l2155
  4135  007986                     u1050:
  4136  007986                     l2213:
  4137                           
  4138                           ;teclado.c: 62:     if (!ret)ret = 255;
  4139  007986  500C               	movf	tc_tecla@ret^0,w,c
  4140  007988  A4D8               	btfss	status,2,c
  4141  00798A  EFC9  F03C         	goto	u1061
  4142  00798E  EFCB  F03C         	goto	u1060
  4143  007992                     u1061:
  4144  007992  EFCC  F03C         	goto	l2217
  4145  007996                     u1060:
  4146  007996  680C               	setf	tc_tecla@ret^0,c
  4147  007998                     l2217:
  4148                           
  4149                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  4150  007998  0E0B               	movlw	11
  4151  00799A  180C               	xorwf	tc_tecla@ret^0,w,c
  4152  00799C  A4D8               	btfss	status,2,c
  4153  00799E  EFD3  F03C         	goto	u1071
  4154  0079A2  EFD5  F03C         	goto	u1070
  4155  0079A6                     u1071:
  4156  0079A6  EFD7  F03C         	goto	l2221
  4157  0079AA                     u1070:
  4158  0079AA  0E00               	movlw	0
  4159  0079AC  6E0C               	movwf	tc_tecla@ret^0,c
  4160  0079AE                     l2221:
  4161                           
  4162                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  4163  0079AE  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  4164                           
  4165                           ;teclado.c: 65:     return ret;
  4166  0079B2  500C               	movf	tc_tecla@ret^0,w,c
  4167  0079B4  0012               	return		;funcret
  4168  0079B6                     __end_of_tc_tecla:
  4169                           	opt callstack 0
  4170                           
  4171 ;; *************** function _printTemp *****************
  4172 ;; Defined at:
  4173 ;;		line 16 in file "ssd.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  temp            1    wreg     unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  temp            1   26[COMRAM] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4187 ;;      Params:         0       0       0       0       0       0       0
  4188 ;;      Locals:         1       0       0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0
  4190 ;;      Totals:         1       0       0       0       0       0       0
  4191 ;;Total ram usage:        1 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    1
  4194 ;; This function calls:
  4195 ;;		___awdiv
  4196 ;;		___awmod
  4197 ;;		_delay_ms
  4198 ;; This function is called by:
  4199 ;;		_menuAumentaDiminuiAC
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text19
  4204  00704E                     __ptext19:
  4205                           	opt callstack 0
  4206  00704E                     _printTemp:
  4207                           	opt callstack 27
  4208                           
  4209                           ;incstack = 0
  4210                           ;printTemp@temp stored from wreg
  4211  00704E  6E1B               	movwf	printTemp@temp^0,c
  4212  007050                     
  4213                           ;ssd.c: 18:     (*(volatile __near unsigned char*)0xF80) = 0x00;
  4214  007050  0E00               	movlw	0
  4215  007052  6E80               	movwf	128,c	;volatile
  4216                           
  4217                           ;ssd.c: 19:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  4218  007054  0E00               	movlw	0
  4219  007056  6E83               	movwf	131,c	;volatile
  4220  007058                     
  4221                           ;ssd.c: 21:     (*(volatile __near unsigned char*)0xF83) = num[temp/10];
  4222  007058  C01B  F013         	movff	printTemp@temp,___awdiv@dividend
  4223  00705C  6A14               	clrf	(___awdiv@dividend+1)^0,c
  4224  00705E  0E00               	movlw	0
  4225  007060  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4226  007062  0E0A               	movlw	10
  4227  007064  6E15               	movwf	___awdiv@divisor^0,c
  4228  007066  EC87  F038         	call	___awdiv	;wreg free
  4229  00706A  90D8               	bcf	status,0,c
  4230  00706C  3613               	rlcf	?___awdiv^0,f,c
  4231  00706E  3614               	rlcf	(?___awdiv+1)^0,f,c
  4232  007070  0E5B               	movlw	low ssd@num
  4233  007072  2413               	addwf	?___awdiv^0,w,c
  4234  007074  6EF6               	movwf	tblptrl,c
  4235  007076  0E7E               	movlw	high ssd@num
  4236  007078  2014               	addwfc	(?___awdiv+1)^0,w,c
  4237  00707A  6EF7               	movwf	tblptrh,c
  4238  00707C                     	if	0	;There are less than 3 active tblptr bytes
  4239  00707C                     	endif
  4240  00707C  0008               	tblrd		*
  4241  00707E  CFF5 FF83          	movff	tablat,3971	;volatile
  4242  007082                     
  4243                           ;ssd.c: 22:     (((*(volatile __near unsigned char*)0xF80)) |= (1<<2));
  4244  007082  8480               	bsf	128,2,c	;volatile
  4245  007084                     
  4246                           ;ssd.c: 24:     delay_ms(15);
  4247  007084  0E00               	movlw	0
  4248  007086  6E02               	movwf	(delay_ms@t+1)^0,c
  4249  007088  0E0F               	movlw	15
  4250  00708A  6E01               	movwf	delay_ms@t^0,c
  4251  00708C  ECF5  F036         	call	_delay_ms	;wreg free
  4252  007090                     
  4253                           ;ssd.c: 26:     (*(volatile __near unsigned char*)0xF80) = 0x00;
  4254  007090  0E00               	movlw	0
  4255  007092  6E80               	movwf	128,c	;volatile
  4256  007094                     
  4257                           ;ssd.c: 27:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  4258  007094  0E00               	movlw	0
  4259  007096  6E83               	movwf	131,c	;volatile
  4260  007098                     
  4261                           ;ssd.c: 29:     (*(volatile __near unsigned char*)0xF83) = num[temp % 10];
  4262  007098  C01B  F00D         	movff	printTemp@temp,___awmod@dividend
  4263  00709C  6A0E               	clrf	(___awmod@dividend+1)^0,c
  4264  00709E  0E00               	movlw	0
  4265  0070A0  6E10               	movwf	(___awmod@divisor+1)^0,c
  4266  0070A2  0E0A               	movlw	10
  4267  0070A4  6E0F               	movwf	___awmod@divisor^0,c
  4268  0070A6  ECCF  F037         	call	___awmod	;wreg free
  4269  0070AA  90D8               	bcf	status,0,c
  4270  0070AC  360D               	rlcf	?___awmod^0,f,c
  4271  0070AE  360E               	rlcf	(?___awmod+1)^0,f,c
  4272  0070B0  0E5B               	movlw	low ssd@num
  4273  0070B2  240D               	addwf	?___awmod^0,w,c
  4274  0070B4  6EF6               	movwf	tblptrl,c
  4275  0070B6  0E7E               	movlw	high ssd@num
  4276  0070B8  200E               	addwfc	(?___awmod+1)^0,w,c
  4277  0070BA  6EF7               	movwf	tblptrh,c
  4278  0070BC                     	if	0	;There are less than 3 active tblptr bytes
  4279  0070BC                     	endif
  4280  0070BC  0008               	tblrd		*
  4281  0070BE  CFF5 FF83          	movff	tablat,3971	;volatile
  4282  0070C2                     
  4283                           ;ssd.c: 30:     (((*(volatile __near unsigned char*)0xF80)) |= (1<<3));
  4284  0070C2  8680               	bsf	128,3,c	;volatile
  4285  0070C4                     
  4286                           ;ssd.c: 32:     delay_ms(15);
  4287  0070C4  0E00               	movlw	0
  4288  0070C6  6E02               	movwf	(delay_ms@t+1)^0,c
  4289  0070C8  0E0F               	movlw	15
  4290  0070CA  6E01               	movwf	delay_ms@t^0,c
  4291  0070CC  ECF5  F036         	call	_delay_ms	;wreg free
  4292  0070D0                     
  4293                           ;ssd.c: 34:     (*(volatile __near unsigned char*)0xF80) = 0x00;
  4294  0070D0  0E00               	movlw	0
  4295  0070D2  6E80               	movwf	128,c	;volatile
  4296  0070D4                     
  4297                           ;ssd.c: 35:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  4298  0070D4  0E00               	movlw	0
  4299  0070D6  6E83               	movwf	131,c	;volatile
  4300  0070D8                     
  4301                           ;ssd.c: 37:     (*(volatile __near unsigned char*)0xF83) = 0x63;
  4302  0070D8  0E63               	movlw	99
  4303  0070DA  6E83               	movwf	131,c	;volatile
  4304  0070DC                     
  4305                           ;ssd.c: 38:     (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  4306  0070DC  8880               	bsf	128,4,c	;volatile
  4307  0070DE                     
  4308                           ;ssd.c: 40:     delay_ms(15);
  4309  0070DE  0E00               	movlw	0
  4310  0070E0  6E02               	movwf	(delay_ms@t+1)^0,c
  4311  0070E2  0E0F               	movlw	15
  4312  0070E4  6E01               	movwf	delay_ms@t^0,c
  4313  0070E6  ECF5  F036         	call	_delay_ms	;wreg free
  4314  0070EA                     
  4315                           ;ssd.c: 42:     (*(volatile __near unsigned char*)0xF80) = 0x00;
  4316  0070EA  0E00               	movlw	0
  4317  0070EC  6E80               	movwf	128,c	;volatile
  4318  0070EE                     
  4319                           ;ssd.c: 43:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  4320  0070EE  0E00               	movlw	0
  4321  0070F0  6E83               	movwf	131,c	;volatile
  4322  0070F2                     
  4323                           ;ssd.c: 45:     (*(volatile __near unsigned char*)0xF83) = 0x39;
  4324  0070F2  0E39               	movlw	57
  4325  0070F4  6E83               	movwf	131,c	;volatile
  4326  0070F6                     
  4327                           ;ssd.c: 46:     (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  4328  0070F6  8A80               	bsf	128,5,c	;volatile
  4329  0070F8                     
  4330                           ;ssd.c: 48:     delay_ms(15);
  4331  0070F8  0E00               	movlw	0
  4332  0070FA  6E02               	movwf	(delay_ms@t+1)^0,c
  4333  0070FC  0E0F               	movlw	15
  4334  0070FE  6E01               	movwf	delay_ms@t^0,c
  4335  007100  ECF5  F036         	call	_delay_ms	;wreg free
  4336  007104                     
  4337                           ;ssd.c: 50:     (*(volatile __near unsigned char*)0xF80) = 0x00;
  4338  007104  0E00               	movlw	0
  4339  007106  6E80               	movwf	128,c	;volatile
  4340  007108                     
  4341                           ;ssd.c: 51:     (*(volatile __near unsigned char*)0xF83) = 0x00;
  4342  007108  0E00               	movlw	0
  4343  00710A  6E83               	movwf	131,c	;volatile
  4344  00710C  0012               	return		;funcret
  4345  00710E                     __end_of_printTemp:
  4346                           	opt callstack 0
  4347                           
  4348 ;; *************** function ___awmod *****************
  4349 ;; Defined at:
  4350 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  dividend        2   12[COMRAM] int 
  4353 ;;  divisor         2   14[COMRAM] int 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  sign            1   17[COMRAM] unsigned char 
  4356 ;;  counter         1   16[COMRAM] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  2   12[COMRAM] int 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4366 ;;      Params:         4       0       0       0       0       0       0
  4367 ;;      Locals:         2       0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0
  4369 ;;      Totals:         6       0       0       0       0       0       0
  4370 ;;Total ram usage:        6 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_printTemp
  4376 ;;		_printSenha
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text20
  4381  006F9E                     __ptext20:
  4382                           	opt callstack 0
  4383  006F9E                     ___awmod:
  4384                           	opt callstack 27
  4385  006F9E  0E00               	movlw	0
  4386  006FA0  6E12               	movwf	___awmod@sign^0,c
  4387  006FA2  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  4388  006FA4  EFD8  F037         	goto	u830
  4389  006FA8  EFD6  F037         	goto	u831
  4390  006FAC                     u831:
  4391  006FAC  EFDE  F037         	goto	l2101
  4392  006FB0                     u830:
  4393  006FB0  6C0D               	negf	___awmod@dividend^0,c
  4394  006FB2  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  4395  006FB4  B0D8               	btfsc	status,0,c
  4396  006FB6  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  4397  006FB8  0E01               	movlw	1
  4398  006FBA  6E12               	movwf	___awmod@sign^0,c
  4399  006FBC                     l2101:
  4400  006FBC  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  4401  006FBE  EFE5  F037         	goto	u840
  4402  006FC2  EFE3  F037         	goto	u841
  4403  006FC6                     u841:
  4404  006FC6  EFE9  F037         	goto	l2105
  4405  006FCA                     u840:
  4406  006FCA  6C0F               	negf	___awmod@divisor^0,c
  4407  006FCC  1E10               	comf	(___awmod@divisor+1)^0,f,c
  4408  006FCE  B0D8               	btfsc	status,0,c
  4409  006FD0  2A10               	incf	(___awmod@divisor+1)^0,f,c
  4410  006FD2                     l2105:
  4411  006FD2  500F               	movf	___awmod@divisor^0,w,c
  4412  006FD4  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  4413  006FD6  B4D8               	btfsc	status,2,c
  4414  006FD8  EFF0  F037         	goto	u851
  4415  006FDC  EFF2  F037         	goto	u850
  4416  006FE0                     u851:
  4417  006FE0  EF16  F038         	goto	l2121
  4418  006FE4                     u850:
  4419  006FE4  0E01               	movlw	1
  4420  006FE6  6E11               	movwf	___awmod@counter^0,c
  4421  006FE8  EFFA  F037         	goto	l2111
  4422  006FEC                     l2109:
  4423  006FEC  90D8               	bcf	status,0,c
  4424  006FEE  360F               	rlcf	___awmod@divisor^0,f,c
  4425  006FF0  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  4426  006FF2  2A11               	incf	___awmod@counter^0,f,c
  4427  006FF4                     l2111:
  4428  006FF4  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  4429  006FF6  EFFF  F037         	goto	u861
  4430  006FFA  EF01  F038         	goto	u860
  4431  006FFE                     u861:
  4432  006FFE  EFF6  F037         	goto	l2109
  4433  007002                     u860:
  4434  007002                     l2113:
  4435  007002  500F               	movf	___awmod@divisor^0,w,c
  4436  007004  5C0D               	subwf	___awmod@dividend^0,w,c
  4437  007006  5010               	movf	(___awmod@divisor+1)^0,w,c
  4438  007008  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  4439  00700A  A0D8               	btfss	status,0,c
  4440  00700C  EF0A  F038         	goto	u871
  4441  007010  EF0C  F038         	goto	u870
  4442  007014                     u871:
  4443  007014  EF10  F038         	goto	l2117
  4444  007018                     u870:
  4445  007018  500F               	movf	___awmod@divisor^0,w,c
  4446  00701A  5E0D               	subwf	___awmod@dividend^0,f,c
  4447  00701C  5010               	movf	(___awmod@divisor+1)^0,w,c
  4448  00701E  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  4449  007020                     l2117:
  4450  007020  90D8               	bcf	status,0,c
  4451  007022  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  4452  007024  320F               	rrcf	___awmod@divisor^0,f,c
  4453  007026  2E11               	decfsz	___awmod@counter^0,f,c
  4454  007028  EF01  F038         	goto	l2113
  4455  00702C                     l2121:
  4456  00702C  5012               	movf	___awmod@sign^0,w,c
  4457  00702E  B4D8               	btfsc	status,2,c
  4458  007030  EF1C  F038         	goto	u881
  4459  007034  EF1E  F038         	goto	u880
  4460  007038                     u881:
  4461  007038  EF22  F038         	goto	l2125
  4462  00703C                     u880:
  4463  00703C  6C0D               	negf	___awmod@dividend^0,c
  4464  00703E  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  4465  007040  B0D8               	btfsc	status,0,c
  4466  007042  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  4467  007044                     l2125:
  4468  007044  C00D  F00D         	movff	___awmod@dividend,?___awmod
  4469  007048  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  4470  00704C  0012               	return		;funcret
  4471  00704E                     __end_of___awmod:
  4472                           	opt callstack 0
  4473                           
  4474 ;; *************** function ___awdiv *****************
  4475 ;; Defined at:
  4476 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  dividend        2   18[COMRAM] int 
  4479 ;;  divisor         2   20[COMRAM] int 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  quotient        2   24[COMRAM] int 
  4482 ;;  sign            1   23[COMRAM] unsigned char 
  4483 ;;  counter         1   22[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  2   18[COMRAM] int 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4493 ;;      Params:         4       0       0       0       0       0       0
  4494 ;;      Locals:         4       0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0
  4496 ;;      Totals:         8       0       0       0       0       0       0
  4497 ;;Total ram usage:        8 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_printTemp
  4503 ;;		_printSenha
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text21
  4508  00710E                     __ptext21:
  4509                           	opt callstack 0
  4510  00710E                     ___awdiv:
  4511                           	opt callstack 27
  4512  00710E  0E00               	movlw	0
  4513  007110  6E18               	movwf	___awdiv@sign^0,c
  4514  007112  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  4515  007114  EF90  F038         	goto	u770
  4516  007118  EF8E  F038         	goto	u771
  4517  00711C                     u771:
  4518  00711C  EF96  F038         	goto	l2057
  4519  007120                     u770:
  4520  007120  6C15               	negf	___awdiv@divisor^0,c
  4521  007122  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  4522  007124  B0D8               	btfsc	status,0,c
  4523  007126  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  4524  007128  0E01               	movlw	1
  4525  00712A  6E18               	movwf	___awdiv@sign^0,c
  4526  00712C                     l2057:
  4527  00712C  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  4528  00712E  EF9D  F038         	goto	u780
  4529  007132  EF9B  F038         	goto	u781
  4530  007136                     u781:
  4531  007136  EFA3  F038         	goto	l2063
  4532  00713A                     u780:
  4533  00713A  6C13               	negf	___awdiv@dividend^0,c
  4534  00713C  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  4535  00713E  B0D8               	btfsc	status,0,c
  4536  007140  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  4537  007142  0E01               	movlw	1
  4538  007144  1A18               	xorwf	___awdiv@sign^0,f,c
  4539  007146                     l2063:
  4540  007146  0E00               	movlw	0
  4541  007148  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  4542  00714A  0E00               	movlw	0
  4543  00714C  6E19               	movwf	___awdiv@quotient^0,c
  4544  00714E  5015               	movf	___awdiv@divisor^0,w,c
  4545  007150  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  4546  007152  B4D8               	btfsc	status,2,c
  4547  007154  EFAE  F038         	goto	u791
  4548  007158  EFB0  F038         	goto	u790
  4549  00715C                     u791:
  4550  00715C  EFD8  F038         	goto	l2085
  4551  007160                     u790:
  4552  007160  0E01               	movlw	1
  4553  007162  6E17               	movwf	___awdiv@counter^0,c
  4554  007164  EFB8  F038         	goto	l2071
  4555  007168                     l2069:
  4556  007168  90D8               	bcf	status,0,c
  4557  00716A  3615               	rlcf	___awdiv@divisor^0,f,c
  4558  00716C  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  4559  00716E  2A17               	incf	___awdiv@counter^0,f,c
  4560  007170                     l2071:
  4561  007170  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  4562  007172  EFBD  F038         	goto	u801
  4563  007176  EFBF  F038         	goto	u800
  4564  00717A                     u801:
  4565  00717A  EFB4  F038         	goto	l2069
  4566  00717E                     u800:
  4567  00717E                     l2073:
  4568  00717E  90D8               	bcf	status,0,c
  4569  007180  3619               	rlcf	___awdiv@quotient^0,f,c
  4570  007182  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  4571  007184  5015               	movf	___awdiv@divisor^0,w,c
  4572  007186  5C13               	subwf	___awdiv@dividend^0,w,c
  4573  007188  5016               	movf	(___awdiv@divisor+1)^0,w,c
  4574  00718A  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  4575  00718C  A0D8               	btfss	status,0,c
  4576  00718E  EFCB  F038         	goto	u811
  4577  007192  EFCD  F038         	goto	u810
  4578  007196                     u811:
  4579  007196  EFD2  F038         	goto	l2081
  4580  00719A                     u810:
  4581  00719A  5015               	movf	___awdiv@divisor^0,w,c
  4582  00719C  5E13               	subwf	___awdiv@dividend^0,f,c
  4583  00719E  5016               	movf	(___awdiv@divisor+1)^0,w,c
  4584  0071A0  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  4585  0071A2  8019               	bsf	___awdiv@quotient^0,0,c
  4586  0071A4                     l2081:
  4587  0071A4  90D8               	bcf	status,0,c
  4588  0071A6  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  4589  0071A8  3215               	rrcf	___awdiv@divisor^0,f,c
  4590  0071AA  2E17               	decfsz	___awdiv@counter^0,f,c
  4591  0071AC  EFBF  F038         	goto	l2073
  4592  0071B0                     l2085:
  4593  0071B0  5018               	movf	___awdiv@sign^0,w,c
  4594  0071B2  B4D8               	btfsc	status,2,c
  4595  0071B4  EFDE  F038         	goto	u821
  4596  0071B8  EFE0  F038         	goto	u820
  4597  0071BC                     u821:
  4598  0071BC  EFE4  F038         	goto	l2089
  4599  0071C0                     u820:
  4600  0071C0  6C19               	negf	___awdiv@quotient^0,c
  4601  0071C2  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  4602  0071C4  B0D8               	btfsc	status,0,c
  4603  0071C6  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  4604  0071C8                     l2089:
  4605  0071C8  C019  F013         	movff	___awdiv@quotient,?___awdiv
  4606  0071CC  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  4607  0071D0  0012               	return		;funcret
  4608  0071D2                     __end_of___awdiv:
  4609                           	opt callstack 0
  4610                           
  4611 ;; *************** function _lcd_str *****************
  4612 ;; Defined at:
  4613 ;;		line 47 in file "lcd.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  str             2    7[COMRAM] PTR const unsigned char 
  4616 ;;		 -> STR_55(9), STR_54(8), STR_53(10), STR_52(9), 
  4617 ;;		 -> STR_51(11), STR_50(16), STR_49(11), STR_48(7), 
  4618 ;;		 -> STR_47(11), STR_46(13), STR_45(9), STR_44(11), 
  4619 ;;		 -> STR_43(6), STR_42(11), STR_41(11), STR_40(11), 
  4620 ;;		 -> STR_39(7), STR_38(8), STR_37(7), STR_36(11), 
  4621 ;;		 -> STR_35(7), STR_34(8), STR_33(7), STR_32(6), 
  4622 ;;		 -> STR_31(9), STR_30(6), STR_29(12), STR_28(15), 
  4623 ;;		 -> STR_27(12), STR_26(14), STR_25(7), STR_24(9), 
  4624 ;;		 -> STR_23(7), STR_22(7), STR_21(8), STR_20(9), 
  4625 ;;		 -> STR_19(9), STR_18(11), STR_17(8), STR_16(7), 
  4626 ;;		 -> STR_15(10), STR_14(6), STR_13(18), STR_12(13), 
  4627 ;;		 -> STR_11(12), STR_10(18), STR_9(13), STR_8(13), 
  4628 ;;		 -> STR_7(7), STR_6(8), STR_5(7), STR_4(7), 
  4629 ;;		 -> STR_3(5), STR_2(8), STR_1(6), 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  i               1   11[COMRAM] unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4641 ;;      Params:         2       0       0       0       0       0       0
  4642 ;;      Locals:         1       0       0       0       0       0       0
  4643 ;;      Temps:          2       0       0       0       0       0       0
  4644 ;;      Totals:         5       0       0       0       0       0       0
  4645 ;;Total ram usage:        5 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    2
  4648 ;; This function calls:
  4649 ;;		_lcd_dat
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;;		_menuTranca
  4653 ;;		_menuPorta
  4654 ;;		_menuManipLuzes
  4655 ;;		_menuLuzes
  4656 ;;		_menuAumentaDiminuiAC
  4657 ;;		_menuArCondicionado
  4658 ;;		_sair
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text22
  4663  006CE8                     __ptext22:
  4664                           	opt callstack 0
  4665  006CE8                     _lcd_str:
  4666                           	opt callstack 26
  4667  006CE8                     
  4668                           ;lcd.c: 48:     unsigned char i = 0;
  4669  006CE8  0E00               	movlw	0
  4670  006CEA  6E0C               	movwf	lcd_str@i^0,c
  4671                           
  4672                           ;lcd.c: 50:     while (str[i] != 0) {
  4673  006CEC  EF87  F036         	goto	l2149
  4674  006CF0                     l2145:
  4675                           
  4676                           ;lcd.c: 51:         lcd_dat(str[i]);
  4677  006CF0  500C               	movf	lcd_str@i^0,w,c
  4678  006CF2  2408               	addwf	lcd_str@str^0,w,c
  4679  006CF4  6E0A               	movwf	??_lcd_str^0,c
  4680  006CF6  0E00               	movlw	0
  4681  006CF8  2009               	addwfc	(lcd_str@str+1)^0,w,c
  4682  006CFA  6E0B               	movwf	(??_lcd_str+1)^0,c
  4683  006CFC  C00A  FFF6         	movff	??_lcd_str,tblptrl
  4684  006D00  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  4685  006D04                     	if	0	;tblptru may be non-zero
  4686  006D04                     	endif
  4687  006D04                     	if	0	;tblptru may be non-zero
  4688  006D04                     	endif
  4689  006D04  0008               	tblrd		*
  4690  006D06  50F5               	movf	tablat,w,c
  4691  006D08  EC94  F035         	call	_lcd_dat
  4692  006D0C                     
  4693                           ;lcd.c: 52:         i++;
  4694  006D0C  2A0C               	incf	lcd_str@i^0,f,c
  4695  006D0E                     l2149:
  4696                           
  4697                           ;lcd.c: 50:     while (str[i] != 0) {
  4698  006D0E  500C               	movf	lcd_str@i^0,w,c
  4699  006D10  2408               	addwf	lcd_str@str^0,w,c
  4700  006D12  6E0A               	movwf	??_lcd_str^0,c
  4701  006D14  0E00               	movlw	0
  4702  006D16  2009               	addwfc	(lcd_str@str+1)^0,w,c
  4703  006D18  6E0B               	movwf	(??_lcd_str+1)^0,c
  4704  006D1A  C00A  FFF6         	movff	??_lcd_str,tblptrl
  4705  006D1E  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  4706  006D22                     	if	0	;tblptru may be non-zero
  4707  006D22                     	endif
  4708  006D22                     	if	0	;tblptru may be non-zero
  4709  006D22                     	endif
  4710  006D22  0008               	tblrd		*
  4711  006D24  50F5               	movf	tablat,w,c
  4712  006D26  0900               	iorlw	0
  4713  006D28  A4D8               	btfss	status,2,c
  4714  006D2A  EF99  F036         	goto	u891
  4715  006D2E  EF9B  F036         	goto	u890
  4716  006D32                     u891:
  4717  006D32  EF78  F036         	goto	l2145
  4718  006D36                     u890:
  4719  006D36  0012               	return		;funcret
  4720  006D38                     __end_of_lcd_str:
  4721                           	opt callstack 0
  4722                           
  4723 ;; *************** function _lcd_dat *****************
  4724 ;; Defined at:
  4725 ;;		line 19 in file "lcd.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  val             1    wreg     unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  val             1    6[COMRAM] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4739 ;;      Params:         0       0       0       0       0       0       0
  4740 ;;      Locals:         1       0       0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0
  4742 ;;      Totals:         1       0       0       0       0       0       0
  4743 ;;Total ram usage:        1 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    1
  4746 ;; This function calls:
  4747 ;;		_delay_ms
  4748 ;;		_lcd_wr
  4749 ;; This function is called by:
  4750 ;;		_lcd_str
  4751 ;;		_menuManipLuzes
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text23
  4756  006B28                     __ptext23:
  4757                           	opt callstack 0
  4758  006B28                     _lcd_dat:
  4759                           	opt callstack 26
  4760                           
  4761                           ;incstack = 0
  4762                           ;lcd_dat@val stored from wreg
  4763  006B28  6E07               	movwf	lcd_dat@val^0,c
  4764  006B2A                     
  4765                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  4766  006B2A  8284               	bsf	132,1,c	;volatile
  4767  006B2C                     
  4768                           ;lcd.c: 21:     lcd_wr(val);
  4769  006B2C  5007               	movf	lcd_dat@val^0,w,c
  4770  006B2E  EC5A  F035         	call	_lcd_wr
  4771  006B32                     
  4772                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  4773  006B32  8484               	bsf	132,2,c	;volatile
  4774  006B34                     
  4775                           ;lcd.c: 23:     delay_ms(3);
  4776  006B34  0E00               	movlw	0
  4777  006B36  6E02               	movwf	(delay_ms@t+1)^0,c
  4778  006B38  0E03               	movlw	3
  4779  006B3A  6E01               	movwf	delay_ms@t^0,c
  4780  006B3C  ECF5  F036         	call	_delay_ms	;wreg free
  4781  006B40                     
  4782                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  4783  006B40  9284               	bcf	132,1,c	;volatile
  4784  006B42                     
  4785                           ;lcd.c: 25:     delay_ms(3);
  4786  006B42  0E00               	movlw	0
  4787  006B44  6E02               	movwf	(delay_ms@t+1)^0,c
  4788  006B46  0E03               	movlw	3
  4789  006B48  6E01               	movwf	delay_ms@t^0,c
  4790  006B4A  ECF5  F036         	call	_delay_ms	;wreg free
  4791  006B4E                     
  4792                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  4793  006B4E  8284               	bsf	132,1,c	;volatile
  4794  006B50  0012               	return		;funcret
  4795  006B52                     __end_of_lcd_dat:
  4796                           	opt callstack 0
  4797                           
  4798 ;; *************** function _diminuirTemp *****************
  4799 ;; Defined at:
  4800 ;;		line 46 in file "arCondicionado.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  d               1    wreg     unsigned char 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  d               1    2[COMRAM] unsigned char 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4814 ;;      Params:         0       0       0       0       0       0       0
  4815 ;;      Locals:         1       0       0       0       0       0       0
  4816 ;;      Temps:          2       0       0       0       0       0       0
  4817 ;;      Totals:         3       0       0       0       0       0       0
  4818 ;;Total ram usage:        3 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_menuAumentaDiminuiAC
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text24
  4828  006C24                     __ptext24:
  4829                           	opt callstack 0
  4830  006C24                     _diminuirTemp:
  4831                           	opt callstack 28
  4832                           
  4833                           ;incstack = 0
  4834                           ;diminuirTemp@d stored from wreg
  4835  006C24  6E03               	movwf	diminuirTemp@d^0,c
  4836  006C26                     
  4837                           ;arCondicionado.c: 49:     if(temperatura - d < 15) temperatura = 15;
  4838  006C26  5003               	movf	diminuirTemp@d^0,w,c
  4839  006C28  C03B  F001         	movff	_temperatura,??_diminuirTemp
  4840  006C2C  6A02               	clrf	(??_diminuirTemp+1)^0,c
  4841  006C2E  5E01               	subwf	??_diminuirTemp^0,f,c
  4842  006C30  0E00               	movlw	0
  4843  006C32  5A02               	subwfb	(??_diminuirTemp+1)^0,f,c
  4844  006C34  BE02               	btfsc	(??_diminuirTemp+1)^0,7,c
  4845  006C36  EF28  F036         	goto	u510
  4846  006C3A  5002               	movf	(??_diminuirTemp+1)^0,w,c
  4847  006C3C  E107               	bnz	u511
  4848  006C3E  0E0F               	movlw	15
  4849  006C40  5C01               	subwf	??_diminuirTemp^0,w,c
  4850  006C42  B0D8               	btfsc	status,0,c
  4851  006C44  EF26  F036         	goto	u511
  4852  006C48  EF28  F036         	goto	u510
  4853  006C4C                     u511:
  4854  006C4C  EF2C  F036         	goto	l1381
  4855  006C50                     u510:
  4856  006C50  0E0F               	movlw	15
  4857  006C52  6E3B               	movwf	_temperatura^0,c
  4858  006C54  EF2E  F036         	goto	l283
  4859  006C58                     l1381:
  4860  006C58  5003               	movf	diminuirTemp@d^0,w,c
  4861  006C5A  5E3B               	subwf	_temperatura^0,f,c
  4862  006C5C                     l283:
  4863  006C5C  0012               	return		;funcret
  4864  006C5E                     __end_of_diminuirTemp:
  4865                           	opt callstack 0
  4866                           
  4867 ;; *************** function _aumentarTemp *****************
  4868 ;; Defined at:
  4869 ;;		line 27 in file "arCondicionado.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  a               1    wreg     unsigned char 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  a               1    2[COMRAM] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4883 ;;      Params:         0       0       0       0       0       0       0
  4884 ;;      Locals:         1       0       0       0       0       0       0
  4885 ;;      Temps:          2       0       0       0       0       0       0
  4886 ;;      Totals:         3       0       0       0       0       0       0
  4887 ;;Total ram usage:        3 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_menuAumentaDiminuiAC
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text25
  4897  006BEA                     __ptext25:
  4898                           	opt callstack 0
  4899  006BEA                     _aumentarTemp:
  4900                           	opt callstack 28
  4901                           
  4902                           ;incstack = 0
  4903                           ;aumentarTemp@a stored from wreg
  4904  006BEA  6E03               	movwf	aumentarTemp@a^0,c
  4905  006BEC                     
  4906                           ;arCondicionado.c: 30:     if(temperatura + a > 35) temperatura = 35;
  4907  006BEC  5003               	movf	aumentarTemp@a^0,w,c
  4908  006BEE  C03B  F001         	movff	_temperatura,??_aumentarTemp
  4909  006BF2  6A02               	clrf	(??_aumentarTemp+1)^0,c
  4910  006BF4  2601               	addwf	??_aumentarTemp^0,f,c
  4911  006BF6  0E00               	movlw	0
  4912  006BF8  2202               	addwfc	(??_aumentarTemp+1)^0,f,c
  4913  006BFA  BE02               	btfsc	(??_aumentarTemp+1)^0,7,c
  4914  006BFC  EF09  F036         	goto	u501
  4915  006C00  5002               	movf	(??_aumentarTemp+1)^0,w,c
  4916  006C02  E109               	bnz	u500
  4917  006C04  0E24               	movlw	36
  4918  006C06  5C01               	subwf	??_aumentarTemp^0,w,c
  4919  006C08  A0D8               	btfss	status,0,c
  4920  006C0A  EF09  F036         	goto	u501
  4921  006C0E  EF0B  F036         	goto	u500
  4922  006C12                     u501:
  4923  006C12  EF0F  F036         	goto	l1375
  4924  006C16                     u500:
  4925  006C16  0E23               	movlw	35
  4926  006C18  6E3B               	movwf	_temperatura^0,c
  4927  006C1A  EF11  F036         	goto	l278
  4928  006C1E                     l1375:
  4929  006C1E  5003               	movf	aumentarTemp@a^0,w,c
  4930  006C20  263B               	addwf	_temperatura^0,f,c
  4931  006C22                     l278:
  4932  006C22  0012               	return		;funcret
  4933  006C24                     __end_of_aumentarTemp:
  4934                           	opt callstack 0
  4935                           
  4936 ;; *************** function _ligarDesligar *****************
  4937 ;; Defined at:
  4938 ;;		line 13 in file "arCondicionado.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  i               1    wreg     unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  i               1    0[COMRAM] unsigned char 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4952 ;;      Params:         0       0       0       0       0       0       0
  4953 ;;      Locals:         1       0       0       0       0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0
  4955 ;;      Totals:         1       0       0       0       0       0       0
  4956 ;;Total ram usage:        1 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_menuArCondicionado
  4962 ;;		_sair
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text26
  4967  006ABC                     __ptext26:
  4968                           	opt callstack 0
  4969  006ABC                     _ligarDesligar:
  4970                           	opt callstack 29
  4971                           
  4972                           ;incstack = 0
  4973                           ;ligarDesligar@i stored from wreg
  4974  006ABC  6E01               	movwf	ligarDesligar@i^0,c
  4975  006ABE                     
  4976                           ;arCondicionado.c: 14:     estado = i;
  4977  006ABE  C001  F03E         	movff	ligarDesligar@i,_estado
  4978  006AC2  0012               	return		;funcret
  4979  006AC4                     __end_of_ligarDesligar:
  4980                           	opt callstack 0
  4981                           
  4982 ;; *************** function _lcd_init *****************
  4983 ;; Defined at:
  4984 ;;		line 29 in file "lcd.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4998 ;;      Params:         0       0       0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0
  5001 ;;      Totals:         0       0       0       0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    2
  5005 ;; This function calls:
  5006 ;;		_delay_ms
  5007 ;;		_lcd_cmd
  5008 ;; This function is called by:
  5009 ;;		_main
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text27
  5014  006D8E                     __ptext27:
  5015                           	opt callstack 0
  5016  006D8E                     _lcd_init:
  5017                           	opt callstack 28
  5018  006D8E                     
  5019                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  5020  006D8E  9284               	bcf	132,1,c	;volatile
  5021                           
  5022                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  5023  006D90  9484               	bcf	132,2,c	;volatile
  5024  006D92                     
  5025                           ;lcd.c: 32:     delay_ms(20);
  5026  006D92  0E00               	movlw	0
  5027  006D94  6E02               	movwf	(delay_ms@t+1)^0,c
  5028  006D96  0E14               	movlw	20
  5029  006D98  6E01               	movwf	delay_ms@t^0,c
  5030  006D9A  ECF5  F036         	call	_delay_ms	;wreg free
  5031  006D9E                     
  5032                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  5033  006D9E  8284               	bsf	132,1,c	;volatile
  5034                           
  5035                           ;lcd.c: 35:     lcd_cmd(0x38);
  5036  006DA0  0E38               	movlw	56
  5037  006DA2  EC7F  F035         	call	_lcd_cmd
  5038                           
  5039                           ;lcd.c: 36:     delay_ms(5);
  5040  006DA6  0E00               	movlw	0
  5041  006DA8  6E02               	movwf	(delay_ms@t+1)^0,c
  5042  006DAA  0E05               	movlw	5
  5043  006DAC  6E01               	movwf	delay_ms@t^0,c
  5044  006DAE  ECF5  F036         	call	_delay_ms	;wreg free
  5045                           
  5046                           ;lcd.c: 37:     lcd_cmd(0x38);
  5047  006DB2  0E38               	movlw	56
  5048  006DB4  EC7F  F035         	call	_lcd_cmd
  5049                           
  5050                           ;lcd.c: 38:     delay_ms(1);
  5051  006DB8  0E00               	movlw	0
  5052  006DBA  6E02               	movwf	(delay_ms@t+1)^0,c
  5053  006DBC  0E01               	movlw	1
  5054  006DBE  6E01               	movwf	delay_ms@t^0,c
  5055  006DC0  ECF5  F036         	call	_delay_ms	;wreg free
  5056                           
  5057                           ;lcd.c: 39:     lcd_cmd(0x38);
  5058  006DC4  0E38               	movlw	56
  5059  006DC6  EC7F  F035         	call	_lcd_cmd
  5060                           
  5061                           ;lcd.c: 40:     lcd_cmd(0x08);
  5062  006DCA  0E08               	movlw	8
  5063  006DCC  EC7F  F035         	call	_lcd_cmd
  5064                           
  5065                           ;lcd.c: 41:     lcd_cmd(0x0F);
  5066  006DD0  0E0F               	movlw	15
  5067  006DD2  EC7F  F035         	call	_lcd_cmd
  5068                           
  5069                           ;lcd.c: 42:     lcd_cmd(0x01);
  5070  006DD6  0E01               	movlw	1
  5071  006DD8  EC7F  F035         	call	_lcd_cmd
  5072                           
  5073                           ;lcd.c: 43:     lcd_cmd(0x38);
  5074  006DDC  0E38               	movlw	56
  5075  006DDE  EC7F  F035         	call	_lcd_cmd
  5076                           
  5077                           ;lcd.c: 44:     lcd_cmd(0x80);
  5078  006DE2  0E80               	movlw	128
  5079  006DE4  EC7F  F035         	call	_lcd_cmd
  5080  006DE8  0012               	return		;funcret
  5081  006DEA                     __end_of_lcd_init:
  5082                           	opt callstack 0
  5083                           
  5084 ;; *************** function _lcd_cmd *****************
  5085 ;; Defined at:
  5086 ;;		line 9 in file "lcd.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  val             1    wreg     unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  val             1    6[COMRAM] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5100 ;;      Params:         0       0       0       0       0       0       0
  5101 ;;      Locals:         1       0       0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0
  5103 ;;      Totals:         1       0       0       0       0       0       0
  5104 ;;Total ram usage:        1 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    1
  5107 ;; This function calls:
  5108 ;;		_delay_ms
  5109 ;;		_lcd_wr
  5110 ;; This function is called by:
  5111 ;;		_main
  5112 ;;		_lcd_init
  5113 ;;		_menuTranca
  5114 ;;		_menuPorta
  5115 ;;		_menuManipLuzes
  5116 ;;		_menuLuzes
  5117 ;;		_menuAumentaDiminuiAC
  5118 ;;		_menuArCondicionado
  5119 ;;		_sair
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text28
  5124  006AFE                     __ptext28:
  5125                           	opt callstack 0
  5126  006AFE                     _lcd_cmd:
  5127                           	opt callstack 27
  5128                           
  5129                           ;incstack = 0
  5130                           ;lcd_cmd@val stored from wreg
  5131  006AFE  6E07               	movwf	lcd_cmd@val^0,c
  5132  006B00                     
  5133                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  5134  006B00  8284               	bsf	132,1,c	;volatile
  5135  006B02                     
  5136                           ;lcd.c: 11:     lcd_wr(val);
  5137  006B02  5007               	movf	lcd_cmd@val^0,w,c
  5138  006B04  EC5A  F035         	call	_lcd_wr
  5139  006B08                     
  5140                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  5141  006B08  9484               	bcf	132,2,c	;volatile
  5142  006B0A                     
  5143                           ;lcd.c: 13:     delay_ms(3);
  5144  006B0A  0E00               	movlw	0
  5145  006B0C  6E02               	movwf	(delay_ms@t+1)^0,c
  5146  006B0E  0E03               	movlw	3
  5147  006B10  6E01               	movwf	delay_ms@t^0,c
  5148  006B12  ECF5  F036         	call	_delay_ms	;wreg free
  5149  006B16                     
  5150                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  5151  006B16  9284               	bcf	132,1,c	;volatile
  5152  006B18                     
  5153                           ;lcd.c: 15:     delay_ms(3);
  5154  006B18  0E00               	movlw	0
  5155  006B1A  6E02               	movwf	(delay_ms@t+1)^0,c
  5156  006B1C  0E03               	movlw	3
  5157  006B1E  6E01               	movwf	delay_ms@t^0,c
  5158  006B20  ECF5  F036         	call	_delay_ms	;wreg free
  5159  006B24                     
  5160                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  5161  006B24  8284               	bsf	132,1,c	;volatile
  5162  006B26  0012               	return		;funcret
  5163  006B28                     __end_of_lcd_cmd:
  5164                           	opt callstack 0
  5165                           
  5166 ;; *************** function _lcd_wr *****************
  5167 ;; Defined at:
  5168 ;;		line 5 in file "lcd.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  val             1    wreg     unsigned char 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  val             1    0[COMRAM] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5182 ;;      Params:         0       0       0       0       0       0       0
  5183 ;;      Locals:         1       0       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0
  5185 ;;      Totals:         1       0       0       0       0       0       0
  5186 ;;Total ram usage:        1 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_lcd_cmd
  5192 ;;		_lcd_dat
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text29
  5197  006AB4                     __ptext29:
  5198                           	opt callstack 0
  5199  006AB4                     _lcd_wr:
  5200                           	opt callstack 26
  5201                           
  5202                           ;incstack = 0
  5203                           ;lcd_wr@val stored from wreg
  5204  006AB4  6E01               	movwf	lcd_wr@val^0,c
  5205  006AB6                     
  5206                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  5207  006AB6  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  5208  006ABA  0012               	return		;funcret
  5209  006ABC                     __end_of_lcd_wr:
  5210                           	opt callstack 0
  5211                           
  5212 ;; *************** function _delay_ms *****************
  5213 ;; Defined at:
  5214 ;;		line 13 in file "delay.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  t               2    0[COMRAM] int 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  i               2    2[COMRAM] volatile unsigned int 
  5219 ;;  k               1    5[COMRAM] volatile unsigned char 
  5220 ;;  j               1    4[COMRAM] volatile unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5230 ;;      Params:         2       0       0       0       0       0       0
  5231 ;;      Locals:         4       0       0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0
  5233 ;;      Totals:         6       0       0       0       0       0       0
  5234 ;;Total ram usage:        6 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_lcd_cmd
  5240 ;;		_lcd_dat
  5241 ;;		_lcd_init
  5242 ;;		_tc_tecla
  5243 ;;		_menuTranca
  5244 ;;		_menuPorta
  5245 ;;		_menuManipLuzes
  5246 ;;		_sair
  5247 ;;		_printTemp
  5248 ;;		_printSenha
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text30
  5253  006DEA                     __ptext30:
  5254                           	opt callstack 0
  5255  006DEA                     _delay_ms:
  5256                           	opt callstack 29
  5257  006DEA                     
  5258                           ;delay.c: 14:     volatile unsigned char j, k;;delay.c: 15:     volatile unsigned int i;
      +                          ;delay.c: 17:     for (i = 0; i < (t); i++) {
  5259  006DEA  0E00               	movlw	0
  5260  006DEC  6E04               	movwf	(delay_ms@i+1)^0,c	;volatile
  5261  006DEE  0E00               	movlw	0
  5262  006DF0  6E03               	movwf	delay_ms@i^0,c	;volatile
  5263  006DF2  EF1B  F037         	goto	l2013
  5264  006DF6                     l1991:
  5265                           
  5266                           ;delay.c: 18:         for (j = 0; j < 41; j++) {
  5267  006DF6  0E00               	movlw	0
  5268  006DF8  6E05               	movwf	delay_ms@j^0,c	;volatile
  5269  006DFA                     l1993:
  5270  006DFA  0E28               	movlw	40
  5271  006DFC  6405               	cpfsgt	delay_ms@j^0,c	;volatile
  5272  006DFE  EF03  F037         	goto	u731
  5273  006E02  EF05  F037         	goto	u730
  5274  006E06                     u731:
  5275  006E06  EF07  F037         	goto	l1997
  5276  006E0A                     u730:
  5277  006E0A  EF19  F037         	goto	l2011
  5278  006E0E                     l1997:
  5279                           
  5280                           ;delay.c: 19:             for (k = 0; k < 3; k++);
  5281  006E0E  0E00               	movlw	0
  5282  006E10  6E06               	movwf	delay_ms@k^0,c	;volatile
  5283  006E12                     l1999:
  5284  006E12  0E02               	movlw	2
  5285  006E14  6406               	cpfsgt	delay_ms@k^0,c	;volatile
  5286  006E16  EF0F  F037         	goto	u741
  5287  006E1A  EF11  F037         	goto	u740
  5288  006E1E                     u741:
  5289  006E1E  EF13  F037         	goto	l2003
  5290  006E22                     u740:
  5291  006E22  EF16  F037         	goto	l2007
  5292  006E26                     l2003:
  5293  006E26  2A06               	incf	delay_ms@k^0,f,c	;volatile
  5294  006E28  EF09  F037         	goto	l1999
  5295  006E2C                     l2007:
  5296                           
  5297                           ;delay.c: 20:         }
  5298  006E2C  2A05               	incf	delay_ms@j^0,f,c	;volatile
  5299  006E2E  EFFD  F036         	goto	l1993
  5300  006E32                     l2011:
  5301                           
  5302                           ;delay.c: 21:     }
  5303  006E32  4A03               	infsnz	delay_ms@i^0,f,c	;volatile
  5304  006E34  2A04               	incf	(delay_ms@i+1)^0,f,c	;volatile
  5305  006E36                     l2013:
  5306  006E36  5001               	movf	delay_ms@t^0,w,c
  5307  006E38  5C03               	subwf	delay_ms@i^0,w,c	;volatile
  5308  006E3A  5002               	movf	(delay_ms@t+1)^0,w,c
  5309  006E3C  5804               	subwfb	(delay_ms@i+1)^0,w,c	;volatile
  5310  006E3E  A0D8               	btfss	status,0,c
  5311  006E40  EF24  F037         	goto	u751
  5312  006E44  EF26  F037         	goto	u750
  5313  006E48                     u751:
  5314  006E48  EFFB  F036         	goto	l1991
  5315  006E4C                     u750:
  5316  006E4C  0012               	return		;funcret
  5317  006E4E                     __end_of_delay_ms:
  5318                           	opt callstack 0
  5319                           
  5320                           	psect	rparam
  5321  0000                     tosu	equ	0xFFF
  5322                           tosh	equ	0xFFE
  5323                           tosl	equ	0xFFD
  5324                           stkptr	equ	0xFFC
  5325                           pclatu	equ	0xFFB
  5326                           pclath	equ	0xFFA
  5327                           pcl	equ	0xFF9
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           indf0	equ	0xFEF
  5335                           postinc0	equ	0xFEE
  5336                           postdec0	equ	0xFED
  5337                           preinc0	equ	0xFEC
  5338                           plusw0	equ	0xFEB
  5339                           fsr0h	equ	0xFEA
  5340                           fsr0l	equ	0xFE9
  5341                           wreg	equ	0xFE8
  5342                           indf1	equ	0xFE7
  5343                           postinc1	equ	0xFE6
  5344                           postdec1	equ	0xFE5
  5345                           preinc1	equ	0xFE4
  5346                           plusw1	equ	0xFE3
  5347                           fsr1h	equ	0xFE2
  5348                           fsr1l	equ	0xFE1
  5349                           bsr	equ	0xFE0
  5350                           indf2	equ	0xFDF
  5351                           postinc2	equ	0xFDE
  5352                           postdec2	equ	0xFDD
  5353                           preinc2	equ	0xFDC
  5354                           plusw2	equ	0xFDB
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8


Data Sizes:
    Strings     375
    Constant    44
    Data        7
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     52      63
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_55(CODE[9]), STR_54(CODE[8]), STR_53(CODE[10]), STR_52(CODE[9]), 
		 -> STR_51(CODE[11]), STR_50(CODE[16]), STR_49(CODE[11]), STR_48(CODE[7]), 
		 -> STR_47(CODE[11]), STR_46(CODE[13]), STR_45(CODE[9]), STR_44(CODE[11]), 
		 -> STR_43(CODE[6]), STR_42(CODE[11]), STR_41(CODE[11]), STR_40(CODE[11]), 
		 -> STR_39(CODE[7]), STR_38(CODE[8]), STR_37(CODE[7]), STR_36(CODE[11]), 
		 -> STR_35(CODE[7]), STR_34(CODE[8]), STR_33(CODE[7]), STR_32(CODE[6]), 
		 -> STR_31(CODE[9]), STR_30(CODE[6]), STR_29(CODE[12]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[14]), STR_25(CODE[7]), STR_24(CODE[9]), 
		 -> STR_23(CODE[7]), STR_22(CODE[7]), STR_21(CODE[8]), STR_20(CODE[9]), 
		 -> STR_19(CODE[9]), STR_18(CODE[11]), STR_17(CODE[8]), STR_16(CODE[7]), 
		 -> STR_15(CODE[10]), STR_14(CODE[6]), STR_13(CODE[18]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[18]), STR_9(CODE[13]), STR_8(CODE[13]), 
		 -> STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[7]), STR_4(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[8]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_menuPorta
    _sair->_menuTranca
    _menuPorta->_menuTranca
    _menuTranca->_printSenha
    _printSenha->___awdiv
    _pow->___wmul
    _menuLuzes->_menuManipLuzes
    _menuManipLuzes->_tc_tecla
    _menuArCondicionado->_menuAumentaDiminuiAC
    _menuAumentaDiminuiAC->_printTemp
    _tc_tecla->_delay_ms
    _printTemp->___awdiv
    ___awmod->_pow
    ___awdiv->___awmod
    _lcd_str->_lcd_dat
    _lcd_dat->_delay_ms
    _lcd_init->_lcd_cmd
    _lcd_cmd->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     3      5  152233
                                             44 COMRAM     8     3      5
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                 _menuArCondicionado
                          _menuLuzes
                          _menuPorta
                               _sair
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _sair                                                 1     1      0   37476
                                             41 COMRAM     1     1      0
                          _abreFecha
                           _delay_ms
                  _desligaTodasLuzes
                            _lcd_cmd
                            _lcd_str
                      _ligarDesligar
                         _menuTranca
                           _tc_tecla
                             _tranca
 ---------------------------------------------------------------------------------
 (2) _desligaTodasLuzes                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuPorta                                            3     3      0   37461
                                             41 COMRAM     3     3      0
                          _abreFecha
                           _delay_ms
                            _lcd_cmd
                            _lcd_str
                         _menuTranca
                           _tc_tecla
                             _tranca
 ---------------------------------------------------------------------------------
 (2) _tranca                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _menuTranca                                           8     8      0   22337
                                             33 COMRAM     8     8      0
                             ___wmul
                          _abreFecha
                        _defineSenha
                           _delay_ms
                          _destranca
                            _lcd_cmd
                            _lcd_str
                                _pow
                         _printSenha
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (3) _printSenha                                           7     4      3    5030
                                             26 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                           _delay_ms
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                  6     2      4    1032
                                              6 COMRAM     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _destranca                                            2     0      2     250
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _defineSenha                                          2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _abreFecha                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuLuzes                                            3     3      0   30602
                                             20 COMRAM     3     3      0
                            _lcd_cmd
                            _lcd_str
                     _menuManipLuzes
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _menuManipLuzes                                       7     7      0   17919
                                             13 COMRAM     7     7      0
                           _delay_ms
                         _desligaLuz
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
                            _ligaLuz
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (3) _ligaLuz                                              3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _desligaLuz                                           3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _menuArCondicionado                                   3     3      0   29131
                                             30 COMRAM     3     3      0
                            _lcd_cmd
                            _lcd_str
                      _ligarDesligar
               _menuAumentaDiminuiAC
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _menuAumentaDiminuiAC                                 3     3      0   16409
                                             27 COMRAM     3     3      0
                       _aumentarTemp
                       _diminuirTemp
                            _lcd_cmd
                            _lcd_str
                          _printTemp
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             7     5      2    3466
                                              6 COMRAM     7     5      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _printTemp                                            1     1      0    3666
                                             26 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     600
                                             12 COMRAM     6     2      4
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     604
                                             18 COMRAM     8     4      4
                            ___awmod (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (3) _lcd_str                                              5     3      2    6732
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (4) _lcd_dat                                              1     1      0    2462
                                              6 COMRAM     1     1      0
                           _delay_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _diminuirTemp                                         3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _aumentarTemp                                         3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ligarDesligar                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    4880
                           _delay_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0    2462
                                              6 COMRAM     1     1      0
                           _delay_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (5) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2    2418
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
     _delay_ms
     _lcd_wr
   _lcd_init
     _delay_ms
     _lcd_cmd
       _delay_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _delay_ms
       _lcd_wr
   _menuArCondicionado
     _lcd_cmd
       _delay_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _delay_ms
         _lcd_wr
     _ligarDesligar
     _menuAumentaDiminuiAC
       _aumentarTemp
       _diminuirTemp
       _lcd_cmd
         _delay_ms
         _lcd_wr
       _lcd_str
         _lcd_dat
           _delay_ms
           _lcd_wr
       _printTemp
         ___awdiv
           ___awmod (ARG)
             _pow (ARG)
               ___wmul
           _pow (ARG)
             ___wmul
         ___awmod
           _pow (ARG)
             ___wmul
         _delay_ms
       _tc_tecla
         _delay_ms
     _tc_tecla
       _delay_ms
   _menuLuzes
     _lcd_cmd
       _delay_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _delay_ms
         _lcd_wr
     _menuManipLuzes
       _delay_ms
       _desligaLuz
       _lcd_cmd
         _delay_ms
         _lcd_wr
       _lcd_dat
         _delay_ms
         _lcd_wr
       _lcd_str
         _lcd_dat
           _delay_ms
           _lcd_wr
       _ligaLuz
       _tc_tecla
         _delay_ms
     _tc_tecla
       _delay_ms
   _menuPorta
     _abreFecha
     _delay_ms
     _lcd_cmd
       _delay_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _delay_ms
         _lcd_wr
     _menuTranca
       ___wmul
       _abreFecha
       _defineSenha
       _delay_ms
       _destranca
       _lcd_cmd
         _delay_ms
         _lcd_wr
       _lcd_str
         _lcd_dat
           _delay_ms
           _lcd_wr
       _pow
         ___wmul
       _printSenha
         ___awdiv
           ___awmod (ARG)
             _pow (ARG)
               ___wmul
           _pow (ARG)
             ___wmul
         ___awmod
           _pow (ARG)
             ___wmul
         _delay_ms
         _pow
           ___wmul
       _tc_tecla
         _delay_ms
     _tc_tecla
       _delay_ms
     _tranca
   _sair
     _abreFecha
     _delay_ms
     _desligaTodasLuzes
     _lcd_cmd
       _delay_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _delay_ms
         _lcd_wr
     _ligarDesligar
     _menuTranca
       ___wmul
       _abreFecha
       _defineSenha
       _delay_ms
       _destranca
       _lcd_cmd
         _delay_ms
         _lcd_wr
       _lcd_str
         _lcd_dat
           _delay_ms
           _lcd_wr
       _pow
         ___wmul
       _printSenha
         ___awdiv
           ___awmod (ARG)
             _pow (ARG)
               ___wmul
           _pow (ARG)
             ___wmul
         ___awmod
           _pow (ARG)
             ___wmul
         _delay_ms
         _pow
           ___wmul
       _tc_tecla
         _delay_ms
     _tc_tecla
       _delay_ms
     _tranca
   _tc_tecla
     _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     34      3F       1       49.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      15        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 30 21:57:50 2020

           _menuArCondicionado 7504                             l21 71EE                             l50 6B50  
                           l44 6ABA                             l53 6DE8                             l39 6E4C  
                           l47 6B26                             l81 787E                             l74 7856  
                           l59 6D36                             l91 78FE                             l84 78D6  
                           l76 7840                             l86 78BE                             l79 7896  
                 ___awdiv@sign 0018            ___wmul@multiplicand 0003                    __CFG_OSC$HS 000000  
                          l101 79B4                            l111 6CE6                            l202 77EA  
                          l114 6AD6                            l107 6CA0                            l207 79BE  
                          l303 74A4                            l232 6EEE                            l320 6ACC  
                          l242 6F9C                            l218 7B94                            l226 6E4E  
                          l306 7502                            l252 763A                            l324 6B80  
                          l316 6D84                            l317 6D8C                            l173 7E58  
                          l246 7504                            l334 6BE8                            l273 6AC2  
                          l329 6AAA                            l265 73DA                            l338 6AFC  
                          l283 6C5C                            l278 6C22                            l298 710C  
                          l582 704C                            l569 71D0                            u500 6C16  
                          u501 6C12                            u510 6C50                            u511 6C4C  
                          u800 717E                            u801 717A                            u730 6E0A  
                          u810 719A                            u731 6E06                            u811 7196  
                          u740 6E22                            u820 71C0                            u900 7826  
                          u741 6E1E                            u821 71BC                            u901 7822  
                          u750 6E4C                            u830 6FB0                            u910 7840  
                          u751 6E48                            u831 6FAC                            u911 783C  
                          u840 6FCA                            u920 784E                            u760 6D5A  
                          u841 6FC6                            u921 784A                            u761 6D56  
                          u770 7120                            u850 6FE4                            u930 7864  
                          u771 711C                            u851 6FE0                            u931 7860  
                          u780 713A                            u860 7002                            u940 787E  
                          u781 7136                            u861 6FFE                            u941 787A  
                          u790 7160                            u870 7018                            u950 788C  
                          u791 715C                            u871 7014                            u951 7888  
                          u880 703C                            u960 78A4                            u881 7038  
                          u961 78A0                            u890 6D36                            u970 78BE  
                          u891 6D32                            u971 78BA                            u980 78CC  
                          u981 78C8                            u990 78E4                            u991 78E0  
               ??_diminuirTemp 0001            ?_menuArCondicionado 0001                            _num 7E6F  
                          _pow 6D38                   ___awmod@sign 0012                            wreg 000FE8  
                 __CFG_LVP$OFF 000000                  ?_aumentarTemp 0001                   __CFG_WDT$OFF 000000  
                         l2003 6E26                           l2011 6E32                           l2013 6E36  
                         l2101 6FBC                           l2007 6E2C                           l2015 6AB6  
                         l2031 6B40                           l2023 6B2A                           l2111 6FF4  
                         l2103 6FCA                           l2033 6B42                           l2025 6B2C  
                         l2113 7002                           l2121 702C                           l2105 6FD2  
                         l2201 792A                           l2017 6AD8                           l2131 6B02  
                         l2035 6B4E                           l2027 6B32                           l2051 7112  
                         l2123 703C                           l2115 7018                           l2107 6FE4  
                         l2211 7976                           l2203 793A                           l2019 6AF4  
                         l2043 6D5E                           l2141 6B24                           l2133 6B08  
                         l2029 6B34                           l2061 7142                           l2053 7120  
                         l2125 7044                           l2117 7020                           l2109 6FEC  
                         l2221 79AE                           l2213 7986                           l2205 7946  
                         l2045 6D7A                           l2037 6D38                           l2135 6B0A  
                         l2143 6CE8                           l2071 7170                           l2063 7146  
                         l2055 7128                           l2119 7026                           l2311 7082  
                         l2215 7996                           l2207 794E                           l2151 77EC  
                         l2231 6C9C                           l2039 6D40                           l2303 74FA  
                         l2137 6B16                           l2129 6B00                           l2145 6CF0  
                         l2081 71A4                           l2073 717E                           l2065 714E  
                         l2057 712C                           l2049 710E                           l2321 70C2  
                         l2313 7084                           l2217 7998                           l2209 7964  
                         l2161 7804                           l2153 77F8                           l2233 6CA4  
                         l2225 6C60                           l2305 6AC4                           l2241 6BB4  
                         l2401 7CA8                           l2139 6B18                           l1371 6BEC  
                         l2147 6D0C                           l2083 71AA                           l2075 7184  
                         l2067 7160                           l2059 713A                           l2331 70DC  
                         l2323 70C4                           l2315 7090                           l2307 7050  
                         l2219 79AA                           l2171 784E                           l2163 7818  
                         l2155 7800                           l2235 6CB4                           l2227 6C70  
                         l2243 6BC4                           l2411 7CD0                           l2403 7CAC  
                         l1373 6C16                           l1381 6C58                           l2149 6D0E  
                         l2077 719A                           l2069 7168                           l2085 71B0  
                         l2093 6F9E                           l2341 70F6                           l2333 70DE  
                         l2325 70D0                           l2317 7094                           l2309 7058  
                         l2181 78A4                           l2173 7864                           l2165 7826  
                         l2237 6CC4                           l2229 6C80                           l2261 6B54  
                         l2245 6BDC                           l2253 6BE6                           l2421 7D4E  
                         l2413 7CF4                           l2405 7CBA                           l1375 6C1E  
                         l2087 71C0                           l2079 71A2                           l2095 6FA2  
                         l2343 70F8                           l2335 70EA                           l2327 70D4  
                         l2319 7098                           l2191 78F0                           l2183 78B0  
                         l2175 7870                           l2167 7832                           l2239 6CE2  
                         l2511 7A5E                           l2271 6B7C                           l2263 6B64  
                         l2247 6BE0                           l2431 7D80                           l2423 7D54  
                         l2415 7D0E                           l2407 7CBE                           l2351 7B9E  
                         l1519 6AA6                           l1383 6ACE                           l1377 6C26  
                         l2089 71C8                           l2097 6FB0                           l2345 7104  
                         l2337 70EE                           l2329 70D8                           l2601 6F4C  
                         l2521 7A88                           l2513 7A64                           l2505 7A1E  
                         l2281 7464                           l2441 7DA2                           l2433 7D86  
                         l2425 7D64                           l2417 7D20                           l2409 7CCE  
                         l2361 7BBA                           l2353 7B9E                           l1379 6C50  
                         l2099 6FB8                           l2347 7108                           l2339 70F2  
                         l2195 790C                           l2187 78CC                           l2179 788C  
                         l2603 6F56                           l2531 7AAE                           l2523 7A90  
                         l2515 7A66                           l2507 7A4A                           l2283 7484  
                         l2275 73DC                           l2451 7DC8                           l2443 7DA8  
                         l2427 7D6A                           l2419 7D32                           l2371 7BFA  
                         l2363 7BC0                           l2355 7BA2                           l2621 6D92  
                         l2189 78E4                           l2197 7916                           l2605 6F60  
                         l2613 6F6A                           l2541 7AD0                           l2533 7AB2  
                         l2517 7A76                           l2509 7A56                           l2269 6B6C  
                         l2293 74BC                           l2285 7490                           l2277 73E4  
                         l2461 7DEE                           l2453 7DD4                           l2445 7DB4  
                         l2429 7D76                           l2381 7C3E                           l2373 7C06  
                         l2365 7BCC                           l2357 7BA2                           l2349 7B98  
                         l2701 7718                           l2623 6D9E                           l2199 7928  
                         l2551 7B00                           l2543 7ADC                           l2535 7AB8  
                         l2527 7A9A                           l2519 7A7A                           l2631 6E72  
                         l2295 74C8                           l2279 73EC                           l2287 7492  
                         l2471 7E28                           l2463 7DF4                           l2455 7DDA  
                         l2447 7DBA                           l2439 7D96                           l2391 7C6E  
                         l2383 7C48                           l2375 7C1C                           l2367 7BE2  
                         l2359 7BA6                           l2711 7752                           l2703 7724  
                         l1657 6ABE                           l2561 7B22                           l2545 7AE2  
                         l2537 7ABE                           l2529 7AAA                           l2553 7B0E  
                         l2641 6E9E                           l2633 6E78                           l2625 6E4E  
                         l2297 74E8                           l2289 74A8                           l2473 7E2E  
                         l2465 7E00                           l2449 7DC6                           l2393 7C74  
                         l2377 7C2C                           l2385 7C52                           l2369 7BF4  
                         l2721 777C                           l2713 7758                           l2705 7734  
                         l2619 6D8E                           l2571 7B52                           l2563 7B2E  
                         l2555 7B12                           l2547 7AEE                           l2539 7ACA  
                         l2491 79F0                           l2483 79B8                           l2643 6EA8  
                         l2635 6E84                           l2627 6E54                           l2299 74F4  
                         l2475 7E3A                           l2467 7E16                           l2387 7C58  
                         l2379 7C32                           l2731 77A6                           l2715 775E  
                         l2723 7792                           l2707 773E                           l2811 72BE  
                         l2741 7504                           l2573 7B58                           l2565 7B34  
                         l2557 7B16                           l2549 7AF4                           l2493 79F6  
                         l2485 79C4                           l2645 6EB2                           l2653 6EBC  
                         l2637 6E88                           l2629 6E60                           l2477 7E40  
                         l2469 7E22                           l2389 7C64                           l2397 7C90  
                         l2725 779C                           l2717 776A                           l2709 774E  
                         l2661 763C                           l2821 72E0                           l2813 72C2  
                         l2901 7240                           l2591 6F20                           l2583 6EF0  
                         l2751 753C                           l2743 7514                           l2575 7B64  
                         l2567 7B40                           l2559 7B1C                           l2495 7A08  
                         l2487 79D4                           l2639 6E96                           l2479 7E4C  
                         l2399 7C98                           l2719 7770                           l2735 77B0  
                         l2671 767A                           l2663 7642                           l2831 730A  
                         l2823 72EC                           l2815 72C8                           l2911 7274  
                         l2903 724E                           l2593 6F2C                           l2585 6EFC  
                         l2753 7552                           l2745 751A                           l2569 7B46  
                         l2577 7B72                           l2497 7A14                           l2489 79E4  
                         l2681 76BE                           l2673 768C                           l2665 7658  
                         l2841 7338                           l2833 7316                           l2825 72F2  
                         l2817 72CE                           l2809 72BA                           l2905 725C  
                         l2595 6F32                           l2587 6F08                           l2771 75A8  
                         l2755 7558                           l2747 7526                           l2499 7A1A  
                         l2691 76F4                           l2683 76CA                           l2675 769C  
                         l2667 7668                           l2659 763C                           l2851 7362  
                         l2843 733E                           l2835 731C                           l2827 72FE  
                         l2819 72DA                           l2907 7264                           l2915 727C  
                         l2597 6F36                           l2589 6F1A                           l2781 75DE  
                         l2773 75BA                           l2757 7562                           l2765 756C  
                         l2749 7538                           l2693 76FA                           l2685 76CE  
                         l2677 76AC                           l2669 7674                           l2861 7382  
                         l2853 7366                           l2845 7344                           l2837 7328  
                         l2829 7304                           l2909 726C                           l1991 6DF6  
                         l2599 6F44                           l2791 75FE                           l2783 75E6  
                         l2775 75C0                           l2767 7596                           l2951 77C4  
                         l2695 7700                           l2687 76DC                           l2679 76B8  
                         l2871 73A6                           l2863 7388                           l2855 736C  
                         l2847 7350                           l2839 732C                           l1993 6DFA  
                         l2961 6F7E                           l2785 75EA                           l2777 75CC  
                         l2769 759C                           l2953 6ED0                           l2697 7706  
                         l2689 76E4                           l2873 73AA                           l2865 7394  
                         l2857 7378                           l2849 7356                           l2787 75EE  
                         l2779 75D0                           l2955 7B86                           l2699 7712  
                         l2875 73BA                           l2867 7394                           l2859 737C  
                         l2891 7206                           l2883 71D2                           l1997 6E0E  
                         l1989 6DEA                           l2789 75F4                           l2957 7580  
                         l2877 73CE                           l2869 7398                           l2949 7290  
                         l2893 7218                           l2885 71E6                           l1999 6E12  
                         l2959 761C                           l2799 7608                           l2879 73D4  
                         l2895 721E                           l2887 71EA                           l2897 7230  
                         l2889 71FA                           l2899 723C                           ?_pow 0007  
                         STR_1 7FF3                           STR_2 7FA8                           STR_3 7FF9  
                         STR_4 7FDA                           STR_5 7FB7                           STR_6 7ECB  
                         STR_7 7FB7                           STR_8 7EC6                           STR_9 7ED3  
                         u1000 78FE                           u1001 78FA                           u1010 790C  
                         u1011 7908                           u1020 793A                           u1021 7936  
                         u1030 7964                           u1110 6CB4                           u1031 7960  
                         u1111 6CB0                           u1040 7976                           u1120 6CC4  
                         u1104 6C92                           u1200 74B8                           u1041 7972  
                         u1121 6CC0                           u1105 6C8E                           u1201 74B4  
                         u1050 7986                           u1051 7982                           u1060 7996  
                         u1140 6BC4                           u1300 7DEA                           u1220 7BBA  
                         u1061 7992                           u1141 6BC0                           u1301 7DE6  
                         u1221 7BB6                           u1070 79AA                           u1134 6CD6  
                         u1310 79D4                           u1150 6BDC                           u1214 74DE  
                         u1230 7BF4                           u1071 79A6                           u1135 6CD2  
                         u1311 79D0                           u1151 6BD8                           u1215 74DA  
                         u1231 7BF0                           u1400 7514                           u1080 6C70  
                         u1160 6B64                           u1240 7C2C                           u1401 7510  
                         u1081 6C6C                           u1161 6B60                           u1241 7C28  
                         u1090 6C80                           u1330 7A4A                           u1170 6B7C  
                         u1250 7CCE                           u1410 73BA                           u1091 6C7C  
                         u1331 7A46                           u1171 6B78                           u1251 7CCA  
                         u1411 73B6                           u1340 7A76                           u1324 7A30  
                         u1260 7D20                           u1420 73CE                           u1341 7A72  
                         u1325 7A2C                           u1261 7D1C                           u1421 73CA  
                         u1350 7AAA                           u1190 74A4                           u1270 7D32  
                         u1351 7AA6                           u1191 74A0                           u1271 7D2E  
                         u1184 747A                           u1280 7D4E                           u1360 7658  
                         u1185 7476                           u1281 7D4A                           u1361 7654  
                         u1290 7D64                           u1370 769C                           u1291 7D60  
                         u1371 7698                           u1380 76F4                           u1381 76F0  
                         u1390 774E                           u1391 774A                   __CFG_WDTPS$1 000000  
       __size_of_ligarDesligar 0008                           _main 71D2                           _sair 72BA  
                         fsr1l 000FE1           ??_menuArCondicionado 001F                           prodh 000FF4  
                         prodl 000FF3                           start 0000                   ___param_bank 000000  
                printTemp@temp 001B                          ??_pow 000B                          ?_main 002D  
              __end_of___awdiv 71D2                          ?_sair 0001                          STR_10 7E87  
                        STR_11 7EED                          STR_12 7ED3                          STR_20 7F6C  
                        STR_13 7E87                          STR_21 7FA0                          STR_30 7F9A  
                        STR_14 7FED                          STR_22 7FD3                          STR_31 7F1C  
                        STR_23 7FC5                          STR_15 7F46                          STR_16 7FB7  
                        STR_32 7FE1                          STR_24 7F63                          STR_40 7F25  
                        STR_17 7ECB                          STR_33 7FCC                          STR_25 7FBE  
                        STR_41 7F30                          STR_18 7EC8                          STR_34 7F07  
                        STR_42 7F3B                          STR_26 7EB8                          STR_50 7E99  
                        STR_51 7F04                          STR_27 7EED                          STR_43 7FE7  
                        STR_35 7FB0                          STR_19 7F5A                          STR_52 7F87  
                        STR_36 7F0F                          STR_44 7EF9                          STR_28 7EA9  
              __end_of___awmod 704E                          STR_37 7FB0                          STR_29 7EED  
                        STR_45 7F7E                          STR_53 7F50                          STR_38 7F98  
                        STR_54 7F90                          STR_46 7EE0                          STR_39 7FD3  
                        STR_55 7F75                          STR_47 7F1A                          STR_48 7FD3  
                        STR_49 7F04                ___awdiv@divisor 0015                 __CFG_DEBUG$OFF 000000  
              ___awdiv@counter 0017                __end_of_lcd_dat 6B52                __end_of_lcd_cmd 6B28  
              __end_of_lcd_str 6D38                 ??_aumentarTemp 0001                __end_of_ligaLuz 6CA2  
                        _linha 7E83                          _senha 0035           __size_of_defineSenha 000A  
                        tablat 000FF5              menuManipLuzes@tmp 0014         ??_menuAumentaDiminuiAC 001C  
                        status 000FD8                 ligarDesligar@i 0001                __initialization 6B82  
                 __end_of_main 72BA                   __end_of_sair 73DC                  _ligarDesligar 6ABC  
                       ??_main 0032                         ??_sair 002A                  __activetblptr 000002  
              tc_tecla@timeout 0007               ___awdiv@dividend 0013               __end_of_delay_ms 6E4E  
         __end_of_diminuirTemp 6C5E             printSenha@digitado 001D               __end_of_lcd_init 6DEA  
             abreFecha@comando 0001                         ___wmul 6AD8                      ??___awdiv 0017  
                    ??___awmod 0011                 ?_ligarDesligar 0001                         _lcd_wr 6AB4  
                       _atraso 0037                         _estado 003E               ___awdiv@quotient 0019  
              ___awmod@divisor 000F                ___awmod@counter 0011                         _tranca 6AA6  
                    ??_lcd_dat 0007                      ??_lcd_cmd 0007               __end_of_tc_tecla 79B6  
                    ??_lcd_str 000A                      ??_ligaLuz 0001                   __pdataCOMRAM 0035  
                       pow@bas 0007                   __mediumconst 7E5A                         pow@exp 0009  
                       ssd@num 7E5B                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                     __accesstop 0080        __end_of__initialization 6BAA  
                ___rparam_used 000001             __size_of_abreFecha 0030          menuArCondicionado@tmp 0021  
               __pcstackCOMRAM 0001           __end_of_aumentarTemp 6C24                  __end_of_linha 7E87  
              _menuTranca$1002 0022                menuManipLuzes@i 0013             __size_of_destranca 0036  
                aumentarTemp@a 0003                    tc_tecla@ret 000C                    tc_tecla@tmp 000B  
           __size_of_menuPorta 01B0             __size_of_menuLuzes 00A2                ??_ligarDesligar 0001  
                      ?___wmul 0001                        ?_lcd_wr 0001                     _desligaLuz 6CA2  
                      ?_tranca 0001        __size_of_menuManipLuzes 01E0              __end_of_abreFecha 6B82  
           __size_of_printTemp 00C0                      ?_delay_ms 0001        menuAumentaDiminuiAC@tmp 001E  
             destranca@entrada 0001                      ?_lcd_init 0001          __size_of_diminuirTemp 003A  
                   _atraso_min 0039    __size_of_menuArCondicionado 0138                      ?_tc_tecla 0007  
                      __Hparam 0000                        __Lparam 0000              __end_of_destranca 6BEA  
                      ___awdiv 710E                        ___awmod 6F9E                __size_of___wmul 0026  
              __size_of_lcd_wr 0008                        __pcinit 6B82             menuTranca@digitado 0026  
                   _menuTranca 7B96                        __ramtop 0600                        __ptext0 71D2  
                      __ptext1 72BA                        __ptext2 6ACE                        __ptext3 763C  
                      __ptext4 6AA6                        __ptext5 7B96                        __ptext6 73DC  
                      __ptext7 6D38                        __ptext8 6AD8                        __ptext9 6BB4  
                      _lcd_dat 6B28                        _lcd_cmd 6AFE                __size_of_tranca 0006  
                      _lcd_str 6CE8                        _ligaLuz 6C5E                   __size_of_pow 0056  
            __end_of_menuPorta 77EC              __end_of_menuLuzes 6EF0               ___awmod@dividend 000D  
                 _diminuirTemp 6C24                     ??_delay_ms 0003                  ??_defineSenha 0003  
                      main@tmp 0034                     ??_lcd_init 0008           end_of_initialization 6BAA  
                __Lmediumconst 7E5A                        sair@tmp 002A                   menuPorta@tmp 002C  
                 menuLuzes@tmp 0017  __size_of_menuAumentaDiminuiAC 00AE          __size_of_aumentarTemp 003A  
                   ??_tc_tecla 0009                        pow@resp 000B              __end_of_printTemp 710E  
          menuManipLuzes@opcao 0012                        postdec1 000FE5                        postinc0 000FEE  
                  ?_desligaLuz 0001                     _printSenha 73DC                     lcd_dat@val 0007  
                   lcd_cmd@val 0007              _desligaTodasLuzes 6ACE                   _aumentarTemp 6BEA  
           ?_desligaTodasLuzes 0001                    printSenha@i 0021                    printSenha@j 0020  
                  printSenha@s 001B            __end_of_defineSenha 6ACE            ??_desligaTodasLuzes 0001  
                   lcd_str@str 0008                 __end_of___wmul 6AFE                  __pidataCOMRAM 6AAD  
                  ?_menuTranca 0001                 _menuManipLuzes 79B6                 __end_of_lcd_wr 6ABC  
                   ligaLuz@luz 0003                 __end_of_tranca 6AAC      __end_of_desligaTodasLuzes 6AD8  
          start_initialization 6B82                    __end_of_num 7E83                    __end_of_pow 6D8E  
               __end_ofssd@num 7E6F            __size_of_desligaLuz 0046             defineSenha@entrada 0001  
                     ??___wmul 0005         __end_of_menuManipLuzes 7B96                       ??_lcd_wr 0001  
                     ??_tranca 0001                    ?_printSenha 001B                   _estadoTranca 003C  
                  __pbssCOMRAM 003C                    _defineSenha 6AC4                      _abreFecha 6B52  
            __size_of_delay_ms 0064              __size_of_lcd_init 005C            __size_of_menuTranca 02C4  
                   tc_tecla@to 0009              __size_of_tc_tecla 01CA                  __pmediumconst 7E5A  
                     ?___awdiv 0013                       ?___awmod 000D                ?_menuManipLuzes 0001  
        __end_of_ligarDesligar 6AC4                menuTranca@opcao 0027                      _destranca 6BB4  
                     ?_lcd_dat 0001                       ?_lcd_cmd 0001                       ?_lcd_str 0008  
                     ?_ligaLuz 0001     __size_of_desligaTodasLuzes 000A                      _estadoLuz 003F  
                   ?_abreFecha 0001                      _menuPorta 763C                      _menuLuzes 6E4E  
            menuTranca@entrada 0028     __end_of_menuArCondicionado 763C                 ___wmul@product 0005  
                    delay_ms@i 0003                      delay_ms@j 0005                      delay_ms@k 0006  
                    delay_ms@t 0001            __size_of_printSenha 0128                      _printTemp 704E  
                 ??_desligaLuz 0001                     ?_destranca 0001              ___wmul@multiplier 0001  
 __end_of_menuAumentaDiminuiAC 6F9E                      lcd_wr@val 0001                     ?_menuPorta 0001  
                   ?_menuLuzes 0001                      copy_data0 6B96             _menuManipLuzes$215 0010  
           __end_of_desligaLuz 6CE8                       __Hrparam 0000                       __Lrparam 0000  
         menuTranca@tentativas 0024                    _estadoPorta 003D                     ?_printTemp 0001  
             __size_of___awdiv 00C4               __size_of___awmod 00B0                   ??_menuTranca 0022  
             __size_of_lcd_dat 002A               __size_of_lcd_cmd 002A               __size_of_lcd_str 0050  
             __size_of_ligaLuz 0044                  desligaLuz@luz 0003                      tc_tecla@i 000D  
                     _delay_ms 6DEA                       __ptext10 6AC4                       __ptext11 6B52  
                     __ptext20 6F9E                       __ptext12 6E4E                       __ptext21 710E  
                     __ptext13 79B6                       __ptext30 6DEA                       __ptext22 6CE8  
                     __ptext14 6C5E                       __ptext23 6B28                       __ptext15 6CA2  
                     __ptext24 6C24                       __ptext16 7504                       __ptext25 6BEA  
                     __ptext17 6EF0                       __ptext26 6ABC                       __ptext18 77EC  
                     __ptext27 6D8E                       __ptext19 704E                       __ptext28 6AFE  
                     __ptext29 6AB4                    ??_abreFecha 0001                       _lcd_init 6D8E  
                __size_of_main 00E8                  __size_of_sair 0122             __end_of_menuTranca 7E5A  
                     _tc_tecla 77EC                       main@argc 002D                    ??_destranca 0003  
                     main@argv 002F                       lcd_str@i 000C                   ??_printSenha 001E  
                 ?_defineSenha 0001                    ??_menuPorta 002A                    ??_menuLuzes 0015  
                menuTranca@tmp 0025           _menuAumentaDiminuiAC 6EF0               ??_menuManipLuzes 000E  
           __end_of_printSenha 7504                    ??_printTemp 001B                    _temperatura 003B  
                ?_diminuirTemp 0001                  diminuirTemp@d 0003          ?_menuAumentaDiminuiAC 0001  
